{"version":3,"file":"index.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA,cAAc,kDAAkD,IAAI,wBAAwB,GAAG,KAAmC,CAAC,aAAwG,6EAA6E,gBAAgB,qEAAqE,cAAc,kBAAkB,cAAc,wBAAwB,mCAAmC,+BAA+B,qBAAqB,iEAAiE,uEAAuE,+DAA+D,cAAc,4BAA4B,kBAAkB,uEAAuE,mCAAmC,4BAA4B,gBAAgB,GAAG,cAAc,WAAW,4DAA4D,gBAAgB,mEAAmE,gBAAgB,8BAA8B,kBAAkB,WAAW,qDAAqD,gBAAgB,wCAAwC,cAAc,2BAA2B,cAAc,2BAA2B,cAAc,gBAAgB,cAAc,yDAAyD,YAAY,YAAY,oBAAoB,WAAW,KAAK,kBAAkB,0EAA0E,+DAA+D,EAAE,iDAAiD,gBAAgB,+HAA+H,eAAe,SAAS,aAAa,KAAK,cAAc,uDAAuD,cAAc,YAAY,oBAAoB,gBAAgB,iBAAiB,aAAa,MAAM,KAAsC,EAAE,CAAI,GAAG,gBAAgB,sCAAsC,cAAc,6BAA6B,cAAc,eAAe,cAAc,UAAU,uBAAuB,cAAc,WAAW,8BAA8B,gBAAgB,eAAe,iCAAiC,6KAA6K,kBAAkB,iBAAiB,WAAW,gCAAgC,sBAAsB,QAAQ,oBAAoB,+BAA+B,SAAS,eAAe,sCAAsC,sCAAsC,sBAAsB,iDAAiD,WAAW,wBAAwB,GAAG,MAA0C,EAAE,CAAI,OAAO,yDAAyD,yBAAyB,OAAO,gBAAgB,wBAAwB,yBAAyB,kBAAkB,sCAAsC,gBAAgB,WAAW,oBAAoB,gBAAgB,6CAA6C,EAAE,EAAE,2CAA2C,cAAc,4BAA4B,cAAc,0BAA0B,cAAc,kBAAkB,kBAAkB,wEAAwE,0BAA0B,kCAAkC,mCAAmC,UAAU,gBAAgB,gDAAgD,qBAAqB,sBAAsB,8BAA8B,cAAc,mCAAmC,kBAAkB,oBAAoB,MAAM,4CAA4C,uBAAuB,cAAc,0BAA0B,6BAA6B,sBAAsB,IAAI,gBAAgB,UAAU,yBAAyB,4BAA4B,YAAY,aAAa,gBAAgB,WAAW,gCAAgC,4CAA4C,cAAc,MAAM,MAAmC,EAAE,CAAI,aAAa,iBAAiB,cAAc,MAAmC,EAAE,CAAI,gBAAgB,GAAG,cAAc,qBAAqB,KAAK,KAAK,cAAc,oBAAoB,kBAAkB,MAAM,oBAAoB,cAAc,yCAAyC,KAAK,KAAK,WAAW,UAAU,WAAW,gCAAgC,qBAAqB,+BAA+B,aAAa,uCAAuC,cAAc,UAAU,kCAAkC,oDAAoD,sBAAsB,YAAY,WAAW,qCAAqC,SAAS,cAAc,+BAA+B,SAAS,SAAS,gBAAgB,uCAAuC,MAAM,8BAA8B,WAAW,0CAA0C,SAAS,YAAY,YAAY,oBAAoB,WAAW,KAAK,WAAW,+BAA+B,iDAAiD,SAAS,kCAAkC,+BAA+B,kCAAkC,oBAAoB,IAAI,mBAAmB,+CAA+C,0BAA0B,WAAW,MAAM,4BAA4B,0BAA0B,4DAA4D,oBAAoB,sCAAsC,GAAG,eAAe,iEAAiE,WAAW,YAAY,wBAAwB,WAAW,YAAY,0CAA0C,IAAI,6DAA6D,iBAAiB,eAAe,0BAA0B,EAAE,aAAa,cAAc,kBAAkB,oCAAoC,gEAAgE,qBAAqB,IAAI,6CAA6C,8CAA8C,4BAA4B,6BAA6B,cAAc,mBAAmB,YAAY,aAAa,gBAAgB,8BAA8B,gCAAgC,aAAa,KAAK,qBAAqB,mJAAmJ,wCAAwC,UAAU,wBAAwB,yBAAyB,aAAa,sBAAsB,iBAAiB,+CAA+C,yBAAyB,uBAAuB,sBAAsB,uBAAuB,4BAA4B,0BAA0B,gCAAgC,2BAA2B,iBAAiB,KAAK,qBAAqB,YAAY,8CAA8C,gBAAgB,qBAAqB,sDAAsD,yBAAyB,kBAAkB,qBAAqB,YAAY,EAAE,oBAAoB,gBAAgB,mBAAmB,eAAe,uBAAuB,EAAE,+BAA+B,GAAG,GAAG,UAAU,uCAAuC,sBAAsB,sBAAsB,YAAY,cAAc,YAAY,cAAc,YAAY,WAAW,0BAA0B,oBAAoB,QAAQ,kCAAkC,UAAU,kCAAkC,EAAE,mBAAmB,WAAW,KAAK,oBAAoB,QAAQ,0BAA0B,EAAE,2BAA2B,sDAAsD,EAAE,UAAU,gCAAgC,oBAAoB,uBAAuB,cAAc,oBAAoB,QAAQ,2BAA2B,aAAa,oBAAoB,EAAE,IAAI,8BAA8B,cAAc,oBAAoB,QAAQ,oBAAoB,aAAa,2BAA2B,EAAE,IAAI,GAAG,WAAW,qBAAqB,QAAQ,0CAA0C,UAAU,6BAA6B,GAAG,EAAE,aAAa,gBAAgB,aAAa,mBAAmB,mDAAmD,cAAc,oCAAoC,cAAc,2CAA2C,SAAS,mBAAmB,wBAAwB,gBAAgB,IAAI,cAAc,+BAA+B,oBAAoB,iCAAiC,aAAa,gCAAgC,cAAc,gBAAgB,gDAAgD,OAAO,cAAc,gBAAgB,gBAAgB,qEAAqE,MAAM,SAAS,kBAAkB,uCAAuC,eAAe,wBAAwB,oBAAoB,yBAAyB,qBAAqB,cAAc,oGAAoG,sBAAsB,yBAAyB,cAAc,8EAA8E,oBAAoB,cAAc,0DAA0D,cAAc,gBAAgB,yBAAyB,WAAW,kCAAkC,uBAAuB,GAAG,mBAAmB,cAAc,KAAK,kBAAkB,uBAAuB,2BAA2B,mBAAmB,2BAA2B,mBAAmB,yBAAyB,qBAAqB,2BAA2B,WAAW,gBAAgB,kBAAkB,mBAAmB,eAAe,iBAAiB,8BAA8B,GAAG,sBAAsB,2BAA2B,WAAW,gBAAgB,mBAAmB,mBAAmB,eAAe,mBAAmB,qBAAqB,OAAO,2BAA2B,GAAG,iBAAiB,sBAAsB,GAAG,gBAAgB,gBAAgB,gBAAgB,sEAAsE,MAAM,SAAS,kBAAkB,uCAAuC,eAAe,wBAAwB,oBAAoB,cAAc,8EAA8E,mBAAmB,cAAc,qDAAqD,sBAAsB,yBAAyB,cAAc,0EAA0E,oBAAoB,cAAc,wCAAwC,qBAAqB,cAAc,8BAA8B,sBAAsB,cAAc,+BAA+B,mBAAmB,qBAAqB,iBAAiB,qBAAqB,yBAAyB,mCAAmC,QAAQ,2CAA2C,GAAG,GAAG,YAAY,gBAAgB,kBAAkB,iBAAiB,mBAAmB,EAAE,aAAa,YAAY,cAAc,SAAS,cAAc,SAAS,gPAAgP,8LAA8L,2IAA2I,+HAA+H,2vBAA2vB,qDAAqD,yDAAyD,wCAAwC,gBAAgB,yJAAyJ,+FAA+F,kKAAkK,gBAAgB,2CAA2C,gBAAgB,4CAA4C,4FAA4F,qJAAqJ,6EAA6E,6EAA6E,SAAS,kCAAkC,0CAA0C,KAAK,MAAM,KAAK,kBAAkB,kBAAkB,WAAW,kCAAkC,eAAe,oFAAoF,QAAQ,WAAW,8DAA8D,mBAAmB,iBAAiB,qBAAqB,6BAA6B,qBAAqB,gBAAgB,oDAAoD,SAAS,sCAAsC,2CAA2C,2CAA2C,UAAU,uFAAuF,8BAA8B,6FAA6F,wCAAwC,mDAAmD,UAAU,kFAAkF,GAAG,2BAA2B,MAAM,4BAA4B,kCAAkC,2BAA2B,OAAO,OAAO,oBAAoB,iBAAiB,6DAA6D,mCAAmC,MAAM,MAAuD,EAAE,CAAK,8BAA8B,wBAAwB,MAAM,MAAqE,EAAE,CAAK,kCAAkC,kBAAkB,cAAc,WAAW,gDAAgD,+CAA+C,QAAQ,IAAI,QAAQ,mBAAmB,WAAW,kBAAkB,kDAAkD,IAAI,wBAAwB,gCAAgC,MAAM,0CAA0C,IAAI,MAAM,2EAA2E,gCAAgC,IAAI,YAAY,QAAQ,YAAY,4EAA4E,qBAAqB,eAAe,aAAa,mBAAmB,2BAA2B,8DAA8D,cAAc,+BAA+B,SAAS,QAAQ,uCAAuC,2CAA2C,kDAAkD,IAAI,wBAAwB,2CAA2C,qCAAqC,IAAI,uCAAuC,QAAQ,GAAG,4EAA4E,cAAc,WAAW,mKAAmK,kBAAkB,iCAAiC,0BAA0B,iCAAiC,wBAAwB,6BAA6B,cAAc,MAAmC,GAAG,CAAuB,EAAE,UAAU,0BAA0B,6BAA6B,SAAS,6BAA6B,sBAAsB,8BAA8B,MAAM,iBAAiB,KAAK,KAAK,WAAW,wCAAwC,UAAU,OAAO,uBAAuB,qBAAqB,+CAA+C,cAAc,GAAG,GAAG,yMAAyM,iEAAe,EAAE,EAAwW;AAC/zjB;;;;;;;;ACDa;;AAEb,8CAA6C,EAAE,aAAa,EAAC;;AAE7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB;;;;;;;;ACrCrB;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,mBAAO,CAAC,GAAe,EAAE,MAAM,mBAAO,CAAC,GAAO,UAAU,gBAAgB,OAAO,2CAA2C,iBAAiB,qBAAqB,gBAAgB,qBAAqB,kHAAkH;AACpU,kBAAkB,UAAU,eAAe,qBAAqB,6BAA6B,0BAA0B,0DAA0D,4EAA4E,OAAO,wDAAwD,WAAW,GAAG,YAAY;;;;;;;;ACTzU;;AAEb,IAAI,IAAqC;AACzC,EAAE,yCAAqE;AACvE,EAAE,KAAK,EAEN;;;;;;;;;;;;;;;;;;;;ACND,gDAAwB;AACxB,gDAAwB;AACxB,+CAAiC;AACjC,gDAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHxB,uDAEe;AACf,yCAAsC;AACtC,yCAAwD;AACxD,uDAA0D;AAC1D,yCAAiC;AAOpB,mBAAW,GAAG,eAAK,CAAC,aAAa,CAAmB,IAAI,CAAC,CAAC;AAGvE,SAAgB,aAAa;IAC3B,OAAO,sBAAU,EAAC,mBAAW,CAAE,CAAC;AAClC,CAAC;AAFD,sCAEC;AAED,SAAgB,QAAQ;IACtB,OAAO,aAAa,EAAE,CAAC,aAAa,CAAC;AACvC,CAAC;AAFD,4BAEC;AAGD,SAAgB,SAAS,CAAC,WAAkC,EAAE;IAC5D,MAAM,SAAS,GAAG,IAAI,aAAK,iCAAM,QAAQ,KAAE,KAAK,EAAL,aAAK,EAAE,iBAAiB,EAAjB,uCAAiB,IAAG,CAAC;IACvE,MAAM,YAAY,GAAG,SAAS,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;IAE5E,SAAS,CAAC,IAAI,CAAC,uCAAiB,CAAC,CAAC;IAElC,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC;AACpD,CAAC;AAPD,8BAOC;AAED,SAAgB,YAAY,CAAC,CAAyD;IACpF,MAAM,QAAQ,GAAG,uBAAW,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC,CAAC;IAEzD,OAAO,CACL,uBAAC,mBAAW,CAAC,QAAQ,kBAAC,KAAK,EAAE,QAAQ,gBAClC,CAAC,CAAC,QAAQ,YACU,CACxB,CAAC;AACJ,CAAC;AARD,oCAQC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CD,uDAAmD;AAGnD;;;GAGG;AACH,SAAgB,WAAW,CAAe,EAAsB;IAC9D,OAAO,oBAAQ,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC;AAFD,kCAEC;AAED;;GAEG;AACH,SAAgB,YAAY,CAAC,EAAc;IACzC,qBAAS,EAAC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC1B,CAAC;AAFD,oCAEC;AAED,IAAI,eAAe,GAAG,CAAC,CAAC;AAExB;;;GAGG;AACH,SAAgB,cAAc;IAC5B,MAAM,KAAK,GAAG,KAAK,CAAC;IACpB,OAAO,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,eAAe,EAAE,IAAI,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC;AAC5G,CAAC;AAHD,wCAGC;AAED;;;GAGG;AACH,SAAgB,gBAAgB;IAC9B,IAAI;QACF,MAAM,IAAI,KAAK,EAAE,CAAC;KACnB;IAAC,OAAO,CAAU,EAAE;QACnB,MAAM,KAAK,GAAG,CAAU,CAAC;QACzB,MAAM,KAAK,GAAG,iBAAiB,CAAC;QAChC,IAAI;YACF,MAAM,aAAa,GAAG,KAAK,CAAC,KAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAE,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC;YACvG,OAAO,aAAa,CAAC;SACtB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,mBAAmB,CAAC;SAC5B;KACF;AACH,CAAC;AAbD,4CAaC;AAED;;;;;;GAMG;AACH,SAAgB,cAAc;IAC5B,MAAM,CAAC,EAAE,WAAW,CAAC,GAAG,eAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,OAAO,WAAW,CAAC;AACrB,CAAC;AAHD,wCAGC;;;;;;;;;;;;;;;;;;;;AC1DD,gDAAwB;AACxB,gDAAsC;AACtC,gDAA+B;AAC/B,gDAAwB;AACxB,gDAA4B;AAC5B,gDAAoC;AACpC,+CAA8B;;;;;;;;;;;ACN9B,6CAAoD;AAEpD,yCAAuC;AACvC,4CAA2C;AAE3C,yCAAqC;AAErC,MAAa,iBAAiB;IAA9B;QAEE,UAAK,GAAG,qBAAM,EAAC,aAAK,CAAC,CAAC;QACtB,eAAU,GAAG,EAAyB,CAAC;QAmBvC,aAAQ,GAAG,EAA8B,CAAC;QAE1C,kBAAa,GAAG,EAAc,CAAC;QAe/B,uBAAkB,GAAG,KAAK,CAAC;IA8B7B,CAAC;IAhEC,iBAAiB,CAAC,UAAqB,EAAE,WAAmB,EAAE,WAAqB;QACjF,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QAC1F,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC;QAC7C,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa;YAAE,OAAO;QAC3B,aAAa,CAAC,YAAY,EAAE,CAAC;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACnE,CAAC;IAMD,oCAAoC;IACpC,aAAa,CAAC,SAAiB,EAAE,EAAY;QAC3C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAC9B,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;IAID,UAAU;QACR,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,OAAO,CAAC,KAAK,CAAC,oEAAoE,CAAC,CAAC;SACrF;QACD,MAAM,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAE5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI;YACF,0BAA0B;YAC1B,uCAAuB,EAAC,GAAG,EAAE;gBAC3B,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;oBACvB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;oBACzC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBACtC,IAAI,SAAS,CAAC,UAAU,EAAE,EAAE;wBAC1B,SAAS,CAAC,WAAW,EAAE,CAAC;wBACxB,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;qBACjC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;gBAAS;YACR,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACjC;IAEH,CAAC;CACF;AArED,8CAqEC;AAOD,MAAa,aAAa;IAUxB,YAAmB,KAAY,EAAS,SAAoB,EAAS,EAAU,EAAS,WAAqB;QAA1F,UAAK,GAAL,KAAK,CAAO;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,OAAE,GAAF,EAAE,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAU;QATtG,gBAAW,GAAG,KAAK,CAAC;QACpB,cAAS,GAAG,KAAK,CAAC;QAClB,kBAAa,GAAG,KAAK,CAAC;QAE7B,iBAAY,GAAsB;YAChC,eAAe,EAAE,EAAkB;YACnC,KAAK,EAAE,IAAW;SACnB,CAAC;QAwDF,gCAA2B,GAAmC,IAAI,CAAC;QAOnE,wBAAmB,GAAiC,IAAI,CAAC;IA5DzD,CAAC;IAED,YAAY;QACV,MAAM,QAAQ,GAAG;YACf,eAAe,EAAE,EAAE;YACnB,KAAK,EAAE,EAAE;SACV,CAAC;QAEF,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,GAAG,EAAE;YAC/D,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC7B,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;IACnE,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,cAAc,CAAC,WAAoB;QACjC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;IACnC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,4BAA4B,CAAC,WAA8B,EAAE,YAA+B;QAC1F,IAAI,qBAAS,EAAC,YAAY,CAAC,eAAe,EAAE,WAAW,CAAC,eAAe,CAAC,EAAE;YACxE,gDAAgD;YAChD,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,qBAAS,EAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE;YAErD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,qBAAqB,CAAC,WAA8B,EAAE,YAA+B;QACnF,IAAI,IAAI,CAAC,2BAA2B,EAAE;YACpC,OAAO,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;SACvG;QACD,OAAO,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IACtE,CAAC;IAID,wBAAwB,CAAC,cAAuC;QAC9D,IAAI,CAAC,2BAA2B,GAAG,cAAc,CAAC;IACpD,CAAC;IAKD,sBAAsB,CAAC,EAAyB;QAC9C,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC,CAAC;CACF;AA5ED,sCA4EC;;;;;;;;;;;AC/JD,yCAA2D;AAE3D,yCAAsF;AACtF,qDAAwD;AACxD,yCAMkB;AAClB,4CAG4B;AAC5B,yCAAiC;AACjC,uDAAyE;AAGzE,SAAgB,gBAAgB,CAC/B,MAAe;IACd,MAAM,WAAW,GAAG,0BAAc,GAAE,CAAC;IAErC,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,uBAAW,EAAC,GAAG,EAAE;QAExE,MAAM,QAAQ,GAAG,+BAAmB,EAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;QACtD,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,uCAAiB,CAAC,CAAC;QAC7D,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,aAAK,CAAC,CAAC;QAC5C,MAAM,aAAa,GAAG,4BAAgB,GAAE,CAAC;QACzC,MAAM,WAAW,GAAG,GAAG,aAAa,KAAK,sBAAU,GAAE,EAAE,CAAC;QACxD,IAAI,UAAU,GAAG,wCAAwB,EAAC,MAAM,CAAC,CAAC;QAClD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QAClE,IAAI,gBAAgB,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;SACrD;QACD,MAAM,SAAS,GAAG,UAAU,CAAC,iBAAiB,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QAErF,SAAS,MAAM,CACb,eAA2E;YAE3E,MAAM,WAAW,GAAG,QAAQ,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;YACxG,WAAW,CAAC,WAAW,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC,wBAAuB;YAC/E,KAAK,CAAC,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC,UAAW,CAAC,CAAC;YAC1D,MAAM,MAAM,GAAG,SAAS,CAAC,WAAW,CAAQ,CAAC;YAC7C,KAAK,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;YACtC,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,UAAU,CAAC,UAAU,CAAC;YACpB,WAAW,EAAE,QAAQ;YACrB,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,GAAG,EAAE,CAAC,MAAM;SACvB,CAAC,CAAC;QAEH,UAAU,CAAC,UAAU,CAAC;YACpB,WAAW,EAAE,eAAe;YAC5B,IAAI,EAAE,eAAe;YACrB,QAAQ,EAAE,GAAG,EAAE,CAAC,SAAS;SAC1B,CAAC,CAAC;QAEH,OAAO;YACL,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ;SACzD,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,wBAAY,EAAC,GAAG,EAAE;QAChB,UAAU,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAEzC,0DAA0D;QAC1D,6EAA6E;QAC7E,2CAA2C;IAC7C,CAAC,CAAC,CAAC;IAEH,2BAAe,EAAC,GAAG,EAAE;QAEnB,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,gBAAgB;YAAE,OAAO;QAExC,SAAS,CAAC,YAAY,EAAE,CAAC;QAEzB,8DAA8D;QAE9D,MAAM,SAAS,GAAG,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE;YAE5D,IAAI,QAAQ,CAAC,WAAW;gBAAE,OAAO;YAEjC,MAAM,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;YAE5C,kDAAkD;YAClD,MAAM,WAAW,GAAG,SAAS,CAAC,YAAY,EAAE,CAAC;YAE7C,gEAAgE;YAGhE,MAAM,YAAY,GAAG,SAAS,CAAC,qBAAqB,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;YAChF,IAAI,YAAY,EAAE;gBAChB,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC/B,SAAS,CAAC,mBAAmB,IAAI,SAAS,CAAC,mBAAmB,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;aAC3F;QACH,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,EAAE;YACV,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,qBAAS,EAAC,GAAG,EAAE;QACb,SAAS,CAAC,UAAU,EAAE,CAAC;IACzB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,SAAS,CAAC,SAAS,CAAC,KAAgB,CAAC;AAC9C,CAAC;AA3FD,4CA2FC;AAED,SAAgB,SAAS,CAAyF,OAAU,EAAE,YAA6B,IAAI,EAAE,UAAU,GAAG,EAAE;IAC9K,MAAM,MAAM,GAAG,yCAAiB,EAAC,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IACjE,OAAO,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAClC,CAAC;AAHD,8BAGC;;;;;;;;;;;ACnHD,yCAAkC;AAClC,yCAAoD;AACpD,gDAA+C;AAC/C,yCAAuC;AAQvC,SAAgB,iBAAiB,CAAyF,OAAU,EAAE,YAA6B,IAAI,EAAE,IAAI,GAAG,EAAE;IAChL,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,gCAAa,GAAE,CAAC;IAExD,MAAM,EACJ,QAAQ,EACR,UAAU,EACV,KAAK,EACL,MAAM,EACN,oBAAoB,EACpB,SAAS,EACT,KAAK,GACN,GAAG,uBAAW,EAAC,GAAG,EAAE;;QAEnB,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAE,OAAe,CAAC,IAAI,CAAC,CAAC;QACzF,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,aAAK,CAAC,CAAC;QAC1C,MAAM,oBAAoB,GAAG,CAAC,CAAC,SAAS,CAAC;QACzC,IAAI,KAAY,CAAC;QACjB,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,IAAI,oBAAoB,EAAE;YACxB,KAAK,GAAG,YAAY,CAAC,aAAa,EAAE,CAAC;YACrC,MAAM,GAAG,IAAI,CAAC;YACd,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAc,EAAE,UAAU,CAAC,CAAC;YAC5D,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC3B,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAsB,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/E,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,eAAe,CAAC,CAAC;SAC7D;aAAM;YACL,KAAK,GAAG,WAAK,CAAC,cAAc,CAAC,UAAU,CAAC,mCAAI,YAAY,CAAC;YACzD,MAAM,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAc,EAAE,UAAU,CAAC,CAAC;YACjI,SAAS,GAAG,aAAa,CAAC,EAAE,KAAK,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YACnD,UAAU,GAAG,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,QAAQ;gBAAE,MAAM,GAAG,IAAI,CAAC;SACrD;QAED,MAAM,QAAQ,GAAG,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACnD,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAE3C,OAAO;YACL,QAAQ;YACR,KAAK;YACL,MAAM;YACN,KAAK;YACL,UAAU;YACV,QAAQ;YACR,oBAAoB;YACpB,SAAS;SACV,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC1C,qBAAS,EAAC,GAAG,EAAE;QACb,KAAK,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,qDAAqD;IACrD,wBAAY,EAAC,GAAG,EAAE;QAChB,IAAI,SAAS,IAAI,CAAC,MAAM;YAAE,OAAO;QAEjC,IAAI,oBAAoB,EAAE;YACxB,KAAK,CAAC,OAAO,EAAE,CAAC;SACjB;aAAM;YACL,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC9B;IAEH,CAAC,CAAC,CAAC;IAEH,OAAO,QAAQ,CAAC;AAClB,CAAC;AApED,8CAoEC;;;;;;;;;;ACzED,EAAE;AACF,8CAA8C;AAC9C,mEAAmE;AACnE,qEAAqE;AACrE,0CAA0C;AAC1C,gDAAgD;AAChD,wCAAwC;AACxC,yDAAyD;AACzD,EAAE;AACF,sBAAsB;AACtB,uEAAuE;AACvE,gDAAgD;AAChD,UAAU;AACV,EAAE;AACF,qEAAqE;AACrE,EAAE;AACF,yDAAyD;AACzD,0DAA0D;AAC1D,wDAAwD;AACxD,EAAE;AACF,uCAAuC;AACvC,kDAAkD;AAClD,4EAA4E;AAC5E,sCAAsC;AACtC,mBAAmB;AACnB,YAAY;AACZ,EAAE;AACF,oCAAoC;AACpC,iEAAiE;AACjE,gCAAgC;AAChC,oBAAoB;AACpB,YAAY;AACZ,UAAU;AACV,EAAE;AACF,mEAAmE;AACnE,EAAE;AACF,yEAAyE;AACzE,kDAAkD;AAClD,YAAY;AACZ,EAAE;AACF,8EAA8E;AAC9E,sCAAsC;AACtC,yBAAyB;AACzB,UAAU;AACV,UAAU;AACV,qBAAqB;AACrB,6CAA6C;AAC7C,SAAS;AACT,YAAY;AACZ,IAAI;;;;;;;;;ACvDJ,qCAAqC;AACrC,4FAA4F;;;;;;;;;;;;;;;;;;;;;ACD5F,gDAA6B;AAC7B,gDAAwB;AACxB,gDAA2B;AAC3B,gDAA2B;AAC3B,gDAA0B;AAC1B,gDAAwB;AACxB,gDAA0B;;;;;;;;;;;ACL1B,yCAAmD;AACnD,yCAA8D;AAgB9D,MAAa,QAAQ;IAOnB,YAAmB,QAAuB;QAAvB,aAAQ,GAAR,QAAQ,CAAe;QAN1C,OAAE,GAAG,sBAAU,GAAE,CAAC;QAElB,kBAAa,GAAmB,aAAa,CAAC;QAC9C,iBAAY,GAAG,EAAE,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QAGlB,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACzC,CAAC;IAED,IAAI;QACF,iCAAiC;QACjC,4CAA4C;QAC5C,uCAAuC;QACvC,sCAAsC;QACtC,4BAA4B;QAC5B,qCAAqC;QACrC,QAAQ;QACR,WAAW;QACX,iCAAiC;QACjC,IAAI;IACN,CAAC;IAED,eAAe,CAAC,YAAoB;QAClC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACtC,IAAI,QAAQ,EAAE;YACZ,wBAAY,EAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;SAC9D;IACH,CAAC;IAED,gBAAgB,CAAC,aAA6B;QAC5C,gCAAgC;QAChC,yCAAyC;QACzC,sCAAsC;QACtC,kFAAkF;IACpF,CAAC;IAED,gBAAgB;IAChB,sDAAsD;IACtD,6BAA6B;IAC7B,IAAI;IAEJ,YAAY;QACV,OAAO,IAAI,CAAC,MAAM,CAAC,QAAS,EAAE,CAAC;IACjC,CAAC;IAED,gBAAgB;QACd,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;QAC3F,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO,CAAC;gBACN,IAAI,EAAE,IAAW;gBACjB,KAAK,EAAE,IAAW;aACnB,CAAC,CAAC;SACJ;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAC1B,CAAC;CACF;AAlED,4BAkEC;AASD,SAAgB,cAAc,CAC7B,aAA6D;IAC5D,MAAM,QAAQ,GAAG,8BAAkB,GAAE,CAAC;IACtC,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,IAAI,KAAK,CAAC,kIAAkI,CAAC,CAAC;KACrJ;IACD,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAA4B,QAAQ,CAAC,CAAC;IACnE,QAAQ,CAAC,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC1C,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChB,MAAM,KAAK,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;IACtC,MAAM,WAAW,GAAG,KAAK,YAAY,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IACzD,MAAM,aAAa,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE;QAC3C,GAAG,CAAC,MAAM,EAAE,CAAC;YACX,OAAO,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAE,MAAc,CAAC,CAAC,CAAC,CAAC;QAC5D,CAAC;KACF,CAAC,CAAC;IACH,OAAO,aAAgD,CAAC;AAC1D,CAAC;AAjBD,wCAiBC;AAED,4BAA4B;AAEf,0BAAkB,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAE3D,mEAAmE;AACnE,yCAAyC;AACzC,gCAAgC;AAChC,oEAAoE;AACpE,SAAS;AACT,IAAI;AAEJ,SAAgB,MAAM,CAAyB,WAAc;IAC3D,MAAM,QAAQ,GAAG,cAAc,EAAE,CAAC;IAClC,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACnD,OAAO,MAAM,CAAC;AAChB,CAAC;AAJD,wBAIC;AAED,SAAgB,WAAW;IACzB,OAAO,2BAAe,GAAG,CAAC;AAC5B,CAAC;AAFD,kCAEC;AAED,SAAgB,cAAc;IAC5B,OAAO,8BAAkB,GAAG,CAAC;AAC/B,CAAC;AAFD,wCAEC;;;;;;;;;;;;;;;;;;;;AEvID,8CAA8C;AAC9C,kDAAgD;AAEhD,yCAAkE;AAQlE,MAAa,QAAQ;IAyBnB,YACS,KAAY,EACZ,OAAsG,EACtG,OAAO,EAAE,EACT,UAAoC,EAAE;QAHtC,UAAK,GAAL,KAAK,CAAO;QACZ,YAAO,GAAP,OAAO,CAA+F;QACtG,SAAI,GAAJ,IAAI,CAAK;QACT,YAAO,GAAP,OAAO,CAA+B;QA3B/C,aAAQ,GAAqB,IAAI,CAAC;QAClC,aAAQ,GAAc,EAAE,CAAC;QACzB,cAAS,GAA8C,EAAE,CAAC,CAAC,0BAA0B;QAGrF,aAAQ,GAAG,KAAK,CAAC,CAAC,yCAAyC;QAC3D,gBAAW,GAAG,KAAK,CAAC;QACpB,kCAAkC;QAClC,wEAAwE;QAExE,uBAAkB,GAAG,KAAK,CAAC;QAC3B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,YAAO,GAAG,KAAK,CAAC;QAEhB,aAAQ,GAAG,KAAK,CAAC;QAEjB,gBAAW,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAItE,eAAU,GAAiB,IAAI,CAAC;QAChC,iBAAY,GAA2B,EAAE,CAAC;QAuN1C,WAAM,GAAG,iCAAgB,GAAkB,CAAC;QA/M1C,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,sBAAsB,sBAAU,GAAE,EAAE,CAAC;QACjE,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,sBAAU,GAAE,EAAE,CAAC;QAE5D,iCAAiC;QACjC,IAAI,CAAC,OAAO,mBAAK,eAAe,EAAE,IAAI,IAAK,IAAI,CAAC,OAAO,CAAE,CAAC;QAE1D,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;YAGjC,IAAI,mBAAO,EAAC,OAAO,CAAC,EAAE;gBACpB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAiB,EAAE,EAAE,CAAC,IAAK,OAAe,CAAC,GAAG,IAAI,CAAC,CAAC;gBACpE,OAAO;aACR;YAED,wBAAwB;YACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAE,OAA+C,CAAC,GAAG,IAAI,CAAC,CAAC;YACjF,OAAO;SACR;QAED,uBAAuB;QACvB,IAAI,mCAAa,EAAC,OAAO,CAAC,EAAE;YAC1B,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC;YAC7B,OAAO;SACR;QAED,MAAM,IAAI,KAAK,CAAC,gCAAgC,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,cAAc,CAAC,IAAiB;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAQ,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,WAAW;QACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACjD,MAAM,mBAAmB,GAAG,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;YACvF,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAA4B,CAAC;YACnD,MAAM,QAAQ,GAAG,IAA0B,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;YAC3C,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,EAAE;IACF,gBAAgB;IAChB,0BAA0B;IAC1B,yCAAyC;IACzC,mCAAmC;IACnC,IAAI;IAEJ,gBAAgB,CAAC,QAA6C;QAC5D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzC,CAAC;IAED,mCAAmC;IACnC,2BAA2B;IAC3B,wCAAwC;IACxC,oEAAoE;IACpE,EAAE;IACF,sCAAsC;IACtC,mDAAmD;IACnD,gDAAgD;IAChD,2DAA2D;IAC3D,0CAA0C;IAC1C,4CAA4C;IAC5C,oFAAoF;IACpF,0CAA0C;IAC1C,QAAQ;IACR,IAAI;IACJ,EAAE;IACF,4BAA4B;IAC5B,mCAAmC;IACnC,iCAAiC;IACjC,wDAAwD;IACxD,uBAAuB;IACvB,uEAAuE;IACvE,QAAQ;IACR,EAAE;IACF,6BAA6B;IAC7B,2BAA2B;IAC3B,aAAa;IACb,wCAAwC;IACxC,MAAM;IACN,IAAI;IAEJ,WAAW,CAAC,UAAkB;QAC5B,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,UAAkB,EAAE,IAAS;QACvC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QACjC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,mBAAmB;IACnB,OAAO;QACL,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,qBAAqB;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,eAAe;;QACb,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAe,CAAC;QACtC,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtB,mBAAmB;QACnB,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,EAAS,CAAC;QAE5B,wBAAwB;QACxB,UAAI,CAAC,UAAU,0CAAE,OAAO,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,8BAA8B;IAC9B,mDAAmD;IACnD,mCAAmC;IACnC,gCAAgC;IAChC,MAAM;IACN,qFAAqF;IACrF,sCAAsC;IACtC,IAAI;IAEJ,0CAA0C;IAC1C,oCAAoC;IACpC,uDAAuD;IACvD,0CAA0C;IAC1C,uDAAuD;IACvD,QAAQ;IACR,MAAM;IACN,sCAAsC;IACtC,IAAI;IAEJ,0CAA0C;IAC1C,oCAAoC;IACpC,EAAE;IACF,wCAAwC;IACxC,6CAA6C;IAC7C,2DAA2D;IAC3D,8BAA8B;IAC9B,6BAA6B;IAC7B,gCAAgC;IAChC,2CAA2C;IAC3C,sCAAsC;IACtC,YAAY;IACZ,gBAAgB;IAChB,QAAQ;IACR,MAAM;IACN,EAAE;IACF,qCAAqC;IACrC,gCAAgC;IAChC,IAAI;IAEJ,oCAAoC;IACpC,gCAAgC;IAChC,0CAA0C;IAC1C,2CAA2C;IAC3C,EAAE;IACF,wCAAwC;IACxC,6CAA6C;IAC7C,4CAA4C;IAC5C,MAAM;IACN,EAAE;IACF,0BAA0B;IAC1B,wBAAwB;IACxB,wCAAwC;IACxC,IAAI;IAEJ,IAAI,UAAU;QACZ,OAAO,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC/C,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;QACtE,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,oBAAoB,CAA2B,aAAgB,EAAE,IAAY;QAC3E,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC5C,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;YAClC,UAAU,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SAC1C;QACD,OAAO,UAAU,CAAC,eAAe,CAAC,IAAI,CAAoB,CAAC;IAC7D,CAAC;IAED,iBAAiB,CAA2B,aAAgB,EAAE,GAAG,IAAS;QACxE,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,WAAW,aAAa,CAAC,IAAI,IAAI,EAAE,IAAI,sBAAU,GAAE,EAAE,CAAC;QAC7E,UAAU,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,cAAc,EAAE,IAA0B,EAAC,CAAC,CAAC;QACxF,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAqB,CAAC;QACvE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;QACtC,MAAM,WAAW,GAAG,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;QACtG,OAAO,WAAW,CAAC;IACrB,CAAC;CAGF;AA/OD,4BA+OC;AAED,SAAgB,sBAAsB,CAAC,QAAa,EAAE,QAA4B;IAChF,MAAM,EAAE,GAAG,GAAG,QAAQ,CAAC,EAAE,KAAK,sBAAU,GAAE,EAAE,CAAC;IAC7C,MAAM,UAAU,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;IAE9D,wBAAY,EAAC,QAAQ,EAAE,cAAc,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IAC7D,wBAAY,EAAC,QAAQ,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AACnE,CAAC;AAND,wDAMC;AAED,SAAgB,mBAAmB,CAAC,QAAa;IAC/C,MAAM,QAAQ,GAAkB,QAAQ,CAAC,UAAU,CAAC;IAEpD,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,IAAI,KAAK,CAAC,2CAA2C,QAAQ,EAAE,CAAC,CAAC;KACxE;IAED,OAAO;QACL,QAAQ;QACR,EAAE,EAAE,QAAQ,CAAC,YAAsB;KACpC,CAAC;AACJ,CAAC;AAXD,kDAWC;;;;;;;;;;;AC/QD,8CAA8C;AAO9C,yCAAqC;AACrC,4CAAuD;AAEvD,IAAI,YAAY,GAAiB,IAAI,CAAC;AACtC,IAAI,eAAe,GAAyB,IAAI,CAAC;AACjD,IAAI,qBAAqB,GAAG,CAAC,CAAC;AAQ9B,MAAM,oBAAoB,GAAG;IAC3B,WAAW,EAAE,IAAI;IACjB,YAAY,EAAE,KAAK;CACpB,CAAC;AAEF;;GAEG;AACH,MAAa,KAAK;IAShB,YACE,eAAsC,EAAE,EACxC,WAAmC,EAAE;QARvC,gBAAW,GAA0B,EAAE,CAAC;QAExC,cAAS,GAAkC,EAAE,CAAC;QAoN9C,WAAM,GAAG,iCAAgB,GAAe,CAAC;QA5MvC,MAAM,GAAG,GAAG,sBAAU,GAAE,CAAC;QACzB,MAAM,WAAW,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,CAAC;QAE1C,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEpE,IAAI,CAAC,QAAQ,GAAG,WAAW;YACzB,CAAC,iCAAM,WAAW,CAAC,QAAQ,GAAK,QAAQ,EACxC,CAAC,iCAAM,oBAAoB,GAAK,QAAQ,CAAE,CAAC;QAE7C,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IAClD,CAAC;IAED,YAAY,CAAC,YAAmC;QAC9C,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,QAAQ,CAA2B,aAAgB,EAAE,IAAa,EAAE,OAAkC;QACpG,MAAM,UAAU,GAAG,IAAI,IAAI,aAAa,CAAC,IAAI,IAAI,mBAAmB,sBAAU,GAAE,EAAE,CAAC;QACnF,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,GAAG,UAAU,wCAAwC,CAAC,CAAC;SACxE;QAED,MAAM,QAAQ,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QACxE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;QAEtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;QAC/C,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,WAAW,CAA+B,aAAgB;QACxD,MAAM,UAAU,GAAG,OAAO,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC;QAC1F,IAAI,CAAC,UAAU;YAAE,OAAO,IAAI,CAAC;QAE7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC5C,IAAI,QAAQ;YAAE,OAAO,QAAQ,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IAED,eAAe,CAA+B,aAAgB;QAC5D,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACjD,IAAI,QAAQ;YAAE,OAAO,QAAQ,CAAC;QAE9B,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,OAAO,aAAa,KAAK,QAAQ,CAAC;QACvF,IAAI,cAAc;YAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAExD,MAAM,IAAI,KAAK,CAAC,sBAAsB,aAAa,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,WAAW,CAA+B,OAAU;QAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC3C,OAAO,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,OAAO,CAA+B,OAAU;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,QAAQ,CAAC,QAAQ;YAAE,OAAO,QAAQ,CAAC,QAAQ,CAAC;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAS,CAAC,CAAC;IAC1C,CAAC;IAED,UAAU,CAA+B,OAAU;QACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ;YAAE,OAAO;QACtB,QAAQ,CAAC,OAAO,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,iBAAiB;IAEjB,YAAY,CAAC,aAAiC;QAC5C,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAED,WAAW,CAAC,aAAiC;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QACrD,OAAO,CAAC,CAAC,SAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,EAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,IAAI,CAA+B,OAAU,EAAE,GAAG,IAAW;QAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE/C,IAAI,QAAQ,CAAC,QAAQ,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,cAAc,QAAQ,CAAC,IAAI,uCAAuC,CAAC,CAAC;SACrF;QAED,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QAC/C,qBAAqB,EAAE,CAAC;QACxB,IAAI,CAAC,qBAAqB;YAAE,QAAQ,CAAC,WAAW,EAAE,CAAC;QAEnD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,MAAM;IACN,uCAAuC;IACvC,4BAA4B;IAC5B,MAAM;IACN,uFAAuF;IACvF,4BAA4B;IAC5B,yDAAyD;IACzD,qBAAqB;IACrB,IAAI;IAEJ;;;OAGG;IACH,yBAAyB;IACzB,MAAM,CAAsC,OAAiB,EAAE,GAAG,IAAS;QACzE,MAAM,SAAS,GAAG,YAAY,CAAC;QAC/B,YAAY,GAAG,IAAI,CAAC;QAEpB,IAAI,QAAgC,CAAC;QAErC,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,YAAY,EAAE;YAChB,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SAC1C;aAAM;YACL,QAAQ,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACxC;QAED,MAAM,YAAY,GAAG,eAAe,CAAC;QACrC,eAAe,GAAG,QAAQ,CAAC;QAE3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/C,YAAY,GAAG,SAAS,CAAC;QACzB,eAAe,GAAG,YAAY,CAAC;QAE/B,sBAAsB;QACtB,iDAAiD;QACjD,kDAAkD;QAClD,QAAQ;QACR,gDAAgD;QAChD,0BAA0B;QAC1B,IAAI;QAEJ,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,gBAAgB,CACd,YAAoC,EACpC,QAAsD;QAEtD,OAAO,IAAI,KAAK,CAAC,YAAY,kCAAO,QAAQ,KAAE,WAAW,EAAE,IAAI,IAAG,CAAC;IACrE,CAAC;IAED,gBAAgB;IAChB,aAAa,CAAC,YAAoC,EAAE,QAAqC;QACvF,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;QACnC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACjD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,eAAe,CAAC,OAAe;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK;YAAE,MAAM,IAAI,KAAK,CAAC,4BAA4B,OAAO,oBAAoB,CAAC,CAAC;QACrF,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IACpC,CAAC;IAED,OAAO;QACL,uBAAuB;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC9C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,oBAAoB;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACjD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,CAAC;YACvC,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,qBAAqB;QACrB,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;IAC5C,CAAC;IAED,SAAS;QACP,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI;SAC1D,CAAC;IACJ,CAAC;IAED,IAAI,MAAM;QACR,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;IACnC,CAAC;CAGF;AA1ND,sBA0NC;AAQD,SAAgB,eAAe;IAC7B,OAAO,YAAY,CAAC;AACtB,CAAC;AAFD,0CAEC;AAED,SAAgB,kBAAkB;IAChC,OAAO,eAAe,CAAC;AACzB,CAAC;AAFD,gDAEC;;;;;;;;;;;ACpQD,8CAA8C;AAE9C,MAAa,OAAO;IAApB;QACE,YAAO,GAAG,iCAAgB,GAAE,CAAC;IAU/B,CAAC;IARC,SAAS,CAAC,EAAyB;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAChD,OAAO,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,CAAC,IAAW;QACd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;CACF;AAXD,0BAWC;AAED,MAAa,YAAY;IACvB,YAAmB,WAAmC;QAAnC,gBAAW,GAAX,WAAW,CAAwB;IAAG,CAAC;CAC3D;AAFD,oCAEC;;;;;;;;;;;ACjBD,IAAI,SAAS,GAAG,CAAC,CAAC;AAElB,SAAgB,UAAU;IACxB,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;AAClC,CAAC;AAFD,gCAEC;AAED,SAAgB,eAAe,CAAI,GAAM;IACvC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,EAAE;QACrC,MAAM,IAAI,KAAK,CAAC,8CAA8C,GAAG,EAAE,CAAC,CAAC;KACtE;AACH,CAAC;AAJD,0CAIC;AAED,SAAgB,UAAU,CAAI,GAAM;IAClC,eAAe,CAAC,GAAG,CAAC,CAAC;IACrB,OAAO,GAAG,CAAC;AACb,CAAC;AAHD,gCAGC;AAED,SAAgB,SAAS,CAAC,QAAa,EAAE,UAAkB;IACzD,MAAM,eAAe,GAAG,MAAM,CAAC,wBAAwB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC9E,OAAO,CAAC,CAAC,gBAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,GAAG,EAAC;AAChC,CAAC;AAHD,8BAGC;AAKD,SAAgB,OAAO,CAAkC,IAAW,EAAE,EAA4C;IAChH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAClC,EAAU,CAAE,IAAY,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,0BAIC;AAED,SAAgB,YAAY,CAAC,MAAc,EAAE,UAAkB,EAAE,MAAiB,EAAE,UAAwC;;IAC1H,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE;QACxC,YAAY,EAAE,gBAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,YAAY,mCAAI,IAAI;QAC9C,UAAU,EAAE,gBAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,UAAU,mCAAI,IAAI;QAC1C,GAAG,EAAE,MAAM;KACZ,CAAC,CAAC;AACL,CAAC;AAND,oCAMC;AAED,SAAgB,YAAY,CAAC,MAAc,EAAE,UAAkB,EAAE,MAA6B,EAAE,UAAwC;;IACtI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE;QACxC,YAAY,EAAE,gBAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,YAAY,mCAAI,IAAI;QAC9C,UAAU,EAAE,gBAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,UAAU,mCAAI,IAAI;QAC1C,GAAG,EAAE,MAAM;KACZ,CAAC,CAAC;AACL,CAAC;AAND,oCAMC;AAED,SAAgB,UAAU,CAAC,GAAW;IACpC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC;AAFD,gCAEC;AAED,SAAgB,OAAO,CAAC,MAAW;IACjC,2DAA2D;IAC3D,OAAO,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACtH,CAAC;AAHD,0BAGC;;;;;;;;;;;ACrDD,yCAEkB;AAClB,4CAAwD;AACxD,4CAAgD;AAChD,2CAImB;AAGnB,MAAa,SAAS;IAWpB,YAAmB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAThC,UAAK,GAAW,EAAY,CAAC;QAE7B,gBAAW,GAAG,EAAqC,CAAC;QACpD,wBAAmB,GAAG,EAAqC,CAAC;QAC5D,qBAAgB,GAAG,KAAK,CAAC;QACzB,qBAAgB,GAAG,KAAK,CAAC;QACzB,qBAAgB,GAAG,KAAK,CAAC;QACzB,wBAAmB,GAAG,IAA8C,CAAC;QAGnE,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CACpB;YACE,WAAW,EAAE,gBAAgB;YAC7B,QAAQ,EAAE,IAAI;SACf,EACD;YACE,GAAG,EAAE,CAAC,MAAW,EAAE,QAAgB,EAAE,EAAE;gBACrC,IAAI,QAAQ,KAAK,gBAAgB;oBAAE,OAAO,MAAM,CAAC,cAAc,CAAC;gBAChE,IAAI,QAAQ,IAAI,MAAM;oBAAE,OAAQ,MAAc,CAAC,QAAQ,CAAC,CAAC;gBACzD,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAwB,CAAC,CAAC;gBACzD,OAAO,KAAK,CAAC;YACf,CAAC;SACF,CACK,CAAC;IACX,CAAC;IAED,UAAU,CAAS,gBAAmD;QACpE,MAAM,UAAU,mBACd,YAAY,EAAE,IAAI,EAClB,UAAU,EAAE,IAAI,EAChB,QAAQ,EAAE,KAAK,EACf,MAAM,EAAE,gBAAgB,CAAC,QAAQ,EACjC,SAAS,EAAE,IAAI,EACf,OAAO,EAAE,KAAK,IACX,gBAAgB,CACpB,CAAC;QACD,IAAI,CAAC,WAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;QACxD,IAAI,UAAU,CAAC,QAAQ;YAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QACtD,wBAAY,EAAC,IAAI,CAAC,KAAY,EAAE,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,kBAAkB,CAAC,EAAoC;QACrD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC,CAAC;IAEO,WAAW,CAAC,QAAsB;QACxC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,UAAU,EAAE;YACf,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,YAAY,QAAQ,iBAAiB,CAAC,CAAC;aACxD;YACD,IAAI,CAAC,mBAAmB,CAAC,QAAkB,CAAC,CAAC;YAC7C,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACzC;QAED,IAAI,UAAU,CAAC,QAAQ,EAAE;YACvB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;YAChD,IAAI,CAAC,IAAI,CAAC,gBAAgB;gBAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YACzD,IAAI,UAAU,CAAC,SAAS;gBAAE,OAAO,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;SAC7D;QACD,OAAO,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW;QACT,MAAM,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACrD,MAAM,KAAK,GAAG,EAAY,CAAC;QAE3B,mBAAO,EAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;YAC/C,IAAI,KAAc,CAAC;YACnB,IAAI,KAAK,CAAC,SAAS,EAAE;gBACnB,MAAM,MAAM,GAAI,KAAK,CAAC,SAAS,CAAC,WAAmB,CAAC,MAAM,CAAC;gBAC3D,IAAI,MAAM,EAAE;oBACV,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;iBAC3B;qBAAM;oBACL,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;iBACvC;aACF;iBAAM;gBACL,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;aACxB;YAEA,KAAa,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,oBAAoB;IACpB,IAAI,aAAa;QACf,MAAM,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACrD,MAAM,MAAM,GAAG,EAAY,CAAC;QAC5B,mBAAO,EAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;YAC/C,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAAE,OAAO;YAC5B,aAAa;YACb,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY;QACV,SAAS;IACX,CAAC;IAED,oDAAoD;IACpD,gDAAgD;IAEhD;;;;;;;OAOG;IACH,MAAM,CAAkC,cAAoE;QAC1G,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,KAAK;QACH,MAAM,KAAK,GAAG,IAAI,SAAS,CAAS,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,mBAAO,EAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QACtE,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,CAGL,SAAqB;QACvB,8BAA8B;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACjC,mBAAO,EAAC,SAAS,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,UAAiB,CAAC,CAAC,CAAC;QACxF,OAAO,WAA6B,CAAC;IACvC,CAAC;CAEF;AAxID,8BAwIC;AAED,SAAgB,wBAAwB,CAAI,MAAS;IACnD,MAAM,KAAK,GAAG,kCAAmB,EAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;IACzD,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;IACvC,OAAO,SAAS;SACb,MAAM,CAAC,yBAAS,EAAC,MAAM,CAAC,CAAC,CAAC,0BAA0B;SACpD,MAAM,CAAC,2BAAa,EAAC,MAAM,CAAC,CAA0B,CAAC,CAAC,mBAAmB;AAChF,CAAC;AAND,4DAMC;;;;;;;;;;;;;;AC7JD,0DAA4B;AAC5B,8CAA8C;AAC9C,yCAQkB;AAClB,4CAA6C;AAC7C,gDAAkD;AAClD,4CAAwC;AAExC;;;GAGG;AACH,MAAa,KAAK;IAAlB;QAEE,qEAAqE;QACrE,cAAS,GAAG,EAAgB,CAAC;QAE7B,4BAA4B;QAC5B,oBAAe,GAAG,EAAmC,CAAC;QAEtD,qBAAgB,GAAG,CAAC,CAAC;QACrB,oBAAe,GAAiB,EAAE,CAAC;QAyCnC,uBAAkB,GAAG,CAAC,CAAC;QAEvB,oBAAe,GAA2B,EAAE,CAAC;QAa7C,mBAAc,GAA0B,EAAE,CAAC;QAkB3C,WAAM,GAAG,iCAAgB,GAAe,CAAC;IAC3C,CAAC;IAzEC,WAAW,CAAiB,UAAkB,EAAE,aAA6B;QAE3E,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE;YACxE,MAAM,IAAI,KAAK,CAAC,sBAAsB,UAAU,sBAAsB,CAAC,CAAC;SACzE;QAED,MAAM,MAAM,GAAG,mCAAgB,EAAC,aAAa,CAAC,CAAC;QAE/C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;QAC1C,MAAM,UAAU,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;QAEjE,OAAO,UAAmD,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,QAAkB;QACjC,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ;YAAE,OAAO,CAAC,qBAAqB;QAE5C,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC;QAEpE,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;SAClF;QAED,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,MAAM;QACJ,yBAAyB;QACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,UAAkB;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;IAMD,qBAAqB,CAAC,EAAY;QAChC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,EAAE,EAAE,CAAC;QACL,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;QACpC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;SAC3B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAID,gBAAgB,CAAC,UAAkB,EAAE,KAAY;QAC/C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;IAC1C,CAAC;IAED,kBAAkB,CAAC,UAAkB;QACnC,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAED,WAAW,CAAC,UAAkB;QAC5B,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAED,aAAa,CAAC,UAAkB;;QAC9B,OAAO,UAAI,CAAC,WAAW,CAAC,UAAU,CAAC,0CAAE,UAAU,CAAC;IAClD,CAAC;CAGF;AApFD,sBAoFC;AAOD,MAAa,eAAe;IAI1B,YACS,KAAY,EACZ,UAAkB,EACzB,MAAoB;QAFb,UAAK,GAAL,KAAK,CAAO;QACZ,eAAU,GAAV,UAAU,CAAQ;QAJ3B,eAAU,GAAQ,IAAI,CAAC;QAOrB,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;QAElC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,qBAAQ,YAAY,CAAE,CAAC;QAElD,kBAAkB;QAClB,MAAM,UAAU,GAAG,IAAI,CAAC;QACxB,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,MAAM,QAAQ,GAA2B;YACvC,MAAM;YACN,UAAU;YACV,OAAO;YACP,aAAa,EAAE,KAAK;YACpB,GAAG,EAAE,CAAC;SACP,CAAC;QACF,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;QAE7C,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC3C,MAAM,MAAM,GAAG,GAAG,EAAE,CAAE,UAAU,CAAC,KAAa,CAAC,QAAQ,CAAC,CAAC;YACzD,wBAAY,EAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC3C,wBAAY,EAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YACxC,wBAAY,EAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE;gBACvC,MAAM,eAAe,GAAG,CAAC,QAAQ,CAAC,aAAa,IAAI,UAAU,CAAC,UAAU,CAAC;gBACzE,IAAI,CAAC,eAAe,EAAE;oBACpB,OAAO,CAAC,KAAK,CAAC,kBAAkB,QAAQ,cAAc,EAAE,GAAG,CAAC,CAAC;oBAC7D,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;iBACvD;gBACA,UAAU,CAAC,KAAa,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;gBAC1C,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC7C,MAAM,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACpE,wBAAY,EAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC3C,wBAAY,EAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACnD,wBAAY,EAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,IAAS,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;QACrH,CAAC,CAAC,CAAC;QAEH,kCAAkC;QAClC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YAC/C,MAAM,YAAY,GAAG,MAAM,sBAAU,EAAC,YAAY,CAAC,EAAE,CAAC;YACtD,IAAI,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC;gBAAE,OAAO;YAC3C,MAAM,cAAc,GAAG,CAAC,OAAgB,EAAE,EAAE,CAAE,UAAkB,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC;YACzF,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,2BAA2B;QAC3B,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,yBAAyB;QACzB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC/C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,oBAAoB;QAClB,uCAAuC;QACvC,IAAI,CAAC,WAAW,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,mBAAO,EAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACnG,CAAC;IAED,gBAAgB,CAAC,YAAoB,EAAE,cAAwB,EAAE,mBAAyB;QACxF,MAAM,UAAU,GAAG,IAAI,CAAC;QACxB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,UAAU,CAAC;QACzC,MAAM,eAAe,GAAG,mBAAmB,IAAI,UAAU,CAAC;QAE1D,UAAU,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAc,CAAC;QAEzE,4DAA4D;QAC3D,UAAkB,CAAC,YAAY,CAAC,GAAG,UAAU,GAAG,IAAW;YAC1D,kDAAkD;YAClD,iDAAiD;YACjD,gCAAgC;YAChC,IAAI,UAAU,CAAC,UAAU,EAAE;gBACzB,OAAO,cAAc,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;aACpD;YAED,MAAM,QAAQ,GAAG;gBACf,EAAE,EAAE,MAAM,CAAC,sBAAU,GAAE,CAAC;gBACxB,OAAO,EAAE,IAAI;gBACb,UAAU;gBACV,YAAY;gBACZ,eAAe;aAChB,CAAC;YACF,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAA+C;QACpD,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC/C,MAAM,kBAAkB,GAAG,OAAO,QAAQ,KAAK,UAAU,CAAC;QAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAEpC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;YAC3B,IAAI,kBAAkB,EAAE;gBACtB,QAAQ,CAAC,IAAI,CAAC,CAAC;aAChB;iBAAM;gBACL,MAAM,WAAW,GAAG,QAAoB,CAAC;gBACzC,MAAM,WAAW,GAAG,WAAW,CAAC,eAAe,IAAI,IAAI,CAAC;gBACxD,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;aAC7F;YACD,OAAO;SACR;QAED,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;QAE9B,IAAI;YACF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,mBAAO,EAAC,KAAK,EAAE,CAAC,KAAc,EAAE,EAAE;gBACnE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,kBAAkB,EAAE;oBACtB,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACf,OAAO;iBACR;gBACD,MAAM,WAAW,GAAG,QAAoB,CAAC;gBACzC,MAAM,WAAW,GAAG,WAAW,CAAC,eAAe,IAAI,IAAI,CAAC;gBACxD,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;YAC9F,CAAC,CAAC,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;SACrC;gBAAS;YACR,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAC9B,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QAED,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QAE/C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;YAChC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC3C;IACH,CAAC;IAEO,wBAAwB;QAC9B,MAAM,UAAU,GAAG,IAAI,CAAC;QACxB,MAAM,mBAAmB,GAAG,CAAC,UAAkB,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAC1F,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;IAC7D,CAAC;IAED,IAAI,KAAK;QACP,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO,IAAI,CAAC,UAAU,CAAC;QAE5C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAEnC,IAAI,KAAK,CAAC,kBAAkB,EAAE;YAC5B,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC;SAC5D;QAED,OAAO,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IAED,cAAc;IACd,IAAI,KAAK,CAAC,GAAQ;QAChB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QAC/B,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACzC,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAA6B,CAAC;IAC1D,CAAC;IAED,UAAU;QACR,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC;QACzC,MAAM,IAAI,GAAG,IAAI,qBAAS,EAAE,CAAC;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,UAAU,CAAC;YACd,WAAW,EAAE,UAAU;YACvB,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,GAAG,EAAE;gBACb,iDAAiD;gBACjD,UAAU,CAAC,KAAK,CAAC,CAAC,mBAAmB;gBACrC,2GAA2G;gBAC3G,OAAO,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC;YACtC,CAAC;SACF,CAAC,CAAC;QAEH,uBAAQ,EAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;YAChC,IAAI,CAAC,UAAU,CAAC;gBACd,WAAW,EAAE,WAAW;gBACxB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,GAAG,EAAE,CAAE,UAAkB,CAAC,QAAQ,CAAC;aAC9C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,uBAAQ,EAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE;YACpC,IAAI,CAAC,UAAU,CAAC;gBACd,WAAW,EAAE,eAAe;gBAC5B,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,GAAG,EAAE,CAAE,UAAkB,CAAC,QAAQ,CAAC;aAC9C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,uBAAQ,EAAC,MAAM,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACpC,IAAI,CAAC,UAAU,CAAC;gBACd,WAAW,EAAE,aAAa;gBAC1B,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,GAAG,EAAE,CAAE,UAAkB,CAAC,QAAQ,CAAC;aAC9C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,uBAAQ,EAAC,MAAM,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,EAAE;YAC1C,IAAI,CAAC,UAAU,CAAC;gBACd,WAAW,EAAE,mBAAmB;gBAChC,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,GAAG,EAAE,CAAE,UAAkB,CAAC,QAAQ,CAAC;aAC9C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;AA5OD,0CA4OC;AASD,EAAE;AACF,MAAM;AACN,yCAAyC;AACzC,MAAM;AACN,uCAAuC;AACvC,wCAAwC;AACxC,IAAI;AAES,0BAAkB,GAA0B;AACvD,qBAAqB;AACrB,+BAA+B;CAChC,CAAC;;;;;;;;;;;;;;;;;;;;AC9WF,gDAAwB;AACxB,+CAA4B;AAC5B,gDAA0B;AAC1B,gDAA+B;;;;;;;;;;;ACH/B,yCAAyC;AACzC,yCAAoC;AAGpC;;GAEG;AACH,SAAgB,gBAAgB,CAAe,aAAqG;IAClJ,IAAI,WAAgB,CAAC;IAErB,IAAI,mBAAO,EAAC,aAAa,CAAC,EAAE;QAC1B,WAAW,GAAG,IAAK,aAAqB,EAAE,CAAC;KAC5C;SAAM,IAAI,OAAO,aAAa,KAAK,UAAU,EAAE;QAC9C,WAAW,GAAI,aAA0B,EAAE,CAAC;KAC7C;SAAM;QACL,WAAW,GAAG,aAAa,CAAC;KAC7B;IAED,MAAM,MAAM,GAAiB;QAC3B,KAAK,EAAE,EAAE;QACT,OAAO,EAAE,EAAE;QACX,aAAa,EAAE,EAAE;QACjB,SAAS,EAAE,EAAE;KACd,CAAC;IAEF,MAAM,CAAC,KAAK,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAE9C,yBAAyB;IACzB,MAAM,eAAe,GAAG,WAAW,CAAC,OAAO,CAAC;IAC5C,IAAI,eAAe,EAAE;QACnB,oBAAQ,EAAC,eAAe,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE;YACjD,IAAI,UAAU,CAAC,GAAG,EAAE;gBAClB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;gBACtC,OAAO;aACR;YAED,MAAM,YAAY,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAI,OAAO,YAAY,KAAK,UAAU;gBAAE,OAAO;YAE/C,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;KACJ;IAED,0BAA0B;IAC1B,IAAI,WAAW,EAAE;QACf,oBAAQ,EAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE;YAE7C,IAAI,UAAU,CAAC,GAAG,EAAE;gBAClB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;gBACtC,OAAO;aACR;YAED,MAAM,YAAY,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,OAAO,YAAY,KAAK,UAAU;gBAAE,OAAO;YAE/C,MAAM,iBAAiB,GAAG,CACxB,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC;mBACvB,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC;mBACzB,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CACjC,CAAC;YAEF,IAAI,CAAC,iBAAiB;gBAAE,OAAO;YAE/B,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;KACJ;IAED,kBAAkB;IAClB,oBAAQ,EAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE;QAC7C,IAAI,UAAU,CAAC,GAAG;YAAE,OAAO;QAC3B,IAAI,QAAQ,IAAI,MAAM,CAAC,aAAa;YAAE,OAAO;QAC7C,MAAM,MAAM,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAI,OAAO,MAAM,KAAK,UAAU;YAAE,OAAO;QAEzC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC;AAxED,4CAwEC;AAED,SAAS,iBAAiB,CAAC,MAAW;IACpC,MAAM,YAAY,GAAiB,EAAE,CAAC;IACtC,oFAAoF;IACpF,IAAI,MAAM,CAAC,KAAK,EAAE;QAChB,oBAAQ,EAAC,MAAM,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;YACzC,YAAY,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;KACJ;SAAM;QACL,oBAAQ,EAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;YACnC,IAAI,KAAK,CAAC,GAAG;gBAAE,OAAO;YACtB,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;YAC5B,IAAI,OAAO,OAAO,KAAK,UAAU;gBAAE,OAAO;YAC1C,YAAY,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC;QACnC,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,YAAY,CAAC;AACtB,CAAC;;;;;;;;;;;;;;;;;;;;ACjGD,gDAA+B;AAC/B,gDAA8B;AAC9B,gDAAiC;AACjC,gDAA+B;AAC/B,gDAA+B;AAC/B,gDAA+B;AAC/B,+CAA4B;AAC5B,gDAAgC;;;;;;;;;;;ACPhC,4CAE8B;AAQjB,+BAAuB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAIrE,SAAgB,WAAW,CAAU,MAAe,EAAE,GAAG,IAAS;IAEhE,MAAM,QAAQ,GAAG,6BAAc,GAAE,CAAC;IAClC,MAAM,aAAa,GAAG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC;IAClE,OAAO,aAAa,CAAC;IAErB,sCAAsC;IACtC,EAAE;IACF,yDAAyD;IACzD,mFAAmF;IACnF,sDAAsD;IACtD,qCAAqC;IACrC,EAAE;IACF,aAAa;IACb,qCAAqC;IACrC,wBAAwB;IACxB,sEAAsE;IACtE,0CAA0C;IAC1C,+CAA+C;IAC/C,UAAU;IACV,uBAAuB;IACvB,SAAS;IACT,mCAAmC;IACnC,sEAAsE;IACtE,kFAAkF;IAClF,SAAS;IACT,kBAAkB;IAClB,sCAAsC;IACtC,SAAS;IACT,OAAO;IACP,MAAM;AACR,CAAC;AA/BD,kCA+BC;;;;;;;;;;;AC7CD,4CAAyC;AAGzC,gDAA6C;AAU7C,SAAgB,iBAAiB,CAC/B,WAAoC,EACpC,WAAqD,EACrD,mBAA8D;IAG9D,SAAS,QAAQ;QACf,IAAI,OAAO,WAAW,KAAK,UAAU;YAAE,OAAQ,WAAwB,EAAE,CAAC;QAC1E,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,MAAM,SAAS,GAAG,IAAI,qBAAS,EAAsC,CAAC;IAEtE,SAAS,CAAC,UAAU,CAAC;QACnB,WAAW,EAAE,cAAc;QAC3B,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE,GAAG,EAAE,CAAC,mBAAM,QAAQ,EAAE,EAAG;KACpC,CAAC,CAAC;IAEH,SAAS,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;QACtC,SAAS,CAAC,UAAU,CAAC;YACnB,WAAW,EAAE,kBAAkB;YAC/B,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,GAAG,EAAE,CAAC,iBACd,IAAI,EAAE,QAAQ,EACd,KAAK,EAAG,QAAQ,EAAU,CAAC,QAAQ,CAAC,EACpC,QAAQ,EAAE,CAAC,MAAe,EAAE,EAAE;oBAC3B,WAAmB,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;gBAC/C,CAAC,IACE,CAAC,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAC7E;SACH,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC;AACnB,CAAC;AApCD,8CAoCC;AAED,iBAAiB;AACjB,MAAa,iBAAiB;IAI5B,YAAY,WAAgB,EAAE,WAAgB,EAAE,mBAAwB;QACtE,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,WAAW,EAAE,WAAW,EAAE,mBAAmB,CAAC,CAAC;IACtF,CAAC;IAED,mBAAmB;QACjB,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,WAAW;YACtB,KAAK,EAAE,IAAI;SACZ,CAAC;IACJ,CAAC;CAEF;AAfD,8CAeC;AAED,SAAgB,iBAAiB,CAC/B,WAAoC,EACpC,WAAqD,EACrD,mBAA8D;IAE9D,OAAO,8BAAW,EAAC,iBAAiB,EAAE,WAAW,EAAE,WAAW,EAAE,mBAAmB,CAAQ,CAAC;AAC9F,CAAC;AAND,8CAMC;;;;;;;;;;;AC3ED,oCAAyE;AAEzE,MAAa,YAAY;IAAzB;QACE,kBAAa,GAAmB,aAAa,CAAC;IAShD,CAAC;IAPC,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,aAAa,KAAK,SAAS,CAAC;IAC1C,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,aAAa,KAAK,MAAM,CAAC;IACvC,CAAC;CACF;AAVD,oCAUC;AAED,SAAgB,aAAa;IAC3B,OAAO,mBAAW,EAAC,YAAY,EAAE,KAAK,EAAC,cAAc,CAAC,EAAE;QAEtD,0FAA0F;QAC1F,EAAE;QACF,mDAAmD;QACnD,EAAE;QACF,mCAAmC;QACnC,mFAAmF;QACnF,cAAc;QACd,MAAM;QACN,EAAE;QACF,oFAAoF;QACpF,EAAE;QACF,4CAA4C;QAC5C,+DAA+D;QAC/D,QAAQ;QACR,MAAM;IACR,CAAC,CAAC,CAAC;AACL,CAAC;AAnBD,sCAmBC;;;;;;;;;;;ACjCD,yCAAyD;AAEzD,4CAAyC;AACzC,gDAA6C;AAC7C,gDAA6C;AAC7C,gDAA6C;AAE7C,MAAa,gBAAgB;IAA7B;QAEE,mEAAmE;QAEnE,UAAK,GAAuC;YAC1C,MAAM,EAAE,MAAqB;YAC7B,IAAI,EAAE,IAAwB;YAC9B,KAAK,EAAE,IAAyB;YAChC,MAAM,EAAE,IAA0B;SACnC,CAAC;IAgBJ,CAAC;IAdC,OAAO,CAAC,IAAW;QACjB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC;IACzC,CAAC;CACF;AAzBD,4CAyBC;AAED;;GAEG;AACH,MAAa,WAAW;IAmBtB,YAAY,GAAG,IAAsB;QAZrC,UAAK,GAAG,8BAAW,EAAC,gBAAgB,CAAC,CAAC;QACtC,aAAQ,GAAG,0BAAc,GAAE,CAAC;QAC5B,YAAO,GAAG,8BAAW,EAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5D,oBAAe,GAA0B,IAAI,CAAC;QAC9C,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAG,IAAI,CAAC;QAGf,mBAAc,GAAG,IAAI,CAAC;QAKpB,MAAM,eAAe,GAAG,uBAAuB,CAAC,IAAI,CAAC,CAAC;QACtD,MAAM,OAAO,mBACX,OAAO,EAAE,IAAI,EACb,MAAM,EAAE,IAAI,EACZ,WAAW,EAAE,EAAE,EACf,SAAS,EAAE,IAAI,EACf,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC,EACf,SAAS,EAAE,GAAG,EAAE,GAAE,CAAC,EACnB,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC,IACd,eAAe,CACnB,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;IACnC,CAAC;IAED,IAAI;QAEF,MAAM,YAAY,GAAG,IAAI,qBAAS,EAAE,CAAC;QACrC,YAAY,CAAC,UAAU,CAAC;YACtB,WAAW,EAAE,aAAa;YAC1B,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,GAAG,EAAE;gBACb,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAC9B,CAAC;SACF,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAS,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACxD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAChB,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;YACxB,IAAI;SACL,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,eAAe;YAAE,OAAO,IAAI,CAAC,eAAe,CAAC;QACtD,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED,KAAK;QACH,IAAI,WAAgB,CAAC;QAGrB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;SAC3E;aAAM;YACL,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;SACpD;QAED,IAAI,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,EAAE;YACrB,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;aACjC;YACD,MAAM,SAAS,GAAG,sBAAU,GAAE,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;YACnC,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,IAAW,EAAE,EAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;oBAAE,OAAO;gBAC1D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC;iBACC,KAAK,CAAC,CAAC,CAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;oBAAE,OAAO;gBAC1D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAQ,CAAC,CAAC;gBAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACjD,CAAC,CAAC,CAAC;SACN;QACD,wCAAwC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAEnD,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,WAAW;QACb,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC;QAC5D,IAAI,cAAc,EAAE;YAClB,OAAO,cAAc,CAAC,QAAQ,CAAC;SAChC;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS;YAAE,OAAO,IAAW,CAAC;QAChD,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;IAClC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAO;QAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,OAAgB;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,SAAS;QACP,8BAA8B;QAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,mBAAmB;QACjB,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,KAAK,EAAE,IAAI;SACZ,CAAC;IACJ,CAAC;CACF;AAlJD,kCAkJC;AAED,SAAgB,WAAW,CAA+B,GAAG,IAAgB;IAC3E,OAAO,8BAAW,EAAC,WAA6C,EAAE,GAAG,IAAI,CAAC,CAAC;AAC7E,CAAC;AAFD,kCAEC;AA4BD;;;GAGG;AACH,SAAgB,uBAAuB,CAAuE,IAAgB;IAC5H,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;YAC7B,OAAO;gBACL,KAAK,EAAE,GAAG;aACO,CAAC;SACrB;QACD,OAAO,GAAG,CAAC;KACZ;IAED,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QAErB,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;YACjC,OAAO;gBACL,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;gBACd,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;aACD,CAAC;SACrB;QAED,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;YACpB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;SACG,CAAC;KAErB;IAED,OAAO;QACL,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;QACd,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;KACD,CAAC;AACtB,CAAC;AAhCD,0DAgCC;;;;;;;;;;;AC3PD,yCAIqB;AAErB,yCAGkB;AAElB,gDAA6C;AAC7C,+CAAyF;AAE5E,yBAAiB,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAEzD,SAAgB,WAAW,CAMzB,aAA6B,EAC7B,uBAAuB,GAAG,IAAI,EAC9B,QAAsE;IAEtE,OAAO,8BAAW,EAAC,cAAc,EAAE,aAAa,EAAE,uBAAuB,EAAE,QAAQ,CAAwD,CAAC;AAC9I,CAAC;AAXD,kCAWC;AAED,MAAa,cAAc;IAQzB,YAAmB,WAAyB,EAAS,0BAA0B,IAAI,EAAS,QAA4D;QAArI,gBAAW,GAAX,WAAW,CAAc;QAAS,4BAAuB,GAAvB,uBAAuB,CAAO;QAAS,aAAQ,GAAR,QAAQ,CAAoD;QANxJ,UAAK,GAAG,kBAAM,EAAC,aAAK,CAAC,CAAC;QACtB,aAAQ,GAAG,0BAAc,GAAE,CAAC;QAO1B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5E,IAAI,CAAC,WAAW,GAAG,mCAAiB,EAAC,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACtH,uDAAuD;QACvD,wBAAY,EAAC,IAAI,CAAC,eAAe,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;IAE/F,CAAC;IAED,IAAI;;QACF,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC;QAC5D,IAAI,CAAC,cAAc,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAC7D;QACD,0DAA0D;QAC1D,IAAI,IAAI,CAAC,uBAAuB,IAAI,cAAc,EAAE;YAClD,MAAM,YAAY,GAAG,cAAc,CAAC,QAAQ,CAAC;YAC7C,MAAM,SAAS,GAAa,2BAAc,CAAC,OAAO,0CAAE,SAAS,0CAAE,WAAW,KAAI,EAAE,CAAC;YACjF,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBAC/B,MAAM,QAAQ,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;gBAC5C,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,YAAY,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;gBAC5E,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,IAAS,EAAE,EAAE,CAAE,IAAI,CAAC,eAAuB,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACtG,CAAC,CAAC,CAAC;YAEH,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAC,GAAG,EAAE;gBAC1C,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;YAC9C,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,EAAS,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,WAAW,EAAE,kBAAkB;YAC/B,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;YACvC,QAAQ,EAAE,GAAG,EAAE;gBACb,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YACtC,CAAC;SACF,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC1B,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,mBAAmB;QACjB,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,KAAK,EAAE,IAAI,CAAC,SAAS;SACtB,CAAC;IACJ,CAAC;CAEF;AAtED,wCAsEC;AAED;;GAEG;AACH,SAAgB,QAAQ;IACtB,OAAO,UAAU,MAAW,EAAE,UAAkB;QAC9C,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC;QAC9C,iCAAiC;QACjC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC,CAAC;AACJ,CAAC;AAND,4BAMC;;;;;;;;;;;AC9GD,yCAA0D;AAE1D,yCAEkB;AAClB,yCAAwC;AACxC,gDAA6C;AAE7C,MAAa,WAAW;IAMtB,YACS,SAAkB,EAClB,QAA4C,EAC5C,UAAU,iBAAS;QAFnB,cAAS,GAAT,SAAS,CAAS;QAClB,aAAQ,GAAR,QAAQ,CAAoC;QAC5C,YAAO,GAAP,OAAO,CAAY;QAP5B,UAAK,GAAG,kBAAM,EAAC,aAAK,CAAC,CAAC;QACtB,YAAO,GAAoB,IAAI,CAAC;QAChC,YAAO,GAAa,IAAI,CAAC;IAMtB,CAAC;IAEJ,IAAI;QACF,MAAM,cAAc,GAAG,+BAAmB,EAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC;QACjF,IAAI,CAAC,cAAc,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QAED,MAAM,OAAO,GAAG,cAAc,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;YACrD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAQ,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;gBAAE,OAAO;YAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;CAEF;AAhCD,kCAgCC;AAED,SAAgB,WAAW,CACzB,UAAmB,EACnB,QAA4C,EAC5C,OAA4C;IAE5C,OAAO,8BAAW,EAAC,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjE,CAAC;AAND,kCAMC;;;;;;;;;;;AC/CD,yCAEqB;AAErB,yCAAiD;AAEjD,SAAgB,aAAa,CAGzB,MAAe;IAEjB,OAAO,UAAU,KAAK,EAAE,IAAI;QAE1B,IAAI,OAAO,GAAG,IAAI,CAAC;QAEnB,oBAAQ,EAAC,MAAuB,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;YAEpD,IAAI,KAAK,CAAC,GAAG;gBAAE,OAAO;YACtB,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,UAA2B,CAAC;YACzD,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAEtB,MAAM,MAAM,GAAG,QAAQ,CAAC,QAA4B,CAAC;YACrD,MAAM,aAAa,GAAG,MAAM,CAAC,mBAAmB,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;YACjF,MAAM,aAAa,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;YAEzF,MAAM,UAAU,GAAG,aAAa,IAAI,aAAa,CAAC,KAAK,CAAC;YACxD,IAAI,UAAU,EAAE;gBACd,MAAM,cAAc,GAAG,UAA4B,CAAC;gBACpD,mBAAO,EAAC,cAAc,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;oBACpD,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,MAAM,CAAC;wBAAE,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,UAAiB,CAAC,CAAC;aAChD;YAED,MAAM,SAAS,GAAG,aAAa,IAAI,aAAa,CAAC,IAAI,CAAC;YACtD,IAAI,SAAS,EAAE;gBACb,OAAO,CAAC,UAAU,CAAC;oBACjB,WAAW,EAAE,cAAc;oBAC3B,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,IAAI;oBACd,SAAS,EAAE,SAAgB;oBAC3B,QAAQ;wBACN,OAAO,aAAa,CAAC;oBACvB,CAAC;iBACF,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QAEH,yDAAyD;QACzD,sBAAsB;QACtB,EAAE;QACF,4CAA4C;QAC5C,uDAAuD;QACvD,EAAE;QACF,4CAA4C;QAC5C,sBAAsB;QACtB,2DAA2D;QAC3D,+DAA+D;QAC/D,0EAA0E;QAC1E,UAAU;QACV,sDAAsD;QACtD,MAAM;QACN,EAAE;QACF,0CAA0C;QAC1C,qBAAqB;QACrB,2BAA2B;QAC3B,8BAA8B;QAC9B,qCAAqC;QACrC,wBAAwB;QACxB,qCAAqC;QACrC,qBAAqB;QACrB,0CAA0C;QAC1C,WAAW;QACX,UAAU;QACV,MAAM;QACN,EAAE;QACF,MAAM;QAEN,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;AACJ,CAAC;AA1ED,sCA0EC;AAYD,6DAA6D;AAC7D,kIAAkI;AAElI,8BAA8B;AAC9B,4BAA4B;AAE5B,sDAAsD;AACtD,4BAA4B;AAC5B,qCAAqC;AACrC,mBAAmB;AACnB,KAAK;AACL,wDAAwD;AACxD,sCAAsC;AACtC,oBAAoB;AACpB,EAAE;AACF,EAAE;AACF,6DAA6D;AAC7D,2DAA2D;AAC3D,kBAAkB;AAElB,sBAAsB;AACtB,gBAAgB;AAChB,kBAAkB;AAClB,IAAI;AACJ,EAAE;AACF,yCAAyC;AACzC,EAAE;AACF,EAAE;AACF,qBAAqB;AACrB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,yBAAyB;AACzB,iCAAiC;AACjC,QAAQ;AACR,IAAI;AACJ,EAAE;AACF,0BAA0B;AAC1B,EAAE;AACF,oBAAoB;AACpB,EAAE;AACF,yBAAyB;AACzB,+BAA+B;AAC/B,QAAQ;AACR,IAAI;AAEJ,0EAA0E;AAC1E,uFAAuF;AACvF,4BAA4B;AAC5B,kBAAkB;AAClB,kBAAkB;AAClB,mBAAmB;AACnB,EAAE;AACF,oCAAoC;AACpC,+BAA+B;AAC/B,sBAAsB;AACtB,EAAE;AACF,EAAE;AACF,uEAAuE;AACvE,EAAE;AACF,mBAAmB;AACnB,4BAA4B;AAC5B,mBAAmB;;;;;;;;;;;AC1JnB,yCAAuC;AAIvC,SAAgB,SAAS,CAAkB,MAAe;IAExD,OAAO,UAAU,KAAK,EAAE,IAAI;QAE1B,oBAAQ,EAAC,MAAuB,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;YACpD,MAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;YAC7B,MAAM,UAAU,GAAG,CAAC,QAAQ,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,UAAU,CAAC;YAClE,MAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAE,MAAc,CAAC,QAAQ,CAAC,CAAC;YAE/F,IAAI,CAAC,UAAU,CAAC;gBACd,WAAW,EAAE,YAAY;gBACzB,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,QAAQ;gBACd,QAAQ;aACT,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAW,CAAC;IACrB,CAAC,CAAC;AACJ,CAAC;AAnBD,8BAmBC;;;;;;;;;;;;;;;;;;;;ACxBD,gDAA8B;AAC9B,gDAAwB;AACxB,gDAA2B;;;;;;;;;;;ACF3B,kDAAgD;AAEhD;;GAEG;AACH,SAAgB,WAAW,CAAC,IAAS,EAAE,IAAS,EAAE,YAAoB,EAAE,QAAgB;IACtF,IAAI,IAAI,KAAK,IAAI;QAAE,OAAO,IAAI,CAAC;IAC/B,IAAI,YAAY,KAAK,QAAQ;QAAE,OAAO,KAAK,CAAC;IAC5C,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;QAAE,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAChF,IAAI,mCAAa,EAAC,IAAI,CAAC,IAAI,mCAAa,EAAC,IAAI,CAAC,EAAE;QAC9C,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM;YAAE,OAAO,KAAK,CAAC;QAChD,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,EAAE,QAAQ,CAAC;gBAAE,OAAO,KAAK,CAAC;SAClF;QACD,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAbD,kCAaC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,IAAS,EAAE,IAAS;IAC5C,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvC,CAAC;AAFD,8BAEC;AAED;;GAEG;AACH,SAAS,YAAY,CAAC,CAAQ,EAAE,CAAQ;IACtC,IAAI,CAAC,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IACzB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM;QAAE,OAAO,KAAK,CAAC;IACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACjC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;KACjC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAGD;;GAEG;AACH,SAAgB,OAAO,CAAC,IAAS,EAAE,IAAS;IAC1C,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvC,CAAC;AAFD,0BAEC;;;;;;;;;;;AC7CD,4CAAsC;AAItC;;GAEG;AACH,SAAgB,SAAS,CAAwB,MAAe,EAAE,MAAgB;IAChF,IAAI,CAAC,MAAM;QAAE,MAAM,GAAG,EAAa,CAAC;IACpC,uBAAQ,EAAC,MAAuB,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE;QACzD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IACH,OAAO,MAAoC,CAAC;AAC9C,CAAC;AAND,8BAMC;AAED;;;;GAIG;AACH,SAAgB,KAAK,CAAqC,IAAQ,EAAE,IAAQ;IAC1E,MAAM,MAAM,GAAG,EAAE,CAAC;IAElB,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxB,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAExB,OAAO,MAAiB,CAAC;AAC3B,CAAC;AAPD,sBAOC;;;;;;;;;;;AC3BD;;GAEG;AACH,kDAAgD;AAGhD,6DAA6D;AAE7D,SAAgB,QAAQ,CACtB,QAAW,EACX,EAAiE;IAEjE,IAAI,MAAM,GAAG,QAAQ,CAAC;IACtB,MAAM,UAAU,GAAG,EAAE,CAAC;IAEtB,IAAI,mCAAa,EAAC,MAAM,CAAC,EAAE;QACzB,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACzB;SAAM;QACL,OAAO,MAAM,CAAC,WAAW,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC3C,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxB,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;SACxC;KACF;IAED,MAAM,gBAAgB,GAA4B,EAAE,CAAC;IAErD,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;QAC9B,MAAM,SAAS,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACpD,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAChC,IAAI,QAAQ,IAAI,gBAAgB;gBAAE,SAAS;YAC3C,gBAAgB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YAClC,MAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,UAAU;gBAAE,OAAO;YACxB,MAAM,UAAU,GAAG,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAC5C,IAAI,UAAU;gBAAE,OAAO;SACxB;KACF;AACH,CAAC;AA7BD,4BA6BC;AAED,SAAgB,cAAc,CAAI,QAAW;IAC3C,MAAM,WAAW,GAA6B,EAAE;IAChD,QAAQ,CAAC,QAAe,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE;QACjD,WAAW,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;IACrC,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAND,wCAMC;AAED,SAAgB,OAAO,CAAI,QAAW;IACpC,MAAM,IAAI,GAAU,EAAE,CAAC;IACvB,QAAQ,CAAC,QAAe,EAAE,QAAQ,CAAC,EAAE;QACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IACH,OAAO,IAAI,CAAC;AACd,CAAC;AAND,0BAMC;AAED,SAAgB,UAAU,CAAC,GAAW,EAAE,QAAkC;IACxE,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC;AAFD,gCAEC;;;;;;;;ACzDD;;;;;;;ACAA;;;;;;;;;;;ACAO;AACP,YAAY;AACZ;AACA,KAAK;AACL,GAAG;AACH;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;UCVD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://slap/webpack/universalModuleDefinition","webpack://slap/./node_modules/immer/dist/immer.esm.js","webpack://slap/./node_modules/is-plain-object/dist/is-plain-object.js","webpack://slap/./node_modules/object-assign/index.js","webpack://slap/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://slap/./node_modules/react/jsx-runtime.js","webpack://slap/./lib/index.ts","webpack://slap/./lib/react-bindings/ReactModules.tsx","webpack://slap/./lib/react-bindings/hooks.ts","webpack://slap/./lib/react-bindings/index.ts","webpack://slap/./lib/react-bindings/react-store-adapter.ts","webpack://slap/./lib/react-bindings/useModule.ts","webpack://slap/./lib/react-bindings/useModuleInstance.ts","webpack://slap/./lib/react-bindings/useSelector.ts","webpack://slap/./lib/scope/flatten.ts","webpack://slap/./lib/scope/index.ts","webpack://slap/./lib/scope/injector.ts","webpack://slap/./lib/scope/interfaces.ts","webpack://slap/./lib/scope/provider.ts","webpack://slap/./lib/scope/scope.ts","webpack://slap/./lib/scope/subject.ts","webpack://slap/./lib/scope/utils.ts","webpack://slap/./lib/store/StateView.ts","webpack://slap/./lib/store/Store.ts","webpack://slap/./lib/store/index.ts","webpack://slap/./lib/store/parse-config.ts","webpack://slap/./lib/store/plugins/index.ts","webpack://slap/./lib/store/plugins/inject-child.ts","webpack://slap/./lib/store/plugins/inject-form.ts","webpack://slap/./lib/store/plugins/inject-loading.ts","webpack://slap/./lib/store/plugins/inject-query.ts","webpack://slap/./lib/store/plugins/inject-state.ts","webpack://slap/./lib/store/plugins/inject-watch.ts","webpack://slap/./lib/store/plugins/pickInjectors.ts","webpack://slap/./lib/store/plugins/pickProps.ts","webpack://slap/./lib/utils/index.ts","webpack://slap/./lib/utils/isDeepEqual.ts","webpack://slap/./lib/utils/merge.ts","webpack://slap/./lib/utils/traverse.ts","webpack://slap/external umd \"react\"","webpack://slap/external umd \"react-dom\"","webpack://slap/./node_modules/nanoevents/index.js","webpack://slap/webpack/bootstrap","webpack://slap/webpack/runtime/define property getters","webpack://slap/webpack/runtime/hasOwnProperty shorthand","webpack://slap/webpack/runtime/make namespace object","webpack://slap/webpack/before-startup","webpack://slap/webpack/startup","webpack://slap/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"slap\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"slap\"] = factory(root[\"react\"], root[\"react-dom\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__156__, __WEBPACK_EXTERNAL_MODULE__386__) {\nreturn ","function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(t.length?\" \"+t.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function r(n){return!!n&&!!n[Q]}function t(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return\"production\"===process.env.NODE_ENV||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b(\"Patches\").R(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if(\"production\"!==process.env.NODE_ENV&&c===o&&n(5),r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,r,t){var e=s(r)?b(\"MapSet\").N(r,t):v(r)?b(\"MapSet\").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return(t?t.A:_()).p.push(e),e}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1}else e=F(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return\"production\"!==process.env.NODE_ENV&&f(r),en.get(r,n)},set:function(r){var t=this[Q];\"production\"!==process.env.NODE_ENV&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.D,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=\"\"+i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return\"-\"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},R:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=r.concat(n);t.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:r.concat([\"length\"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:\"replace\",path:[],value:r===H?void 0:r}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=R(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.D.set(n,!0),t.o.set(n,r),t.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.D.set(n,!1):r.D.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(r){n.D.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=R(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,\"size\",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m(\"MapSet\",{N:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=R(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&\"number\"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=R(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return\"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);export default fn;export{un as Immer,pn as applyPatches,K as castDraft,$ as castImmutable,ln as createDraft,D as current,J as enableAllPlugins,N as enableES5,C as enableMapSet,T as enablePatches,dn as finishDraft,d as freeze,L as immerable,r as isDraft,t as isDraftable,H as nothing,e as original,fn as produce,cn as produceWithPatches,sn as setAutoFreeze,vn as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export * from './scope';\nexport * from './store';\nexport * from './react-bindings';\nexport * from './utils';\n","import React, {\n  ReactNode, useContext,\n} from 'react';\nimport { useOnCreate } from './hooks';\nimport { Scope, TModuleConstructorMap } from '../scope';\nimport { ReactStoreAdapter } from './react-store-adapter';\nimport { Store } from '../store';\n\nexport type TAppContext = {\n  servicesScope: Scope; // keeps singleton services in the root scope\n  modulesScope: Scope; // keeps non-singleton modules\n}\n\nexport const SlapContext = React.createContext<TAppContext|null>(null);\n\n\nexport function useAppContext() {\n  return useContext(SlapContext)!;\n}\n\nexport function useScope() {\n  return useAppContext().servicesScope;\n}\n\n\nexport function createApp(Services: TModuleConstructorMap = {}): TAppContext {\n  const rootScope = new Scope({ ...Services, Store, ReactStoreAdapter });\n  const modulesScope = rootScope.createChildScope({}, { autoregister: true });\n\n  rootScope.init(ReactStoreAdapter);\n\n  return { servicesScope: rootScope, modulesScope };\n}\n\nexport function ReactModules(p: {children: ReactNode | ReactNode[], app?: TAppContext}) {\n  const appScope = useOnCreate(() => p.app || createApp());\n\n  return (\n    <SlapContext.Provider value={appScope}>\n      {p.children}\n    </SlapContext.Provider>\n  );\n}\n\n\n// export function SlapModuleRoot(p: {children: ReactNode | ReactNode[], module: any }) {\n//   const scope = useAppContext().modulesScope;\n//\n//   const { moduleName, store, moduleScope } = useOnCreate(() => {\n//     const store = scope.resolve(Store);\n//     const moduleName = p.module.prototype.constructor.name;\n//     const moduleScope = scope.registerScope({ [moduleName]: p.module });\n//     return { moduleScope, moduleName, store };\n//   });\n//\n//   store.setModuleContext(moduleName, moduleScope);\n//   useEffect(() => {\n//     store.resetModuleContext(moduleName);\n//   });\n//   return <>{p.children}</>;\n// }\n","import React, { useState, useEffect } from 'react';\nimport { message } from 'antd';\n\n/**\n * onCreate shortcut\n * Helpful if you need to calculate an immutable initial state for a component\n */\nexport function useOnCreate<TReturnValue>(cb: () => TReturnValue) {\n  return useState(cb)[0];\n}\n\n/**\n * onDestroy shortcut\n */\nexport function useOnDestroy(cb: () => void) {\n  useEffect(() => cb, []);\n}\n\nlet nextComponentId = 1;\n\n/**\n * Returns a unique component id\n * If DEBUG=true then the componentId includes a component name\n */\nexport function useComponentId() {\n  const DEBUG = false;\n  return useOnCreate(() => (DEBUG ? `${nextComponentId++}_${getComponentName()}` : `${nextComponentId++}`));\n}\n\n/**\n * Get component name from the callstack\n * Use for debugging only\n */\nexport function getComponentName(): string {\n  try {\n    throw new Error();\n  } catch (e: unknown) {\n    const error = e as Error;\n    const regex = / at ([A-Z]\\w+) /;\n    try {\n      const componentName = error.stack!.split('\\n').find(message => message.match(regex))!.match(regex)![1];\n      return componentName;\n    } catch (e) {\n      return 'unknown_component';\n    }\n  }\n}\n\n/**\n * Returns a function for force updating of the component\n * Use it only for frequently used components for optimization purposes\n *\n * Current implementation from\n * https://github.com/ant-design/ant-design/blob/master/components/_util/hooks/useForceUpdate.ts\n */\nexport function useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}\n","export * from './hooks';\nexport * from './react-store-adapter';\nexport * from './ReactModules';\nexport * from './hooks';\nexport * from './useModule';\nexport * from './useModuleInstance';\nexport * from './useSelector';\n","import { unstable_batchedUpdates } from 'react-dom';\nimport { Dict } from '../scope';\nimport { Store } from '../store/Store';\nimport { inject } from '../scope/injector';\nimport { StateView } from '../store';\nimport { isSimilar } from '../utils';\n\nexport class ReactStoreAdapter {\n\n  store = inject(Store);\n  components = {} as Dict<ComponentView>;\n\n  registerComponent(moduleView: StateView, componentId: string, forceUpdate: Function): ComponentView {\n    const componentView = new ComponentView(this.store, moduleView, componentId, forceUpdate);\n    this.components[componentId] = componentView;\n    return componentView;\n  }\n\n  destroyComponent(componentId: string) {\n    const componentView = this.components[componentId];\n    if (!componentView) return;\n    componentView.setDestroyed();\n    delete this.components[componentId];\n  }\n\n  init() {\n    this.store.events.on('onReadyToRender', () => this.onMutation());\n  }\n\n  watchers = {} as Record<string, Function>;\n\n  watchersOrder = [] as string[];\n\n  // TODO: rename to mount-component ?\n  createWatcher(watcherId: string, cb: Function) {\n    this.watchersOrder.push(watcherId);\n    this.watchers[watcherId] = cb;\n    return watcherId;\n  }\n\n  removeWatcher(watcherId: string) {\n    const ind = this.watchersOrder.findIndex(id => watcherId === id);\n    this.watchersOrder.splice(ind, 1);\n    delete this.watchers[watcherId];\n  }\n\n  updateIsInProgress = false;\n\n  onMutation() {\n    this.updateUI();\n  }\n\n  updateUI() {\n    if (this.updateIsInProgress) {\n      console.error('Tried to update component state before component has been mounted.');\n    }\n    const watchersIds = [...this.watchersOrder];\n\n    this.updateIsInProgress = true;\n    try {\n      // force update components\n      unstable_batchedUpdates(() => {\n        watchersIds.forEach(id => {\n          this.watchers[id] && this.watchers[id]();\n          const component = this.components[id];\n          if (component.needUpdate()) {\n            component.forceUpdate();\n            component.setInvalidated(false);\n          }\n        });\n      });\n    } finally {\n      this.updateIsInProgress = false;\n    }\n\n  }\n}\n\nexport type ComponentSnapshot = {\n  affectedModules: Dict<number>;\n  props: Dict<any>;\n}\n\nexport class ComponentView {\n  public isDestroyed = false;\n  public isMounted = false;\n  public isInvalidated = false;\n\n  lastSnapshot: ComponentSnapshot = {\n    affectedModules: {} as Dict<number>,\n    props: null as any,\n  };\n\n  constructor(public store: Store, public stateView: StateView, public id: string, public forceUpdate: Function) {\n  }\n\n  makeSnapshot(): ComponentSnapshot {\n    const snapshot = {\n      affectedModules: {},\n      props: {},\n    };\n\n    snapshot.affectedModules = this.store.listenAffectedModules(() => {\n      snapshot.props = this.stateView.getSnapshot();\n    });\n\n    this.lastSnapshot = snapshot;\n    return snapshot;\n  }\n\n  needUpdate() {\n    return this.isInvalidated && this.isMounted && !this.isDestroyed;\n  }\n\n  setMounted() {\n    this.isMounted = true;\n  }\n\n  setInvalidated(invalidated: boolean) {\n    this.isInvalidated = invalidated;\n  }\n\n  setDestroyed() {\n    this.isDestroyed = true;\n    this.isMounted = false;\n  }\n\n  defaultShouldComponentUpdate(newSnapshot: ComponentSnapshot, prevSnapshot: ComponentSnapshot): boolean {\n    if (isSimilar(prevSnapshot.affectedModules, newSnapshot.affectedModules)) {\n      // no modules changed, do not call compare props\n      return false;\n    }\n\n    if (!isSimilar(prevSnapshot.props, newSnapshot.props)) {\n\n      return true;\n    }\n    return false;\n  }\n\n  shouldComponentUpdate(newSnapshot: ComponentSnapshot, prevSnapshot: ComponentSnapshot): boolean {\n    if (this.customShouldComponentUpdate) {\n      return this.customShouldComponentUpdate(newSnapshot, prevSnapshot, this.defaultShouldComponentUpdate);\n    }\n    return this.defaultShouldComponentUpdate(newSnapshot, prevSnapshot);\n  }\n\n  customShouldComponentUpdate: ShouldComponentUpdateFN | null = null;\n\n  setShouldComponentUpdate(shouldUpdateCb: ShouldComponentUpdateFN) {\n    this.customShouldComponentUpdate = shouldUpdateCb;\n  }\n\n\n  willComponentUpdate: WillComponentUpdateFN | null = null;\n\n  setWillComponentUpdate(cb: WillComponentUpdateFN) {\n    this.willComponentUpdate = cb;\n  }\n}\n\nexport type ShouldComponentUpdateFN = (newSnapshot: ComponentSnapshot, prevSnapshot: ComponentSnapshot, defaultShouldComponentUpdate: ShouldComponentUpdateFN) => boolean;\nexport type WillComponentUpdateFN = (newSnapshot: ComponentSnapshot, prevSnapshot: ComponentSnapshot) => boolean;\n","import { useEffect, useLayoutEffect, useRef } from 'react';\nimport { Simulate } from 'react-dom/test-utils';\nimport { getComponentName, useForceUpdate, useOnCreate, useOnDestroy } from './hooks';\nimport { useModuleInstance } from './useModuleInstance';\nimport {\n  generateId,\n  getInstanceMetadata,\n  GetModuleConstructorArgs,\n  GetModuleInstanceFor,\n  TModuleLocatorType,\n} from '../scope';\nimport {\n  createStateViewForModule,\n  GetModuleStateView, ExtendView,\n} from '../store/StateView';\nimport { Store } from '../store';\nimport { ComponentView, ReactStoreAdapter } from './react-store-adapter';\nimport { isSimilar } from '../utils';\n\nexport function useComponentView<TModule, TResult = GetUseComponentViewResult<TModule>>\n(module: TModule): TResult {\n  const forceUpdate = useForceUpdate();\n\n  const { componentId, reactStore, component, provider } = useOnCreate(() => {\n\n    const provider = getInstanceMetadata(module).provider;\n    const reactStore = provider.scope.resolve(ReactStoreAdapter);\n    const store = provider.scope.resolve(Store);\n    const componentName = getComponentName();\n    const componentId = `${componentName}__${generateId()}`;\n    let moduleView = createStateViewForModule(module);\n    const parentModuleView = provider.getMetadata('parentModuleView');\n    if (parentModuleView) {\n      moduleView = moduleView.mergeView(parentModuleView);\n    }\n    const component = reactStore.registerComponent(moduleView, componentId, forceUpdate);\n\n    function extend<TNewProps>(\n      newPropsFactory: (props: GetModuleStateView<TModule>['props']) => TNewProps,\n    ): (ExtendView<GetModuleStateView<TModule>['props'], TNewProps>)['props'] {\n      const newProvider = provider.resolveChildProvider(() => newPropsFactory(moduleView.props), componentId);\n      newProvider.setMetadata('parentModuleView', moduleView);// TODO remove metadata\n      store.setModuleContext(componentId, provider.childScope!);\n      const result = useModule(componentId) as any;\n      store.resetModuleContext(componentId);\n      return result;\n    }\n\n    moduleView.defineProp({\n      description: 'extend',\n      name: 'extend',\n      getValue: () => extend,\n    });\n\n    moduleView.defineProp({\n      description: 'ComponentView',\n      name: 'componentView',\n      getValue: () => component,\n    });\n\n    return {\n      componentId, component, moduleView, reactStore, provider,\n    };\n  });\n\n  useOnDestroy(() => {\n    reactStore.destroyComponent(componentId);\n\n    // // // TODO find better way of detecting one-off modules\n    // const shouldDestroyModule = provider.instanceId.includes('__component__');\n    // if (shouldDestroyModule) provider.scope.\n  });\n\n  useLayoutEffect(() => {\n\n    const stateView = component.stateView;\n    if (!stateView.hasSelectedProps) return;\n\n    component.makeSnapshot();\n\n    // TODO do not run watchers for non-observable component views\n\n    const watcherId = reactStore.createWatcher(component.id, () => {\n\n      if (provider.isDestroyed) return;\n\n      const prevSnapshot = component.lastSnapshot;\n\n      // console.log('START SNAPSHOT FOR', componentId);\n      const newSnapshot = component.makeSnapshot();\n\n      // console.log('FINISH SNAPSHOT FOR', componentId, newSnapshot);\n\n\n      const shouldUpdate = component.shouldComponentUpdate(newSnapshot, prevSnapshot);\n      if (shouldUpdate) {\n        component.setInvalidated(true);\n        component.willComponentUpdate && component.willComponentUpdate(newSnapshot, prevSnapshot);\n      }\n    });\n    return () => {\n      reactStore.removeWatcher(watcherId);\n    };\n  }, []);\n\n  useEffect(() => {\n    component.setMounted();\n  }, []);\n\n  return component.stateView.proxy as TResult;\n}\n\nexport function useModule<T extends TModuleLocatorType, TInitState extends boolean | GetModuleConstructorArgs<T>>(locator: T, initProps: TInitState|null = null, moduleName = ''): GetUseComponentViewResult<GetModuleInstanceFor<T>> {\n  const module = useModuleInstance(locator, initProps, moduleName);\n  return useComponentView(module);\n}\n\nexport type GetUseComponentViewResult<TModuleInstance> =\n  GetModuleStateView<TModuleInstance>['props'] &\n  {\n    componentView: ComponentView,\n    extend: <TNewProps>(newPropsFactory: (props: GetModuleStateView<TModuleInstance>['props']) => TNewProps) => ExtendView<GetModuleStateView<TModuleInstance>['props'], TNewProps>['props'] & {componentView: ComponentView }\n  }\n\nexport type GetUseModuleResult<T> = GetUseComponentViewResult<GetModuleInstanceFor<T>>;\n","import { useEffect } from 'react';\nimport { useOnCreate, useOnDestroy } from './hooks';\nimport { useAppContext } from './ReactModules';\nimport { Store } from '../store/Store';\nimport {\n  Scope,\n  GetModuleInstanceFor,\n  TModuleLocatorType,\n  GetModuleConstructorArgs,\n} from '../scope';\n\nexport function useModuleInstance<T extends TModuleLocatorType, TInitProps extends boolean | GetModuleConstructorArgs<T>>(locator: T, initProps: TInitProps|null = null, name = ''): GetModuleInstanceFor<T> {\n  const { modulesScope, servicesScope } = useAppContext();\n\n  const {\n    instance,\n    moduleName,\n    scope,\n    isRoot,\n    shouldInitInNewScope,\n    isService,\n    store,\n  } = useOnCreate(() => {\n\n    let moduleName = name || (typeof locator === 'string' ? locator : (locator as any).name);\n    const store = modulesScope.resolve(Store);\n    const shouldInitInNewScope = !!initProps;\n    let scope: Scope;\n    let isRoot = false;\n    let isService = false;\n\n    if (shouldInitInNewScope) {\n      scope = modulesScope.registerScope();\n      isRoot = true;\n      const provider = scope.register(locator as any, moduleName);\n      moduleName = provider.name;\n      const constructorArgs = Array.isArray(initProps) ? initProps as unknown[] : [];\n      const instance = scope.init(moduleName, ...constructorArgs);\n    } else {\n      scope = store.currentContext[moduleName] ?? modulesScope;\n      const provider = scope.isRegistered(moduleName) ? scope.resolveProvider(moduleName) : scope.register(locator as any, moduleName);\n      isService = servicesScope.id === provider.scope.id;\n      moduleName = name || provider.name;\n      if (!isService && !provider.instance) isRoot = true;\n    }\n\n    const provider = scope.resolveProvider(moduleName);\n    const instance = scope.resolve(moduleName);\n\n    return {\n      instance,\n      store,\n      isRoot,\n      scope,\n      moduleName,\n      provider,\n      shouldInitInNewScope,\n      isService,\n    };\n  });\n\n  store.setModuleContext(moduleName, scope);\n  useEffect(() => {\n    store.resetModuleContext(moduleName);\n  });\n\n  // unregister the component from the module onDestroy\n  useOnDestroy(() => {\n    if (isService || !isRoot) return;\n\n    if (shouldInitInNewScope) {\n      scope.dispose();\n    } else {\n      scope.unregister(moduleName);\n    }\n\n  });\n\n  return instance;\n}\n","import { useEffect, useRef } from 'react';\nimport { useForceUpdate } from './hooks';\nimport { useAppContext } from './ReactModules';\nimport { Store } from '../store/Store';\nimport { ReactStoreAdapter } from './react-store-adapter';\nimport { isSimilar } from '../utils/isDeepEqual';\n//\n// export function useSelector(cb: Function) {\n//   const affectedModulesRef = useRef<Record<string, number>>({});\n//   const currentSelectorStateRef = useRef<Record<string, any>>({});\n//   const forceUpdate = useForceUpdate();\n//   const scope = useAppContext().modulesScope;\n//   const store = scope.resolve(Store);\n//   const reactStore = scope.resolve(ReactStoreAdapter);\n//\n//   useEffect(() => {\n//     affectedModulesRef.current = store.listenAffectedModules(() => {\n//       currentSelectorStateRef.current = cb();\n//     });\n//\n//     // TODO do not run watchers for non-observable component views\n//\n//     const watcherId = reactStore.createWatcher(() => {\n//       const prevRevisions = affectedModulesRef.current;\n//       const currentRevisions = store.moduleRevisions;\n//\n//       let modulesHasChanged = false;\n//       for (const moduleName in prevRevisions) {\n//         if (prevRevisions[moduleName] !== currentRevisions[moduleName]) {\n//           modulesHasChanged = true;\n//           break;\n//         }\n//\n//         if (!modulesHasChanged) {\n//           // dependent modules don't have changes in the state\n//           // do not re-render\n//           return;\n//         }\n//       }\n//\n//       const prevSelectorState = currentSelectorStateRef.current;\n//\n//       affectedModulesRef.current = store.listenAffectedModules(() => {\n//         currentSelectorStateRef.current = cb();\n//       });\n//\n//       if (!isSimilar(prevSelectorState, currentSelectorStateRef.current)) {\n//         // TODO try batched updates\n//         forceUpdate();\n//       }\n//     });\n//     return () => {\n//       reactStore.removeWatcher(watcherId);\n//     };\n//   }, []);\n// }\n","// implements a `Flatten` type helper\n// https://flut1.medium.com/deep-flatten-typescript-types-with-finite-recursion-cb79233d93ca\n\nexport type NonObjectKeysOf<T> = {\n  [K in keyof T]: T[K] extends Array<any> ? K : T[K] extends object ? never : K\n}[keyof T];\n\nexport type ValuesOf<T> = T[keyof T];\nexport type ObjectValuesOf<T extends Object> = Exclude<\n  Exclude<Extract<ValuesOf<T>, object>, never>,\n  Array<any>\n  >;\n\nexport type UnionToIntersection<U> = (U extends any\n  ? (k: U) => void\n  : never) extends ((k: infer I) => void)\n  ? I\n  : never;\n\n\nexport type Flatten<T> = Pick<T, NonObjectKeysOf<T>> &\n  UnionToIntersection<ObjectValuesOf<T>>;\n\n\n","export * from './interfaces';\nexport * from './scope';\nexport * from './provider';\nexport * from './injector';\nexport * from './subject';\nexport * from './utils';\nexport * from './flatten';\n","import { TLoadingStatus, TModuleClass } from './interfaces';\nimport { defineGetter, generateId } from './utils';\nimport { getCurrentProvider, getCurrentScope } from './scope';\nimport { Provider } from './provider';\n\n// TODO allow only StateView instances for TViewValue\n\nexport type InjectorParams<TValue, TView, TExtraView> = {\n  type: Symbol;\n  loadingStatus?: TLoadingStatus,\n  init?(): TView;\n  load?(): unknown;\n  getValue?(): TValue;\n\n  exportComponentData?(): InjectorComponentData<TView, TExtraView>;\n  onDestroy?(): unknown;\n}\n\nexport class Injector<TValue, TViewValue, TInjectedViewExtra = null> {\n  id = generateId();\n  params!: InjectorParams<TValue, TViewValue, TInjectedViewExtra>;\n  loadingStatus: TLoadingStatus = 'not-started';\n  propertyName = '';\n  isDestroyed = false;\n\n  constructor(public provider: Provider<any>) {\n    provider.registerInjector(this);\n  }\n\n  init() {\n    this.params.init && this.params.init();\n  }\n\n  load() {\n    // const load = this.params.load;\n    // const loadResult = load && load() as any;\n    // if (loadResult && loadResult.then) {\n    //   this.setLoadingStatus('loading');\n    //   loadResult.then(() => {\n    //     this.setLoadingStatus('done');\n    //   });\n    // } else {\n    //   this.loadingStatus = 'done';\n    // }\n  }\n\n  setPropertyName(propertyName: string) {\n    this.propertyName = propertyName;\n    const getValue = this.params.getValue;\n    if (getValue) {\n      defineGetter(this.provider.instance, propertyName, getValue);\n    }\n  }\n\n  setLoadingStatus(loadingStatus: TLoadingStatus) {\n    // if (this.isDestroyed) return;\n    // const prevStatus = this.loadingStatus;\n    // this.loadingStatus = loadingStatus;\n    // this.provider.handleInjectorStatusChange(this, this.loadingStatus, prevStatus);\n  }\n\n  // onDestroy() {\n  //   this.params.onDestroy && this.params.onDestroy();\n  //   this.isDestroyed = true;\n  // }\n\n  resolveValue(): TValue {\n    return this.params.getValue!();\n  }\n\n  getComponentData(): InjectorComponentData<TViewValue, TInjectedViewExtra> {\n    const componentData = this.params.exportComponentData && this.params.exportComponentData();\n    if (!componentData) {\n      return ({\n        self: null as any,\n        extra: null as any,\n      });\n    }\n    return componentData;\n  }\n\n  get type() {\n    return this.params.type;\n  }\n}\n\nexport type GetInjectedProp<\n  TParams,\n  TValue = TParams extends { getValue(): infer R } ? R : unknown,\n  TView = TParams extends { exportComponentData(): { self: infer R }} ? R : unknown,\n  TViewExtra = TParams extends { exportComponentData(): { extra: infer R }} ? R : unknown,\n  > = InjectedProp<TValue, TView, TViewExtra>;\n\nexport function createInjector<TParams extends InjectorParams<any, any, any>>\n(paramsCreator: (injector: Injector<any, any, any>) => TParams): GetInjectedProp<TParams> {\n  const provider = getCurrentProvider();\n  if (!provider) {\n    throw new Error('Injections a not allowed for objects outside the Scope. Create this object via Scope.resolve() or Scope.init() or Scope.create()');\n  }\n  const injector = new Injector<unknown, unknown, unknown>(provider);\n  injector.params = paramsCreator(injector);\n  injector.init();\n  const value = injector.resolveValue();\n  const returnValue = value instanceof Object ? value : {};\n  const injectorProxy = new Proxy(returnValue, {\n    get(target, p) {\n      return p === '__injector' ? injector : (target as any)[p];\n    },\n  });\n  return injectorProxy as any as GetInjectedProp<TParams>;\n}\n\n// DEFINE BUILT-IN INJECTORS\n\nexport const ModuleInjectorType = Symbol('moduleInjector');\n\n// export function inject<T extends TModuleClass>(ModuleClass: T) {\n//   return createInjector(injector => ({\n//     type: ModuleInjectorType,\n//     getValue: () => injector.provider.scope.resolve(ModuleClass),\n//   }));\n// }\n\nexport function inject<T extends TModuleClass>(ModuleClass: T) {\n  const provider = injectProvider();\n  const module = provider.scope.resolve(ModuleClass);\n  return module;\n}\n\nexport function injectScope() {\n  return getCurrentScope()!;\n}\n\nexport function injectProvider(): Provider<any> {\n  return getCurrentProvider()!;\n}\n\n// export const ScopeInjectorType = Symbol('providerInjector');\n//\n// export function injectScope() {\n//   return createInjector(injector => ({\n//     type: ScopeInjectorType,\n//     getValue: () => injector.provider.scope,\n//   }));\n// }\n//\n//\n// export const ProviderInjectorType = Symbol('providerInjector');\n// export function injectProvider() {\n//   return createInjector(injector => ({\n//     type: ProviderInjectorType,\n//     getValue: () => injector.provider,\n//   }));\n// }\n\n\nexport type InjectedProp<TValue, TView, TExtraView> = TValue & { __injector: Injector<TValue, TView, TExtraView> }\n\nexport type InjectorComponentData<TView, TExtraView> = {\n  self: TView,\n  extra: TExtraView,\n}\n","import { Dict } from './utils';\nimport { Provider } from './provider';\n\nexport type PickFunctionPropertyNames<T> = {\n  [K in keyof T]: T[K] extends (...args: any) => any ? K : never;\n}[keyof T];\nexport type PickFunctionProperties<T> = Pick<T, PickFunctionPropertyNames<T>>;\n\nexport type TModuleConstructor = new (...args: any[]) => any;\nexport type TModuleConstructorMap = { [key: string]: TModuleConstructor }\n\nexport type TModuleClass = new (...args: any) => any;\n\nexport type TModuleCreator = TModuleClass | Dict<any> | ((...args: any) => any)\nexport type TModuleLocatorType = TModuleCreator | string;\n\nexport type GetModuleInstanceFor<TModuleLocator> =\n  TModuleLocator extends new (...args: any[]) => infer TInstanceFromConstructor ?\n    TInstanceFromConstructor :\n      TModuleLocator extends (...args: any[]) => infer TInstanceFromFunction ?\n        TInstanceFromFunction:\n          TModuleLocator extends string ?\n            unknown:\n              TModuleLocator\n\nexport type GetModuleConstructorArgs<TModuleLocator> =\n  TModuleLocator extends new (...args: infer ConstructorArgs) => any ?\n    ConstructorArgs :\n    TModuleLocator extends (...args: infer ConstructorArgs) => any ?\n      ConstructorArgs:\n        unknown[]\n\nexport type TProviderFor<TModuleLocator extends TModuleLocatorType> = Provider<GetModuleInstanceFor<TModuleLocator>>\nexport type TLoadingStatus = 'not-started' | 'loading' | 'done' | 'error';\n\nexport interface InjectableModule {\n  init?(): unknown;\n  load?(): Promise<unknown> | unknown;\n  onLoad?(): unknown;\n  exportInjectorValue?(): any\n  exportComponentData?(): { self: any; extra: any },\n}\n","import { createNanoEvents } from 'nanoevents';\nimport { isPlainObject } from 'is-plain-object';\nimport { Scope } from './scope';\nimport { defineGetter, Dict, generateId, isClass } from './utils';\nimport { Injector } from './injector';\nimport {\n  InjectableModule,\n  TLoadingStatus,\n  TModuleCreator,TProviderFor\n} from './interfaces';\n\nexport class Provider<TInstance, TInitParams extends [] = []> {\n  id: string;\n  instance: TInstance | null = null;\n  metadata: Dict<any> = {};\n  injectors: Dict<Injector<unknown, unknown, unknown>> = {}; // dict of injectors by id\n  factory: (args: TInitParams) => TInstance;\n\n  isInited = false; // true if instance is added to the Scope\n  isDestroyed = false;\n  // private resolveInit!: Function;\n  // waitForInit = new Promise(resolve => { this.resolveInit = resolve });\n\n  injectionCompleted = false;\n  loadMethodCompleted = false;\n  isAsync = false;\n\n  isLoaded = false;\n  private resolveLoad!: Function;\n  waitForLoad = new Promise(resolve => { this.resolveLoad = resolve; });\n\n  initParams?: TInitParams; // TODO\n\n  childScope: Scope | null = null;\n  childModules: Dict<InjectableModule> = {};\n\n  constructor(\n    public scope: Scope,\n    public creator: (new (...args: TInitParams) => TInstance) | ((...args: TInitParams) => TInstance) | TInstance,\n    public name = '',\n    public options: Partial<ProviderOptions> = {},\n  ) {\n    if (!this.name) this.name = `AnonymousProvider__${generateId()}`;\n    this.id = `${this.name}__${this.scope.id}__${generateId()}`;\n\n    // setup default provider options\n    this.options = { shouldCallHooks: true, ...this.options };\n\n    if (typeof creator === 'function') {\n\n\n      if (isClass(creator)) {\n        this.factory = (args: TInitParams) => new (creator as any)(...args);\n        return;\n      }\n\n      // creator is a function\n      this.factory = args => (creator as (...args: TInitParams) => TInstance)(...args);\n      return;\n    }\n\n    // creator is an object\n    if (isPlainObject(creator)) {\n      this.factory = () => creator;\n      return;\n    }\n\n    throw new Error(`Can not construct the object ${creator}`);\n  }\n\n  createInstance(args: TInitParams): TInstance {\n    const instance = this.factory(args) as any;\n    this.instance = instance;\n    this.initParams = args;\n    createInstanceMetadata(instance, this);\n    return instance;\n  }\n\n  mountModule() {\n    Object.keys(this.childModules).forEach(childName => {\n      const childModuleProvider = getInstanceMetadata(this.childModules[childName]).provider;\n      childModuleProvider.mountModule();\n    });\n    if (this.options.shouldCallHooks) {\n      const instance = this.instance as InjectableModule;\n      const provider = this as Provider<any, any>;\n      this.events.emit('onBeforeInit', provider);\n      instance.init && instance.init();\n      this.events.emit('onAfterInit', provider);\n    }\n    this.isInited = true;\n  }\n\n  //\n  // setInited() {\n  //   this.isInited = true;\n  //   // this.events.emit('onModuleInit');\n  //   // this.checkModuleIsLoaded();\n  // }\n\n  registerInjector(injector: Injector<unknown, unknown, unknown>) {\n    this.injectors[injector.id] = injector;\n  }\n\n  // private resolveInjectedProps() {\n  //   const provider = this;\n  //   const instance = provider.instance;\n  //   const descriptors = Object.getOwnPropertyDescriptors(instance);\n  //\n  //   // set propetyNames for injectors\n  //   Object.keys(descriptors).forEach(propName => {\n  //     const descriptor = descriptors[propName];\n  //     if (descriptor.get) return; // don't execute getters\n  //     const propValue = descriptor.value;\n  //     if (!(propValue?.__injector)) return;\n  //     const injector = propValue.__injector as Injector<unknown, unknown, unknown>;\n  //     injector.setPropertyName(propName);\n  //   });\n  // }\n  //\n  // private loadInjectors() {\n  //   let hasAsyncInjectors = false;\n  //   // call load() for injectors\n  //   Object.values(this.injectors).forEach(injector => {\n  //     injector.load();\n  //     if (injector.loadingStatus !== 'done') hasAsyncInjectors = true;\n  //   });\n  //\n  //   if (hasAsyncInjectors) {\n  //     this.isAsync = true;\n  //   } else {\n  //     this.handleInjectionsCompleted();\n  //   }\n  // }\n\n  getMetadata(pluginName: string) {\n    return this.metadata[pluginName];\n  }\n\n  setMetadata(pluginName: string, data: any) {\n    this.metadata[pluginName] = data;\n    return data;\n  }\n\n  // destroy provider\n  destroy() {\n    this.destroyInstance();\n    // unsubscribe events\n    this.events.events = {};\n  }\n\n  destroyInstance() {\n    const instance = this.instance as any;\n    if (!instance) return;\n\n    // destroy instance\n    instance.destroy && instance.destroy();\n    this.initParams = [] as any;\n\n    // destroy child modules\n    this.childScope?.dispose();\n    this.childModules = {};\n    this.isDestroyed = true;\n\n    this.instance = null;\n    this.isInited = false;\n  }\n\n  // handleInjectorStatusChange(\n  //   injector: Injector<unknown, unknown, unknown>,\n  //   currentStatus: TLoadingStatus,\n  //   prevStatus: TLoadingStatus,\n  // ) {\n  //   this.events.emit('onInjectorStatusChange', injector, currentStatus, prevStatus);\n  //   this.checkInjectionIsCompleted();\n  // }\n\n  // protected checkInjectionIsCompleted() {\n  //   if (!this.injectionCompleted) {\n  //     const injectors = Object.values(this.injectors);\n  //     for (const injector of injectors) {\n  //       if (injector.loadingStatus !== 'done') return;\n  //     }\n  //   }\n  //   this.handleInjectionsCompleted();\n  // }\n\n  // protected handleInjectionsCompleted() {\n  //   this.injectionCompleted = true;\n  //\n  //   if (this.options.shouldCallHooks) {\n  //     const instance = this.instance as any;\n  //     const loadResult = instance.load && instance.load();\n  //     if (loadResult?.then) {\n  //       this.isAsync = true;\n  //       loadResult.then(() => {\n  //         this.loadMethodCompleted = true;\n  //         this.checkModuleIsLoaded();\n  //       });\n  //       return;\n  //     }\n  //   }\n  //\n  //   this.loadMethodCompleted = true;\n  //   this.checkModuleIsLoaded();\n  // }\n\n  // protected checkModuleIsLoaded() {\n  //   if (!this.isInited) return;\n  //   if (!this.injectionCompleted) return;\n  //   if (!this.loadMethodCompleted) return;\n  //\n  //   if (this.options.shouldCallHooks) {\n  //     const instance = this.instance as any;\n  //     instance.onLoad && instance.onLoad();\n  //   }\n  //\n  //   this.isLoaded = true;\n  //   this.resolveLoad();\n  //   this.events.emit('onModuleLoaded');\n  // }\n\n  get instanceId() {\n    return getInstanceMetadata(this.instance).id;\n  }\n\n  resolveChildScope() {\n    if (!this.childScope) this.childScope = this.scope.createChildScope();\n    return this.childScope;\n  }\n\n  resolveChildProvider<T extends TModuleCreator>(ModuleCreator: T, name: string): TProviderFor<T> {\n    const childScope = this.resolveChildScope();\n    if (!childScope.isRegistered(name)) {\n      childScope.register(ModuleCreator, name);\n    }\n    return childScope.resolveProvider(name) as TProviderFor<T>;\n  }\n\n  injectChildModule<T extends TModuleCreator>(ModuleCreator: T, ...args: any) {\n    const childScope = this.resolveChildScope();\n    const name = `${this.id}__child_${ModuleCreator.name || ''}_${generateId()}`;\n    childScope.register(ModuleCreator, name, { parentProvider: this as Provider<any, any>});\n    const childModule = childScope.init(name, ...args) as InjectableModule;\n    this.childModules[name] = childModule;\n    const returnValue = childModule.exportInjectorValue ? childModule.exportInjectorValue() : childModule;\n    return returnValue;\n  }\n\n  events = createNanoEvents<ProviderEvents>();\n}\n\nexport function createInstanceMetadata(instance: any, provider: Provider<any, any>) {\n  const id = `${provider.id}__${generateId()}`;\n  const descriptor = { enumerable: false, configurable: false };\n\n  defineGetter(instance, '__instanceId', () => id, descriptor);\n  defineGetter(instance, '__provider', () => provider, descriptor);\n}\n\nexport function getInstanceMetadata(instance: any) {\n  const provider: Provider<any> = instance.__provider;\n\n  if (!provider) {\n    throw new Error(`Provider non found for a given instance ${instance}`);\n  }\n\n  return {\n    provider,\n    id: instance.__instanceId as string,\n  };\n}\n\nexport interface ProviderEvents {\n  onInjectorStatusChange: (\n    injector: Injector<unknown, unknown, unknown>,\n    current: TLoadingStatus,\n    prev: TLoadingStatus\n  ) => unknown;\n  onBeforeInit: (provider: Provider<any>) => unknown,\n  onAfterInit: (provider: Provider<any>) => unknown,\n  // onModuleLoaded: () => unknown,\n}\n\nexport type ProviderOptions = {\n\n  /**\n   * Should call lifecycle hooks: init, load, onLoad\n   */\n  shouldCallHooks: boolean;\n\n  /**\n   * Keeps parentProvider if the module has been injected as a child module\n   */\n  parentProvider: Provider<any>;\n}\n","import { createNanoEvents } from 'nanoevents';\nimport {\n  TModuleClass,\n  TModuleConstructorMap, TModuleCreator, GetModuleInstanceFor,\n  TModuleLocatorType,\n  TProviderFor,\n} from './interfaces';\nimport { generateId } from './utils';\nimport { Provider, ProviderOptions } from './provider';\n\nlet currentScope: Scope | null = null;\nlet currentProvider: Provider<any> | null = null;\nlet unmountedModulesCount = 0;\n\ninterface ScopeSettings {\n  parentScope: Scope | null,\n  autoregister: boolean,\n  providerOptions?: Partial<ProviderOptions>\n}\n\nconst defaultScopeSettings = {\n  parentScope: null,\n  autoregister: false,\n};\n\n/**\n * A Dependency injection container\n */\nexport class Scope {\n  id!: string;\n\n  childScopes: Record<string, Scope> = {};\n\n  providers: Record<string, Provider<any>> = {};\n\n  settings: ScopeSettings;\n\n  constructor(\n    dependencies: TModuleConstructorMap = {},\n    settings: Partial<ScopeSettings> = {},\n  ) {\n    const uid = generateId();\n    const parentScope = settings?.parentScope;\n\n    this.id = parentScope ? `${parentScope.id}__${uid}` : `root_${uid}`;\n\n    this.settings = parentScope\n      ? { ...parentScope.settings, ...settings }\n      : { ...defaultScopeSettings, ...settings };\n\n    dependencies && this.registerMany(dependencies);\n  }\n\n  registerMany(dependencies: TModuleConstructorMap) {\n    Object.keys(dependencies).forEach(depName => this.register(dependencies[depName], depName));\n  }\n\n  register<T extends TModuleCreator>(ModuleCreator: T, name?: string, options?: Partial<ProviderOptions>): TProviderFor<T> {\n    const moduleName = name || ModuleCreator.name || `AnonymousModule_${generateId()}`;\n    if (this.providers[moduleName]) {\n      throw new Error(`${moduleName} already registered in the given Scope`);\n    }\n\n    const provider = new Provider(this, ModuleCreator, moduleName, options);\n    this.providers[moduleName] = provider;\n\n    this.events.emit('onModuleRegister', provider);\n    return provider;\n  }\n\n  getProvider<T extends TModuleLocatorType>(moduleLocator: T): TProviderFor<T> | null {\n    const moduleName = typeof moduleLocator === 'string' ? moduleLocator : moduleLocator.name;\n    if (!moduleName) return null;\n\n    const provider = this.providers[moduleName];\n    if (provider) return provider;\n    if (!this.parent) return null;\n\n    return this.parent.getProvider(moduleName);\n  }\n\n  resolveProvider<T extends TModuleLocatorType>(moduleLocator: T): TProviderFor<T> {\n    const provider = this.getProvider(moduleLocator);\n    if (provider) return provider;\n\n    const shouldRegister = this.settings.autoregister && typeof moduleLocator !== 'string';\n    if (shouldRegister) return this.register(moduleLocator);\n\n    throw new Error(`Provider not found ${moduleLocator}`);\n  }\n\n  getInstance<T extends TModuleLocatorType>(locator: T) {\n    const provider = this.getProvider(locator);\n    return provider ? provider.instance : null;\n  }\n\n  resolve<T extends TModuleLocatorType>(locator: T): GetModuleInstanceFor<T> {\n    const provider = this.resolveProvider(locator);\n    if (provider.instance) return provider.instance;\n    return this.init(locator, ...[] as any);\n  }\n\n  unregister<T extends TModuleLocatorType>(locator: T) {\n    const provider = this.getProvider(locator);\n    if (!provider) return;\n    provider.destroy();\n    delete this.providers[provider.name];\n  }\n\n  // helper methods\n\n  isRegistered(moduleLocator: TModuleLocatorType): boolean {\n    return !!this.getProvider(moduleLocator);\n  }\n\n  hasInstance(moduleLocator: TModuleLocatorType): boolean {\n    const provider = this.resolveProvider(moduleLocator);\n    return !!provider?.instance;\n  }\n\n  /**\n   * Instantiate a registered module\n   * TODO type for args\n   */\n  init<T extends TModuleLocatorType>(locator: T, ...args: any[]): GetModuleInstanceFor<T> {\n    const provider = this.resolveProvider(locator);\n\n    if (provider.instance) {\n      throw new Error(`The module ${provider.name} is already inited in the given scope`);\n    }\n\n    unmountedModulesCount++;\n    const instance = this.create(locator, ...args);\n    unmountedModulesCount--;\n    if (!unmountedModulesCount) provider.mountModule();\n\n    return instance;\n  }\n\n  // /**\n  //  * Register and instantiate a module\n  //  * TODO add type for args\n  //  */\n  // start<T extends TModuleCreator>(creator: T, ...args: any[]): TModuleInstanceFor<T> {\n  //   this.register(creator);\n  //   const instance = this.init(creator, ...args as any);\n  //   return instance;\n  // }\n\n  /**\n   * create the instance and resolve injections\n   * every time returns a new instance\n   */\n  // TODO add type for args\n  create<TLocator extends TModuleLocatorType>(locator: TLocator, ...args: any): GetModuleInstanceFor<TLocator> {\n    const prevScope = currentScope;\n    currentScope = this;\n\n    let provider: TProviderFor<TLocator>;\n\n    const isRegistered = this.isRegistered(locator);\n    if (isRegistered) {\n      provider = this.resolveProvider(locator);\n    } else {\n      provider = new Provider(this, locator);\n    }\n\n    const prevProvider = currentProvider;\n    currentProvider = provider;\n\n    const instance = provider.createInstance(args);\n    currentScope = prevScope;\n    currentProvider = prevProvider;\n\n    // if (isRegistered) {\n    //   provider.events.on('onModuleLoaded', () => {\n    //     this.events.emit('onModuleLoad', provider);\n    //   });\n    //   this.events.emit('onModuleInit', provider);\n    //   provider.setInited();\n    // }\n\n    return instance;\n  }\n\n  createChildScope(\n    dependencies?: TModuleConstructorMap,\n    settings?: Omit<Partial<ScopeSettings>, 'parentScope'>,\n  ) {\n    return new Scope(dependencies, { ...settings, parentScope: this });\n  }\n\n  // TODO refactor\n  registerScope(dependencies?: TModuleConstructorMap, settings?: Partial<Scope['settings']>) {\n    const scope = this.createChildScope({}, settings);\n    this.childScopes[scope.id] = scope;\n    scope.events = this.events;\n    dependencies && scope.registerMany(dependencies);\n    return scope;\n  }\n\n  unregisterScope(scopeId: string) {\n    const scope = this.childScopes[scopeId];\n    if (!scope) throw new Error(`Can not unregister Scope ${scopeId} - Scope not found`);\n    scope.dispose();\n    delete this.childScopes[scopeId];\n  }\n\n  getRootScope(): Scope {\n    if (!this.parent) return this;\n    return this.parent.getRootScope();\n  }\n\n  dispose() {\n    // destroy child scopes\n    Object.keys(this.childScopes).forEach(scopeId => {\n      this.unregisterScope(scopeId);\n    });\n\n    // destroy providers\n    Object.keys(this.providers).forEach(providerName => {\n      this.providers[providerName].destroy();\n      delete this.providers[providerName];\n    });\n\n    // unsubscribe events\n    if (!this.parent) this.events.events = {};\n  }\n\n  getScheme(): any {\n    return {\n      id: this.id,\n      registry: this.providers,\n      parentScope: this.parent ? this.parent.getScheme() : null,\n    };\n  }\n\n  get isRoot() {\n    return !!this.parent;\n  }\n\n  get parent() {\n    return this.settings.parentScope;\n  }\n\n  events = createNanoEvents<ScopeEvents>();\n}\n\nexport interface ScopeEvents {\n  onModuleRegister: (provider: Provider<any>) => void\n  onModuleInit: (provider: Provider<any>) => void,\n  onModuleLoad: (provider: Provider<any>) => void,\n}\n\nexport function getCurrentScope() {\n  return currentScope;\n}\n\nexport function getCurrentProvider() {\n  return currentProvider;\n}\n","import { createNanoEvents } from 'nanoevents';\n\nexport class Subject<TData> {\n  emitter = createNanoEvents();\n\n  subscribe(cb: (args: TData) => void) {\n    const unsubscribe = this.emitter.on('next', cb);\n    return new Subscription(unsubscribe);\n  }\n\n  next(data: TData) {\n    this.emitter.emit('next', data);\n  }\n}\n\nexport class Subscription {\n  constructor(public unsubscribe: (...args: any) => void) {}\n}\n","let idCounter = 1;\n\nexport function generateId() {\n  return (idCounter++).toString();\n}\n\nexport function assertIsDefined<T>(val: T): asserts val is NonNullable<T> {\n  if (val === undefined || val === null) {\n    throw new Error(`Expected 'val' to be defined, but received ${val}`);\n  }\n}\n\nexport function getDefined<T>(val: T): NonNullable<T> {\n  assertIsDefined(val);\n  return val;\n}\n\nexport function hasGetter(instance: any, getterName: string) {\n  const stateDescriptor = Object.getOwnPropertyDescriptor(instance, getterName);\n  return !!stateDescriptor?.get;\n}\n\nexport type Dict<T> = Record<string, T>;\n\n\nexport function forEach<TDict, TKey extends keyof TDict>(dict: TDict, cb: (val: TDict[TKey], key: TKey) => unknown) {\n  Object.keys(dict).forEach(propName => {\n    (cb as any)((dict as any)[propName], propName);\n  });\n}\n\nexport function defineGetter(target: object, methodName: string, getter: () => any, descriptor?: Partial<PropertyDescriptor>) {\n  Object.defineProperty(target, methodName, {\n    configurable: descriptor?.configurable ?? true,\n    enumerable: descriptor?.enumerable ?? true,\n    get: getter,\n  });\n}\n\nexport function defineSetter(target: object, methodName: string, setter: (val: any) => boolean, descriptor?: Partial<PropertyDescriptor>) {\n  Object.defineProperty(target, methodName, {\n    configurable: descriptor?.configurable ?? true,\n    enumerable: descriptor?.enumerable ?? true,\n    set: setter,\n  });\n}\n\nexport function capitalize(srt: string): string {\n  return srt.charAt(0).toUpperCase() + srt.slice(1);\n}\n\nexport function isClass(object: any) {\n  // TODO find a better way to distinguish Class and Function\n  return typeof object === 'function' && object.name && object.name.charAt(0) === object.name.charAt(0).toUpperCase();\n}\n","\nimport {\n  defineGetter, Dict, forEach, Scope, GetModuleInstanceFor,\n} from '../scope';\nimport { getInstanceMetadata } from '../scope/provider';\nimport { pickProps } from './plugins/pickProps';\nimport {\n  GetAllInjectedProps,\n  GetInjectedProps,\n  pickInjectors,\n} from './plugins';\nimport { GetMerge } from '../utils';\n\nexport class StateView<TProps = {}> {\n\n  props: TProps = {} as TProps;\n  proxy: TProps;\n  descriptors = {} as TGetDescriptorsForProps<TProps>;\n  selectedDescriptors = {} as TGetDescriptorsForProps<TProps>;\n  hasReactiveProps = false;\n  hasSelectedProps = false;\n  hasWildcardProps = false;\n  wildcardPropCreator = null as null | ((propName: string) => unknown);\n\n  constructor(public scope?: Scope) {\n    this.proxy = new Proxy(\n      {\n        __proxyName: 'StateViewProxy', // set proxy name for debugging\n        __target: this,\n      },\n      {\n        get: (target: any, propName: string) => {\n          if (propName === 'hasOwnProperty') return target.hasOwnProperty;\n          if (propName in target) return (target as any)[propName];\n          const value = this.selectValue(propName as keyof TProps);\n          return value;\n        },\n      },\n    ) as any;\n  }\n\n  defineProp<TValue>(descriptorParams: TConstructDescriptorProps<TValue>) {\n    const descriptor: TModulePropDescriptor<TValue> = {\n      configurable: true,\n      enumerable: true,\n      reactive: false,\n      getRev: descriptorParams.getValue,\n      stateView: null,\n      dynamic: false,\n      ...descriptorParams,\n    };\n    (this.descriptors as any)[descriptor.name] = descriptor;\n    if (descriptor.reactive) this.hasReactiveProps = true;\n    defineGetter(this.props as any, descriptor.name, () => descriptor.getValue());\n  }\n\n  defineWildcardProp(cb: StateView['wildcardPropCreator']) {\n    this.hasWildcardProps = true;\n    this.wildcardPropCreator = cb;\n  }\n\n  private selectValue(propName: keyof TProps) {\n    let descriptor = this.descriptors[propName];\n\n    if (!descriptor) {\n      if (!this.wildcardPropCreator) {\n        throw new Error(`Property ${propName} is not defined`);\n      }\n      this.wildcardPropCreator(propName as string);\n      descriptor = this.descriptors[propName];\n    }\n\n    if (descriptor.reactive) {\n      this.selectedDescriptors[propName] = descriptor;\n      if (!this.hasSelectedProps) this.hasSelectedProps = true;\n      if (descriptor.stateView) return descriptor.stateView.proxy;\n    }\n    return descriptor.getValue();\n  }\n\n  getSnapshot() {\n    const selectedDescriptors = this.selectedDescriptors;\n    const props = {} as TProps;\n\n    forEach(selectedDescriptors, (descr, propName) => {\n      let value: unknown;\n      if (descr.stateView) {\n        const getRev = (descr.stateView.descriptors as any).getRev;\n        if (getRev) {\n          value = getRev.getValue();\n        } else {\n          value = descr.stateView.getSnapshot();\n        }\n      } else {\n        value = descr.getRev();\n      }\n\n      (props as any)[propName] = value;\n    });\n    return props;\n  }\n\n  // use for debugging\n  get selectedProps() {\n    const selectedDescriptors = this.selectedDescriptors;\n    const result = {} as TProps;\n    forEach(selectedDescriptors, (descr, propName) => {\n      if (!descr.reactive) return;\n      // @ts-ignore\n      result[propName] = descr.getRev();\n    });\n    return result;\n  }\n\n  getAnalytics() {\n    // TODO ?\n  }\n\n  // DEFINE MULTIPLE WAYS FOR EXTENDING THE ModuleView\n  // TODO: remove overloads that we will never use\n\n  /**\n   * // Extend with a factory returning a new ModuleView\n   *\n   * module.extend((props, view) => {\n   *   const module = scope.resolve(MyModule)\n   *   return new ModuleView(module)\n   * })\n   */\n  select<TNewView extends StateView<any>>(newViewFactory: (props: TProps, view: StateView<TProps>) => TNewView): TNewView {\n    return newViewFactory(this.props, this);\n  }\n\n  clone() {\n    const clone = new StateView<TProps>(this.scope);\n    forEach(this.descriptors, descriptor => clone.defineProp(descriptor));\n    return clone;\n  }\n\n  mergeView<\n    TExtension extends StateView<any>,\n    TResult = ExtendView<TProps, TExtension>\n    >(extension: TExtension): TResult {\n    // merge one view into another\n    const mergeResult = this.clone();\n    forEach(extension.descriptors, descriptor => mergeResult.defineProp(descriptor as any));\n    return mergeResult as any as TResult;\n  }\n\n}\n\nexport function createStateViewForModule<T>(module: T) {\n  const scope = getInstanceMetadata(module).provider.scope;\n  const stateView = new StateView(scope);\n  return stateView\n    .select(pickProps(module)) // expose the module props\n    .select(pickInjectors(module)) as GetModuleStateView<T>; // expose injectors\n}\n\nexport type GetModuleSelfView<\n  TModuleConfig, TModule = GetModuleInstanceFor<TModuleConfig>\n  > = TModule extends { exportComponentData: () => ({ self: StateView<infer TView> })} ? TView : {}\n\nexport type GetModuleExtraView<\n  TModuleConfig, TModule = GetModuleInstanceFor<TModuleConfig>\n  > = TModule extends { exportComponentData: () => ({ extra: StateView<infer TView> })} ? TView : {}\n\nexport type GetComponentDataForModule<\n  TModuleConfig,\n  TModule = GetModuleInstanceFor<TModuleConfig>,\n  TSelfExport = GetModuleSelfView<TModuleConfig>,\n  TExtraExport = GetModuleExtraView<TModuleConfig>,\n  TInjectedProps = TModule extends { exportComponentData: () => any } ? {} : GetAllInjectedProps<TModule> & Omit<TModule, keyof GetInjectedProps<TModule>>\n  > = GetMerge<TExtraExport, TSelfExport & TInjectedProps>;\n\n// export type GetModuleView<TModuleConfig, TModule = TModuleInstanceFor<TModuleConfig>> =\n//   TModule extends { getView: () => StateView<infer TView>} ? TView : GetAllInjectedProps<TModule> & Omit<TModule, keyof GetInjectedProps<TModule>>\n\nexport type GetModuleStateView<TModuleConfig> = StateView<GetComponentDataForModule<TModuleConfig>>;\n\nexport type ExtendView<TBaseProps, TExtendedModule> = StateView<TBaseProps & GetComponentDataForModule<TExtendedModule>>;\n\nexport type TModulePropDescriptor<TValue> = {\n  name: string,\n  reactive: boolean,\n  description: string,\n  stateView: StateView | null,\n  getValue(): TValue,\n  getRev(): unknown, // used for fast comparison of complex object, use getValue() as default value\n  enumerable: boolean,\n  configurable: boolean,\n  dynamic: boolean,\n  // module: unknown, // one module view can be assembled from multiple modules\n}\n\nexport type TConstructDescriptorProps<TValue, TDescriptor = TModulePropDescriptor<TValue>> = Partial<TDescriptor> & Required<Pick<TModulePropDescriptor<TValue>, 'description' | 'name' | 'getValue'>>\nexport type TGetDescriptorsForProps<TProps extends Dict<any>> = {[P in keyof TProps]: TModulePropDescriptor<TProps[P]>}\nexport type GetProps<TModuleView> = TModuleView extends StateView<infer TProps> ? TProps : never;\n","import produce from 'immer';\nimport { createNanoEvents } from 'nanoevents';\nimport {\n  Scope,\n  generateId,\n  Dict,\n  defineGetter,\n  capitalize,\n  defineSetter,\n  PickFunctionProperties,\n} from '../scope';\nimport { traverse } from '../utils/traverse';\nimport { parseStateConfig } from './parse-config';\nimport { StateView } from './StateView';\n\n/**\n * All React related code should be handled in ReactAdapter\n * Framework agnostic store\n */\nexport class Store {\n\n  // keeps the state for all modules here as a map of immutable objects\n  rootState = { } as Dict<any>;\n\n  // keeps additional metadata\n  modulesMetadata = { } as Dict<StatefulModuleMetadata>;\n\n  pendingMutations = 0;\n  moduleRevisions: Dict<number> = {};\n\n  createState<TConfigCreator>(moduleName: string, configCreator: TConfigCreator): GetStateControllerFor<TConfigCreator> {\n\n    if (this.modulesMetadata[moduleName] && this.modulesMetadata[moduleName]) {\n      throw new Error(`State with a name \"${moduleName}\" is already created`);\n    }\n\n    const config = parseStateConfig(configCreator);\n\n    console.log('REGISTER STORE', moduleName);\n    const controller = new StateController(this, moduleName, config);\n\n    return controller as GetStateControllerFor<TConfigCreator>;\n  }\n\n  dispatchMutation(mutation: Mutation) {\n    const moduleName = mutation.moduleName;\n    const metadata = this.modulesMetadata[moduleName];\n    if (!metadata) return; // state is destroyed\n\n    const stateController = this.modulesMetadata[moduleName].controller;\n\n    if (this.pendingMutations) {\n      throw new Error('Can not run mutation while previous mutation is not completed');\n    }\n\n    stateController.mutate(mutation);\n  }\n\n  toJSON() {\n    // TODO use for debugging\n    JSON.stringify(this.rootState);\n  }\n\n  destroyModule(moduleName: string) {\n    delete this.rootState[moduleName];\n    delete this.modulesMetadata[moduleName];\n    console.log('UNREGISTER STATE', moduleName);\n  }\n\n  recordingAccessors = 0;\n\n  affectedModules: Record<string, number> = {};\n\n  listenAffectedModules(cb: Function) {\n    this.recordingAccessors++;\n    cb();\n    const result = this.affectedModules;\n    this.recordingAccessors--;\n    if (!this.recordingAccessors) {\n      this.affectedModules = {};\n    }\n    return result;\n  }\n\n  currentContext: Record<string, Scope> = {};\n\n  setModuleContext(moduleName: string, scope: Scope) {\n    this.currentContext[moduleName] = scope;\n  }\n\n  resetModuleContext(moduleName: string) {\n    delete this.currentContext[moduleName];\n  }\n\n  getMetadata(moduleName: string) {\n    return this.modulesMetadata[moduleName];\n  }\n\n  getController(moduleName: string) {\n    return this.getMetadata(moduleName)?.controller;\n  }\n\n  events = createNanoEvents<StoreEvents>();\n}\n\nexport interface StoreEvents {\n  onMutation: (mutation: Mutation | Function) => void\n  onReadyToRender: () => void\n}\n\nexport class StateController<TConfig = any> {\n\n  draftState: any = null;\n\n  constructor(\n    public store: Store,\n    public moduleName: string,\n    config: TStateConfig,\n  ) {\n    const defaultState = config.state;\n\n    store.rootState[moduleName] = { ...defaultState };\n\n    // create metadata\n    const controller = this;\n    const getters = {};\n    const metadata: StatefulModuleMetadata = {\n      config,\n      controller,\n      getters,\n      isInitialized: false,\n      rev: 0,\n    };\n    store.modulesMetadata[moduleName] = metadata;\n\n    // generate getters\n    Object.keys(defaultState).forEach(propName => {\n      const getter = () => (controller.state as any)[propName];\n      defineGetter(controller, propName, getter);\n      defineGetter(getters, propName, getter);\n      defineSetter(controller, propName, val => {\n        const changeIsAllowed = !metadata.isInitialized || controller.draftState;\n        if (!changeIsAllowed) {\n          console.error(`Failed to set \"${propName}\" with value`, val);\n          throw new Error('Changing state outside of mutation');\n        }\n        (controller.state as any)[propName] = val;\n        return true;\n      });\n    });\n\n    Object.keys(config.getters).forEach(propName => {\n      const getter = () => config.getters[propName].get.apply(controller);\n      defineGetter(controller, propName, getter);\n      defineGetter(getters, propName, getter);\n    });\n\n    Object.keys(config.getterMethods).forEach(propName => {\n      defineGetter(controller, propName, () => (...args: any) => config.getterMethods[propName].apply(controller, args));\n    });\n\n    // create auto-generated mutations\n    Object.keys(defaultState).forEach(propertyName => {\n      const mutationName = `set${capitalize(propertyName)}`;\n      if (config.mutations[mutationName]) return;\n      const mutationMethod = (propVal: unknown) => (controller as any)[propertyName] = propVal;\n      controller.registerMutation(mutationName, mutationMethod);\n    });\n\n    // create default mutations\n    this.registerDefaultMutations();\n\n    // create other mutations\n    Object.keys(config.mutations).forEach(propName => {\n      this.registerMutation(propName, config.mutations[propName]);\n    });\n\n  }\n\n  finishInitialization() {\n    // use immer to lock an immutable state\n    this.getMetadata().isInitialized = true;\n    this.store.rootState[this.moduleName] = produce(this.store.rootState[this.moduleName], () => {});\n  }\n\n  registerMutation(mutationName: string, mutationMethod: Function, mutationThisContext?: any) {\n    const controller = this;\n    const { store, moduleName } = controller;\n    const mutationContext = mutationThisContext || controller;\n\n    controller.getMetadata().config.mutations[mutationName] = mutationMethod;\n\n    // override the original Module method to dispatch mutations\n    (controller as any)[mutationName] = function (...args: any[]) {\n      // if this method was called from another mutation\n      // we don't need to dispatch a new mutation again\n      // just call the original method\n      if (controller.draftState) {\n        return mutationMethod.apply(mutationContext, args);\n      }\n\n      const mutation = {\n        id: Number(generateId()),\n        payload: args,\n        moduleName,\n        mutationName,\n        mutationContext,\n      };\n      store.dispatchMutation(mutation);\n    };\n  }\n\n  mutate(mutation: ((draft: this) => unknown) | Mutation) {\n    const moduleName = this.moduleName;\n    const state = this.store.rootState[moduleName];\n    const mutationIsFunction = typeof mutation === 'function';\n    const metadata = this.getMetadata();\n\n    if (!metadata.isInitialized) {\n      if (mutationIsFunction) {\n        mutation(this);\n      } else {\n        const mutationObj = mutation as Mutation;\n        const thisContext = mutationObj.mutationContext || this;\n        metadata.config.mutations[mutationObj.mutationName].apply(thisContext, mutationObj.payload);\n      }\n      return;\n    }\n\n    this.store.pendingMutations++;\n\n    try {\n      this.store.rootState[moduleName] = produce(state, (draft: unknown) => {\n        this.draftState = draft;\n        if (mutationIsFunction) {\n          mutation(this);\n          return;\n        }\n        const mutationObj = mutation as Mutation;\n        const thisContext = mutationObj.mutationContext || this;\n        metadata.config.mutations[mutationObj.mutationName].apply(thisContext, mutationObj.payload);\n      });\n    } catch (e) {\n      console.error('mutation failed', e);\n    } finally {\n      this.store.pendingMutations--;\n      this.getMetadata().rev++;\n      this.draftState = null;\n    }\n\n    this.store.events.emit('onMutation', mutation);\n\n    if (!this.store.pendingMutations) {\n      this.store.events.emit('onReadyToRender');\n    }\n  }\n\n  private registerDefaultMutations() {\n    const controller = this;\n    const updateStateMutation = (statePatch: object) => Object.assign(controller, statePatch);\n    controller.registerMutation('update', updateStateMutation);\n  }\n\n  get state(): TStateFor<TConfig> {\n    if (this.draftState) return this.draftState;\n\n    const store = this.store;\n    const moduleName = this.moduleName;\n\n    if (store.recordingAccessors) {\n      store.affectedModules[moduleName] = this.getMetadata().rev;\n    }\n\n    return store.rootState[moduleName];\n  }\n\n  // TODO remove\n  set state(val: any) {\n    console.log('set state ', val);\n    throw new Error('Trying to set state');\n  }\n\n  getMetadata() {\n    return this.store.modulesMetadata[this.moduleName];\n  }\n\n  get getters(): TStateFor<TConfig> {\n    return this.getMetadata().getters as TStateFor<TConfig>;\n  }\n\n  createView() {\n    const config = this.getMetadata().config;\n    const view = new StateView();\n    const controller = this;\n\n    view.defineProp({\n      description: 'StateRev',\n      name: 'getRev',\n      reactive: true,\n      getValue: () => {\n        // eslint-disable-next-line no-unused-expressions\n        controller.state; // read as reactive\n        // console.log(`read REV for ${controller.moduleName}.${controller.sectionName}`, controller.metadata.rev);\n        return controller.getMetadata().rev;\n      },\n    });\n\n    traverse(config.state, stateKey => {\n      view.defineProp({\n        description: 'StateProp',\n        name: stateKey,\n        reactive: true,\n        getValue: () => (controller as any)[stateKey],\n      });\n    });\n\n    traverse(config.mutations, stateKey => {\n      view.defineProp({\n        description: 'StateMutation',\n        name: stateKey,\n        reactive: false,\n        getValue: () => (controller as any)[stateKey],\n      });\n    });\n\n    traverse(config.getters, (propName) => {\n      view.defineProp({\n        description: 'StateGetter',\n        name: propName,\n        reactive: true,\n        getValue: () => (controller as any)[propName],\n      });\n    });\n\n    traverse(config.getterMethods, (propName) => {\n      view.defineProp({\n        description: 'StateGetterMethod',\n        name: propName,\n        reactive: false,\n        getValue: () => (controller as any)[propName],\n      });\n    });\n\n    return view;\n  }\n\n}\n\nexport interface Mutation {\n  id: number;\n  moduleName: string;\n  mutationName: string;\n  mutationContext?: any;\n  payload: any;\n}\n//\n// /**\n//  * use immerjs API to clone the object\n//  */\n// export function clone<T>(state: T) {\n//   return produce(state, draft => {});\n// }\n\nexport const defaultStateConfig: Partial<TStateConfig> = {\n  // persistent: false,\n  // autogenerateMutations: true,\n};\n\nexport type TStateConfigCreator = (new (...args: any) => TStateConfigDraft) | TStateConfigDraft\n\nexport type TStateConfig = {\n  state: any;\n  mutations: any;\n  getters: any;\n  getterMethods: any;\n  [key: string]: any;\n  // persistent?: boolean, // TODO ?\n  // persistentKeys?: boolean, // TODO ?\n  // autogenerateMutations?: boolean, // TODO ?\n}\n\nexport type TStateConfigDraft = Partial<TStateConfig>\n\nexport interface StatefulModuleMetadata {\n  rev: number;\n  config: TStateConfig;\n  controller: StateController;\n  isInitialized: boolean;\n  getters: Dict<() => any>;\n}\n\n// todo refactor\n\nexport type TDraftConfigFor<TConfigCreator> =\n  TConfigCreator extends new (...args: any) => infer TDraftConfigFromConstructor ?\n    TDraftConfigFromConstructor :\n      TConfigCreator extends (...args: any) => infer TDraftConfigFromFunction ?\n        TDraftConfigFromFunction :\n          TConfigCreator;\n\nexport type TStateConfigFor<TDraftConfig> = {\n  state: TStateFor<TDraftConfig>;\n  getters: any;\n  getterMethods: any;\n  mutations: any;\n}\n\nexport type TStateFor<TConfigCreator, TDraftConfig = TDraftConfigFor<TConfigCreator>> = TDraftConfig extends { state: infer TState } ? TState : WritablePart<TDraftConfig>;\n\nexport type PickMethods<\n  TDraftConfig,\n  TRootMethods = PickFunctionProperties<TDraftConfig>,\n  TExplicitGetters = TDraftConfig extends { getters: infer TGetters } ? TGetters : {},\n  TExplicitGetterMethods = TDraftConfig extends { getterMethods: infer TGetterMethods } ? TGetterMethods : {},\n  TExplicitMutations = TDraftConfig extends { mutations: infer TMutations } ? TMutations : {}\n  > = TRootMethods & TExplicitGetters & TExplicitGetterMethods & TExplicitMutations;\n\nexport type GetHeuristicGetterName<TPropName> = TPropName extends string ? `${'get'|'is'|'should'|'will'}${Capitalize<TPropName>}` : never;\n\nexport type PickHeuristicGetters<TDraftConfig> = {\n  [K in keyof TDraftConfig as GetHeuristicGetterName<K>]: (value: TDraftConfig[K]) => unknown\n}\n\nexport type GetStateControllerFor<\n  TConfigCreator,\n  TDraftConfig = TDraftConfigFor<TConfigCreator>,\n  TState = PickDefaultState<TDraftConfig>,\n> =\n  StateController<TConfigCreator> &\n  TState &\n  Omit<PickAutogeneratedMutations<TState>, keyof PickMethods<TDraftConfig>> &\n  PickDefaultMutations<TState> &\n  PickMethods<TDraftConfig> &\n  Exclude<TDraftConfig, keyof TStateConfig>\n\nexport type TStateViewForStateConfig<TConfigCreator> = Omit<GetStateControllerFor<TConfigCreator>, 'state'>;\n\nexport type GetSetterName<TPropName> = TPropName extends string ? `set${Capitalize<TPropName>}` : never;\n\nexport type PickDefaultState<TDraftConfig> = TDraftConfig extends { state: infer TState } ? TState : WritablePart<TDraftConfig>;\n\nexport type PickAutogeneratedMutations<TState> = {\n  [K in keyof TState as GetSetterName<K>]: (value: TState[K]) => unknown\n}\n\nexport type PickDefaultMutations<TState> = {\n  update(patch: Partial<TState>): unknown;\n}\n\n// Create a WritablePart helper\n// https://github.com/Microsoft/TypeScript/issues/27024#issuecomment-421529650\nexport type IfEquals<X, Y, A, B> =\n  (<T>() => T extends X ? 1 : 2) extends\n    (<T>() => T extends Y ? 1 : 2) ? A : B;\n\ntype WritableKeysOf<T> = {\n  [P in keyof T]: IfEquals<{ [Q in P]: T[P] }, { -readonly [Q in P]: T[P] }, P, never>\n}[keyof T];\n\ntype WritablePart<T> = Pick<T, WritableKeysOf<T>>;\n","export * from './Store';\nexport * from './StateView';\nexport * from './plugins';\nexport * from './parse-config';\n","import { Dict, isClass } from '../scope';\nimport { traverse } from '../utils';\nimport { TStateConfig } from './Store';\n\n/**\n * Generate a unified state config from a configCreator object\n */\nexport function parseStateConfig<TConfigDraft>(configCreator: TConfigDraft | (new (...args: any) => TConfigDraft) | ((...args: any) => TConfigDraft)): TStateConfig {\n  let configDraft: any;\n\n  if (isClass(configCreator)) {\n    configDraft = new (configCreator as any)();\n  } else if (typeof configCreator === 'function') {\n    configDraft = (configCreator as Function)();\n  } else {\n    configDraft = configCreator;\n  }\n\n  const config: TStateConfig = {\n    state: {},\n    getters: {},\n    getterMethods: {},\n    mutations: {},\n  };\n\n  config.state = parseDefaultState(configDraft);\n\n  // parse explicit getters\n  const explicitGetters = configDraft.getters;\n  if (explicitGetters) {\n    traverse(explicitGetters, (propName, descriptor) => {\n      if (descriptor.get) {\n        config.getters[propName] = descriptor;\n        return;\n      }\n\n      const getterMethod = explicitGetters[propName];\n      if (typeof getterMethod !== 'function') return;\n\n      config.getterMethods[propName] = explicitGetters[propName];\n    });\n  }\n\n  // parse heuristic getters\n  if (configDraft) {\n    traverse(configDraft, (propName, descriptor) => {\n\n      if (descriptor.get) {\n        config.getters[propName] = descriptor;\n        return;\n      }\n\n      const getterMethod = configDraft[propName];\n      if (typeof getterMethod !== 'function') return;\n\n      const isValidGetterName = (\n        propName.startsWith('get')\n        || propName.startsWith('is')\n        || propName.startsWith('should')\n      );\n\n      if (!isValidGetterName) return;\n\n      config.getterMethods[propName] = configDraft[propName];\n    });\n  }\n\n  // parse mutations\n  traverse(configDraft, (propName, descriptor) => {\n    if (descriptor.get) return;\n    if (propName in config.getterMethods) return;\n    const method = configDraft[propName];\n\n    if (typeof method !== 'function') return;\n\n    config.mutations[propName] = configDraft[propName];\n  });\n\n  return config;\n}\n\nfunction parseDefaultState(target: any) {\n  const defaultState: Dict<string> = {};\n  // if the `state` variable is set in the config, then pick the default state from it\n  if (target.state) {\n    traverse(target.state, (propName, descr) => {\n      defaultState[propName] = target.state[propName];\n    });\n  } else {\n    traverse(target, (propName, descr) => {\n      if (descr.get) return;\n      const propVal = descr.value;\n      if (typeof propVal === 'function') return;\n      defaultState[propName] = propVal;\n    });\n  }\n  return defaultState;\n}\n","export * from './inject-child';\nexport * from './inject-form';\nexport * from './inject-loading';\nexport * from './inject-query';\nexport * from './inject-state';\nexport * from './inject-watch';\nexport * from './pickProps';\nexport * from './pickInjectors';\n","import {\n  createInjector, InjectedProp, injectProvider,\n} from '../../scope/injector';\nimport {\n  GetComponentDataForModule,\n  GetModuleExtraView, GetModuleStateView,\n  StateView\n} from '../StateView';\nimport { InjectableModule, generateId, GetModuleInstanceFor } from '../../scope';\n\nexport const ChildModuleInjectorType = Symbol('childModuleInjector');\n\nexport type GetModuleInjectorValue<TModuleConfig> = GetModuleInstanceFor<TModuleConfig> extends { exportInjectorValue: (...args: any) => infer TValue } ? TValue : GetModuleInstanceFor<TModuleConfig>;\n\nexport function injectChild<TModule>(Module: TModule, ...args: any): InjectedProp<GetModuleInjectorValue<TModule>, GetModuleStateView<TModule>, GetModuleExtraView<TModule>> {\n\n  const provider = injectProvider();\n  const injectedValue = provider.injectChildModule(Module, ...args);\n  return injectedValue;\n\n  // return createInjector(injector => {\n  //\n  //   const scope = injector.provider.resolveChildScope();\n  //   const moduleName = `${injector.provider.id}__injected_module_${generateId()}`;\n  //   scope.register(Module, moduleName, { injector });\n  //   scope.init(moduleName, ...args);\n  //\n  //   return {\n  //     type: ChildModuleInjectorType,\n  //     getValue: () => {\n  //       const module = scope.resolve(moduleName) as InjectableModule;\n  //       if (module.exportInjectorValue) {\n  //         return module.exportInjectorValue();\n  //       }\n  //       return module;\n  //     },\n  //     exportComponentData: () => {\n  //       const module = scope.resolve(moduleName) as InjectableModule;\n  //       return module.exportComponentData && module.exportComponentData() as any;\n  //     },\n  //     destroy() {\n  //       scope.unregister(moduleName);\n  //     },\n  //   };\n  // });\n}\n","import { StateView } from '../StateView';\nimport { createInjector, InjectedProp } from '../../scope';\nimport { Store } from '../Store';\nimport { injectChild } from './inject-child';\n\nexport type TFormBindings<TState, TExtraProps = {}> = {\n  [K in keyof TState]: {\n    name: K;\n    value: TState[K];\n    onChange: (newVal: TState[K]) => unknown;\n  };\n} & TExtraProps\n\nexport function createFormBinding<TState, TExtraProps = {}>(\n  stateGetter: TState | (() => TState),\n  stateSetter: (statePatch: Partial<TState>) => unknown,\n  extraPropsGenerator?: (fieldName: keyof TState) => TExtraProps,\n): StateView<TFormBindings<TState, TExtraProps>> {\n\n  function getState(): TState {\n    if (typeof stateGetter === 'function') return (stateGetter as Function)();\n    return stateGetter;\n  }\n\n  const stateView = new StateView<TFormBindings<TState, TExtraProps>>();\n\n  stateView.defineProp({\n    description: 'FormStateRev',\n    name: 'getRev',\n    getValue: () => ({ ...getState() }),\n  });\n\n  stateView.defineWildcardProp(propName => {\n    stateView.defineProp({\n      description: 'FormInputBinding',\n      name: propName,\n      reactive: true,\n      getValue: () => ({\n        name: propName,\n        value: (getState() as any)[propName],\n        onChange: (newVal: unknown) => {\n          (stateSetter as any)({ [propName]: newVal });\n        },\n        ...(extraPropsGenerator ? extraPropsGenerator(propName as keyof TState) : {}),\n      }),\n    });\n  });\n\n  return stateView;\n}\n\n// TODO fix types\nexport class FormBindingModule {\n\n  formBinding: any;\n\n  constructor(stateGetter: any, stateSetter: any, extraPropsGenerator: any) {\n    this.formBinding = createFormBinding(stateGetter, stateSetter, extraPropsGenerator);\n  }\n\n  exportComponentData() {\n    return {\n      self: this.formBinding,\n      extra: null,\n    };\n  }\n\n}\n\nexport function injectFormBinding<TState, TExtraProps = {}>(\n  stateGetter: TState | (() => TState),\n  stateSetter: (statePatch: Partial<TState>) => unknown,\n  extraPropsGenerator?: (fieldName: keyof TState) => TExtraProps,\n): GetInjectedFormBinding<TState, TExtraProps> {\n  return injectChild(FormBindingModule, stateGetter, stateSetter, extraPropsGenerator) as any;\n}\n\nexport type GetInjectedFormBinding<TState, TExtraProps = {}> = InjectedProp<FormBindingModule, StateView<TFormBindings<TState, TExtraProps>>, null>\n","import { getInstanceMetadata, injectState, TLoadingStatus } from '../..';\n\nexport class LoadingState {\n  loadingStatus: TLoadingStatus = 'not-started';\n\n  get isLoading() {\n    return this.loadingStatus === 'loading';\n  }\n\n  get isLoaded() {\n    return this.loadingStatus === 'done';\n  }\n}\n\nexport function injectLoading() {\n  return injectState(LoadingState, false,statefulModule => {\n\n    // const parentProvider = getInstanceMetadata(statefulModule).provider.injector!.provider;\n    //\n    // parentProvider.events.on('onModuleInit', () => {\n    //\n    //   if (!parentProvider.isAsync) {\n    //     statefulModule.stateController.nonReactiveUpdate({ loadingStatus: 'done' });\n    //     return;\n    //   }\n    //\n    //   statefulModule.stateController.nonReactiveUpdate({ loadingStatus: 'loading' });\n    //\n    //   parentProvider.waitForLoad.then(() => {\n    //     statefulModule.stateController.setLoadingStatus('done');\n    //   });\n    // });\n  });\n}\n","import { generateId, injectProvider } from '../../scope';\nimport { TStateViewForStateConfig } from '../Store';\nimport { StateView } from '../StateView';\nimport { injectState } from './inject-state';\nimport { injectWatch } from './inject-watch';\nimport { injectChild } from './inject-child';\n\nexport class QueryStateConfig<TData, TParams, TError> {\n\n  // constructor(public state: QueryState<TData, TParams, TError>) {}\n\n  state: QueryState<TData, TParams, TError> = {\n    status: 'idle' as QueryStatus,\n    data: null as unknown as TData,\n    error: null as unknown as TError,\n    params: null as unknown as TParams,\n  };\n\n  setData(data: TData) {\n    this.state.status = 'success';\n    this.state.data = data;\n    console.log('query fetched', data);\n  }\n\n  setError(error: TError) {\n    this.state.status = 'error';\n    this.state.error = error;\n  }\n\n  get isLoading() {\n    return this.state.status === 'loading';\n  }\n}\n\n/**\n * Alternative for https://react-query.tanstack.com/reference/useQuery\n */\nexport class QueryModule<\n  TConstructorArgs extends Array<any>,\n  TData = GetQueryData<TConstructorArgs>,\n  TParams = GetQueryParams<TConstructorArgs>,\n  TError = unknown,\n  > {\n\n  state = injectState(QueryStateConfig);\n  provider = injectProvider();\n  watcher = injectWatch(() => this.getParams(), this.refetch);\n\n  fetchingPromise: Promise<TData> | null = null;\n  promiseId = '';\n  enabled = true;\n  options: QueryOptions;\n  stateView!: StateView<TStateViewForStateConfig<QueryStateConfig<TData, TParams, TError>>>;\n  isInitialFetch = true;\n  queryView!: StateView<TStateViewForStateConfig<QueryStateConfig<TData, TParams, TError>> & { refetch: () => Promise<TData>}>;\n\n  constructor(...args: TConstructorArgs) {\n\n    const computedOptions = getQueryOptionsFromArgs(args);\n    const options = {\n      enabled: true,\n      params: null,\n      initialData: [],\n      getParams: null,\n      fetch: () => {},\n      onSuccess: () => {},\n      onError: () => {},\n      ...computedOptions,\n    };\n\n    this.options = options;\n    this.enabled = !!options.enabled;\n  }\n\n  init() {\n\n    const queryMethods = new StateView();\n    queryMethods.defineProp({\n      description: 'QueryMethod',\n      name: 'refetch',\n      reactive: false,\n      getValue: () => {\n        return () => this.refetch();\n      },\n    });\n    this.stateView = this.state.createView() as any;\n    this.queryView = this.stateView.mergeView(queryMethods);\n    const data = this.options.initialData;\n    this.state.update({\n      params: this.getParams(),\n      data,\n    });\n    this.exec();\n  }\n\n  exec(): Promise<TData> {\n    if (this.fetchingPromise) return this.fetchingPromise;\n    return this.fetch();\n  }\n\n  fetch(): Promise<TData> {\n    let fetchResult: any;\n\n\n    if (this.thisContext) {\n      fetchResult = this.options.fetch.call(this.thisContext, this.getParams());\n    } else {\n      fetchResult = this.options.fetch(this.getParams());\n    }\n\n    if (fetchResult?.then) {\n      if (this.isInitialFetch) {\n        this.state.status = 'loading';\n        this.isInitialFetch = false;\n      } else {\n        this.state.setStatus('loading');\n      }\n      const promiseId = generateId();\n      this.promiseId = promiseId;\n      this.fetchingPromise = fetchResult;\n      return fetchResult.then((data: TData) => {\n        if (!this.enabled || this.promiseId !== promiseId) return;\n        this.fetchingPromise = null;\n        this.promiseId = '';\n        this.state.setData(data);\n      })\n        .catch((e: unknown) => {\n          if (!this.enabled || this.promiseId !== promiseId) return;\n          this.fetchingPromise = null;\n          this.promiseId = '';\n          this.state.setError(e as any);\n          this.options.onError && this.options.onError();\n        });\n    }\n    // result is not a promise, set the data\n    this.state.setData(fetchResult);\n    this.options.onSuccess && this.options.onSuccess();\n\n    return Promise.resolve(fetchResult);\n  }\n\n  get thisContext() {\n    const parentProvider = this.provider.options.parentProvider;\n    if (parentProvider) {\n      return parentProvider.instance;\n    }\n  }\n\n  getParams(): TParams {\n    if (!this.options.getParams) return null as any;\n    if (this.thisContext) {\n      return this.options.getParams.call(this.thisContext);\n    }\n\n    return this.options.getParams();\n  }\n\n  refetch() {\n    if (!this.enabled) return;\n    this.stopFetching();\n    return this.fetch();\n  }\n\n  stopFetching() {\n    this.fetchingPromise = null;\n    this.promiseId = '';\n  }\n\n  setEnabled(enabled: boolean) {\n    this.enabled = enabled;\n  }\n\n  onDestroy() {\n    // prevent unfinished fetching\n    this.setEnabled(false);\n  }\n\n  exportComponentData() {\n    return {\n      self: this.queryView,\n      extra: null,\n    };\n  }\n}\n\nexport function injectQuery<TQueryArgs extends QueryArgs>(...args: TQueryArgs) {\n  return injectChild(QueryModule as any as QueryModule<TQueryArgs>, ...args);\n}\n\nexport type QueryRequiredOptions = {\n  fetch: (...args: any) => any,\n}\n\nexport type QueryOptionalOptions = {\n  enabled: boolean,\n  initialData: any,\n  getParams: (() => any) | null,\n  onSuccess: (() => any) | null,\n  onError: (() => any) | null,\n}\n\nexport type QueryOptions = QueryOptionalOptions & QueryRequiredOptions;\nexport type QueryConstructorOptions = QueryRequiredOptions & Partial<QueryOptionalOptions>\n\nexport type QueryState<TData, TParams, TError> = {\n  status: QueryStatus,\n  data: TData,\n  params: TParams,\n  error: TError,\n}\n\ntype QueryStatus = 'idle' | 'loading' | 'error' | 'success'\n\nexport type QueryArgs = [QueryConstructorOptions] | [(...any: any) => any] | [any, (...any: any) => any] | [any, (...any: any) => any, (...any: any) => any];\n\n/**\n * convers Query constructor agrs to QueryOptions\n * @param args\n */\nexport function getQueryOptionsFromArgs<TQueryArgs extends Array<any>, TResult = GetQueryOptions<TQueryArgs>>(args: TQueryArgs): TResult {\n  if (args.length === 1) {\n    const arg = args[0];\n    if (typeof arg === 'function') {\n      return {\n        fetch: arg,\n      } as any as TResult;\n    }\n    return arg;\n  }\n\n  if (args.length === 2) {\n\n    if (typeof args[0] === 'function') {\n      return {\n        fetch: args[0],\n        getParams: args[1],\n      } as any as TResult;\n    }\n\n    return {\n      initialData: args[0],\n      fetch: args[1],\n    } as any as TResult;\n\n  }\n\n  return {\n    initialData: args[0],\n    fetch: args[1],\n    getParams: args[2],\n  } as any as TResult;\n}\n\nexport type GetQueryData<TQueryArgs> = GetQueryDataTypeFromOptions<GetQueryOptions<TQueryArgs>>\nexport type GetQueryParams<TQueryArgs> = GetQueryParamsTypeFromOptions<GetQueryOptions<TQueryArgs>>\n\nexport type GetQueryDataTypeFromOptions<TQueryOptions> =\n  TQueryOptions extends { initialData: infer TInitialData } ?\n    TInitialData extends never[] ?\n      GetDataTypeFromFetchType<TQueryOptions> :\n        TInitialData:\n          GetDataTypeFromFetchType<TQueryOptions>\n\nexport type GetQueryParamsTypeFromOptions<TQueryOptions> = TQueryOptions extends { getParams: (...args: any) => infer TParams } ? TParams : never;\n\nexport type GetDataTypeFromFetchType<TQueryOptions> = TQueryOptions extends { fetch: (...args: any) => infer TFunctionResult } ?\n  TFunctionResult extends Promise<infer TPromiseData> ?\n    TPromiseData :\n      TFunctionResult:\n        never;\n\nexport type GetQueryOptions<TQueryArgs> =\n  TQueryArgs extends [infer arg1, infer arg2, infer arg3] ?\n    GetQueryOptionsFor3Args<arg1, arg2, arg3> :\n    TQueryArgs extends [infer arg1, infer arg2] ?\n      GetQueryOptionsFor2Args<arg1, arg2> :\n        TQueryArgs extends [infer arg1] ?\n          GetQueryOptionsFor1Arg<arg1> :\n           GetQueryOptionsFor1Arg<TQueryArgs>;\n\nexport type GetQueryOptionsFor3Args<TInitialData, TFetch, TGetProps> = {\n  fetch: TFetch,\n  initialData: TInitialData,\n  getProps: TGetProps\n}\n\nexport type GetQueryOptionsFor2Args<Arg1, Arg2> = Arg1 extends (...args: any) => any ? {\n  fetch: Arg1,\n  getParams: Arg2,\n} : {\n  initialData: Arg1,\n  fetch: Arg2\n}\n\nexport type GetQueryOptionsFor1Arg<Arg> = Arg extends (...args: any) => any ?\n  { fetch: Arg } :\n  Arg;\n","import {\n  createInjector, defineGetter, inject,\n  InjectedProp,\n  Injector, injectProvider,\n} from '../../scope';\n\nimport {\n  StateController,\n  Store, TStateConfigCreator, GetStateControllerFor, TStateFor, TStateViewForStateConfig,\n} from '../Store';\nimport { StateView } from '../StateView';\nimport { injectChild } from './inject-child';\nimport { GetInjectedFormBinding, injectFormBinding, TFormBindings } from './inject-form';\n\nexport const StateInjectorType = Symbol('stateInjector');\n\nexport function injectState<\n\n  TConfigCreator extends TStateConfigCreator,\n  TValue = GetStateControllerFor<TConfigCreator>,\n  TViewValue = GetStateViewFor<TConfigCreator>,\n>(\n  configCreator: TConfigCreator,\n  allowMutationDecorators = true,\n  onCreate?: (statefulModule: StatefulModule<TConfigCreator>) => unknown,\n): InjectedProp<TValue, TViewValue, TViewValue> {\n  return injectChild(StatefulModule, configCreator, allowMutationDecorators, onCreate) as any as InjectedProp<TValue, TViewValue, TViewValue>;\n}\n\nexport class StatefulModule<TStateConfig> {\n\n  store = inject(Store);\n  provider = injectProvider();\n  stateController!: GetStateControllerFor<TStateConfig>;\n  stateView!: GetStateViewFor<TStateConfig>;\n  formBinding: GetInjectedFormBinding<TStateFor<TStateConfig>>;\n\n  constructor(public stateConfig: TStateConfig, public allowMutationDecorators = true, public onCreate?: (module: StatefulModule<TStateConfig>) => unknown) {\n\n    const moduleName = this.moduleName;\n    this.stateController = this.store.createState(moduleName, this.stateConfig);\n    this.formBinding = injectFormBinding(() => this.stateController.getters, patch => this.stateController.update(patch));\n    // TODO find better solution for injecting the provider\n    defineGetter(this.stateController, '__provider', () => this.provider, { enumerable: false });\n\n  }\n\n  init() {\n    const parentProvider = this.provider.options.parentProvider;\n    if (!parentProvider) {\n      throw new Error('StatefulModule module should be injected');\n    }\n    // register methods marked with the @mutation() decorators\n    if (this.allowMutationDecorators && parentProvider) {\n      const parentModule = parentProvider.instance;\n      const mutations: string[] = parentProvider.creator?.prototype?.__mutations || [];\n      mutations.forEach(mutationName => {\n        const mutation = parentModule[mutationName];\n        this.stateController.registerMutation(mutationName, mutation, parentModule);\n        parentModule[mutationName] = (...args: any) => (this.stateController as any)[mutationName](...args);\n      });\n\n      parentProvider.events.on('onAfterInit',() => {\n        this.stateController.finishInitialization();\n      });\n    }\n\n    this.stateView = this.stateController.createView() as any;\n    this.stateView.defineProp({\n      description: 'StateFormBinding',\n      name: 'bind',\n      reactive: true,\n      stateView: this.formBinding.formBinding,\n      getValue: () => {\n        return this.formBinding.formBinding;\n      },\n    });\n    this.onCreate && this.onCreate(this);\n  }\n\n  get moduleName() {\n    return this.provider.id;\n  }\n\n  onDestroy() {\n    this.store.destroyModule(this.moduleName);\n  }\n\n  exportInjectorValue() {\n    return this.stateController;\n  }\n\n  exportComponentData() {\n    return {\n      self: this.stateView,\n      extra: this.stateView,\n    };\n  }\n\n}\n\n/**\n * A decorator that registers the object method as an mutation\n */\nexport function mutation() {\n  return function (target: any, methodName: string) {\n    target.__mutations = target.__mutations || [];\n    // mark the method as an mutation\n    target.__mutations.push(methodName);\n  };\n}\n\nexport type GetStateViewFor<TStateConfig> = StateView<TStateViewForStateConfig<TStateConfig> & { bind: TFormBindings<TStateFor<TStateConfig>>}>;\n","import { inject, getInstanceMetadata } from '../../scope';\n\nimport {\n  Store,\n} from '../Store';\nimport { isSimilar } from '../../utils';\nimport { injectChild } from './inject-child';\n\nexport class WatchModule<T> {\n\n  store = inject(Store);\n  unwatch: Function | null = null;\n  current: T | null = null;\n\n  constructor(\n    public watchExpr: () => T,\n    public onChange: (newVal: T, prevVal: T) => unknown,\n    public isEqual = isSimilar,\n  ) {}\n\n  init() {\n    const parentProvider = getInstanceMetadata(this).provider.options.parentProvider;\n    if (!parentProvider) {\n      throw new Error('This module should have a parent module');\n    }\n\n    const context = parentProvider.instance;\n    this.current = this.watchExpr.call(context);\n    this.unwatch = this.store.events.on('onMutation', () => {\n      const prev = this.current!;\n      this.current = this.watchExpr.call(context);\n      if (this.isEqual(this.current, prev)) return;\n      this.onChange.call(context, this.current, prev);\n    });\n  }\n\n  destroy() {\n    this.unwatch && this.unwatch();\n  }\n\n}\n\nexport function injectWatch<T>(\n  expression: () => T,\n  onChange: (newVal: T, prevVal: T) => unknown,\n  isEqual?: (newVal: T, prevVal: T) => boolean,\n) {\n  return injectChild(WatchModule, expression, onChange, isEqual);\n}\n","import { GetProps, StateView } from '../StateView';\nimport {\n  forEach, getInstanceMetadata, InjectableModule, Injector, Provider,\n} from '../../scope';\nimport { Flatten } from '../../scope/flatten';\nimport { GetMerge, traverse } from '../../utils';\n\nexport function pickInjectors<\n  TView extends StateView<any>,\n  TModule\n  >(module: TModule): (props: GetProps<TView>, view: TView) => PickInjectedViews<TView, TModule> {\n\n  return function (props, view) {\n\n    let newView = view;\n\n    traverse(module as any as object, (propName, descr) => {\n\n      if (descr.get) return;\n      const provider = descr.value.__provider as Provider<any>;\n      if (!provider) return;\n\n      const module = provider.instance as InjectableModule;\n      const componentData = module.exportComponentData && module.exportComponentData();\n      const injectedValue = module.exportInjectorValue ? module.exportInjectorValue() : module;\n\n      const extraProps = componentData && componentData.extra;\n      if (extraProps) {\n        const extraPropsView = extraProps as StateView<any>;\n        forEach(extraPropsView.descriptors, (descriptor, p) => {\n          if (!(descriptor.name in module)) newView.defineProp(descriptor);\n        });\n        newView = newView.mergeView(extraProps as any);\n      }\n\n      const selfProps = componentData && componentData.self;\n      if (selfProps) {\n        newView.defineProp({\n          description: 'InjectorView',\n          name: propName,\n          reactive: true,\n          stateView: selfProps as any,\n          getValue() {\n            return injectedValue;\n          },\n        });\n      }\n    });\n\n    // const provider = getInstanceMetadata(module).provider;\n    // let newView = view;\n    //\n    // forEach(provider.injectors, injector => {\n    //   const componentData = injector.getComponentData();\n    //\n    //   const extraProps = componentData.extra;\n    //   if (extraProps) {\n    //     const extraPropsView = extraProps as StateView<any>;\n    //     forEach(extraPropsView.descriptors, (descriptor, p) => {\n    //       if (!(descriptor.name in module)) newView.defineProp(descriptor);\n    //     });\n    //     newView = newView.mergeView(extraProps as any);\n    //   }\n    //\n    //   const selfProps = componentData.self;\n    //   if (selfProps) {\n    //     newView.defineProp({\n    //       type: 'InjectorView',\n    //       name: injector.propertyName,\n    //       reactive: true,\n    //       stateView: selfProps as any,\n    //       getValue() {\n    //         return injector.resolveValue();\n    //       },\n    //     });\n    //   }\n    //\n    // });\n\n    return newView;\n  };\n}\n\nexport type GetInjectedPropName<TModule, TProp extends keyof TModule> = TModule[TProp] extends { __injector: Injector<any, any, any>} ? TProp : never;\nexport type GetInjectedExtraPropName<TModule, TProp extends keyof TModule> = TModule[TProp] extends { __injector: Injector<any, any, infer TExtraProps>} ? TExtraProps extends StateView ? TProp : never : never;\n\nexport type GetInjectedProps<TModule> = {[K in keyof TModule as GetInjectedPropName<TModule, K>]: TModule[K] extends { __injector: Injector<any, StateView<infer TInjectorView>, any>} ? TInjectorView: never }\nexport type GetExtraInjectedProps<TModule> = {[K in keyof TModule as GetInjectedExtraPropName<TModule, K>]: TModule[K] extends { __injector: Injector<any, any, StateView<infer TExtraProps>>} ? TExtraProps: never }\nexport type GetFlattenExtraProps<TModule> = keyof GetExtraInjectedProps<TModule> extends never ? {} : Flatten<GetExtraInjectedProps<TModule>>\nexport type GetAllInjectedProps<TModule> = GetMerge<GetFlattenExtraProps<TModule>, GetInjectedProps<TModule>>;\n\nexport type PickInjectedViews<TView, TModule> = StateView<GetProps<TView> & GetAllInjectedProps<TModule>>;\n\n// type Keytype = keyof GetExtraInjectedProps<QueriesModule>;\n// type Queryprops = keyof GetExtraInjectedProps<QueriesModule> extends never ? {} : Flatten<GetExtraInjectedProps<QueriesModule>>\n\n// const injProps: Queryprops;\n// injProps.onlineUsersQuery\n\n// const injProps: GetAllInjectedProps<QueriesModule>;\n// injProps.onlineUsersQuery\n// injProps.onlineUsersQuery.setData;\n// injProps.setData\n// //\n// const injProps2: GetFlattenExtraProps<QueriesModule>;\n// injProps2.onlineUsersQuery.setData;\n// injProps2.setData\n//\n//\n// const injPropsExtra: GetExtraInjectedProps<QueriesModule>;\n// const injPropsExtra2: GetModuleExtraView<QueriesModule>;\n// injPropsExtra2.\n\n// type TSuperUser = {\n//   id: string,\n//   name: string,\n// }\n//\n// const usersModule = new UsersModule();\n//\n//\n// const userBase = {\n//\n//   loading: injectLoading(),\n//\n//   state: injectState({\n//     users: [] as TSuperUser[],\n//   }),\n// }\n//\n// const userExtention = {\n//\n//   extendedFoo: 1,\n//\n//   state: injectState({\n//     selectedUserId: 'user2',\n//   }),\n// }\n\n// type BaseUser = GetAllInjectedProps<typeof userBase> & typeof userBase;\n// type ExtendedUser = GetAllInjectedProps<typeof userExtention> & typeof userExtention\n// const baseUser: BaseUser;\n// baseUser.users;\n// baseUser.state;\n// baseUser.loading\n//\n// const extendedUser: ExtendedUser;\n// extendedUser.selectedUserId;\n// extendedUser.state;\n//\n//\n// const mergedUser: Omit<BaseUser, keyof ExtendedUser> & ExtendedUser;\n//\n// mergedUser.users\n// mergedUser.selectedUserId\n// mergedUser.state\n","import { GetProps, StateView } from '../StateView';\nimport { traverse } from '../../utils';\n\nexport type PickModuleProps<TView, TModule> = StateView<GetProps<TView> & TModule>\n\nexport function pickProps<TModule, TProps>(module: TModule): (props: TProps, view: StateView<TProps>) => StateView<TProps & TModule> {\n\n  return function (props, view) {\n\n    traverse(module as any as object, (propName, descr) => {\n      const isGetter = !!descr.get;\n      const isFunction = !isGetter && typeof descr.value === 'function';\n      const getValue = isFunction ? () => descr.value.bind(module) : () => (module as any)[propName];\n\n      view.defineProp({\n        description: 'ModuleProp',\n        reactive: isGetter,\n        name: propName,\n        getValue,\n      });\n    });\n\n    return view as any;\n  };\n}\n","export * from './isDeepEqual';\nexport * from './merge';\nexport * from './traverse';\n","import { isPlainObject } from 'is-plain-object';\n\n/**\n * Compare 2 object with limited depth\n */\nexport function isDeepEqual(obj1: any, obj2: any, currentDepth: number, maxDepth: number): boolean {\n  if (obj1 === obj2) return true;\n  if (currentDepth === maxDepth) return false;\n  if (Array.isArray(obj1) && Array.isArray(obj2)) return isArrayEqual(obj1, obj2);\n  if (isPlainObject(obj1) && isPlainObject(obj2)) {\n    const [keys1, keys2] = [Object.keys(obj1), Object.keys(obj2)];\n    if (keys1.length !== keys2.length) return false;\n    for (const key of keys1) {\n      if (!isDeepEqual(obj1[key], obj2[key], currentDepth + 1, maxDepth)) return false;\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * consider isSimilar as isDeepEqual with depth 2\n */\nexport function isSimilar(obj1: any, obj2: any) {\n  return isDeepEqual(obj1, obj2, 0, 2);\n}\n\n/**\n * Shallow comparison of 2 arrays\n */\nfunction isArrayEqual(a: any[], b: any[]) {\n  if (a === b) return true;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\n\n/**\n * Shallow compare\n */\nexport function isEqual(obj1: any, obj2: any): boolean {\n  return isDeepEqual(obj1, obj2, 0, 1);\n}\n","import { traverse } from './traverse';\n\nexport type GetMerge<T1, T2> = T2 & Omit<T1, keyof T2>;\n\n/**\n * copy props from source to targets\n */\nexport function copyProps<TSource, TTarget = {}>(source: TSource, target?: TTarget): GetMerge<TSource, TTarget> {\n  if (!target) target = {} as TTarget;\n  traverse(source as any as object, (propName, descriptor) => {\n    Object.defineProperty(target, propName, descriptor);\n  });\n  return target as GetMerge<TSource, TTarget>;\n}\n\n/**\n * Create and merged object\n * Property descriptors will be preserved\n * Prototype properties will be included\n */\nexport function merge<T1, T2, TResult = GetMerge<T1, T2>>(obj1: T1, obj2: T2): TResult {\n  const result = {};\n\n  copyProps(obj1, result);\n  copyProps(obj2, result);\n\n  return result as TResult;\n}\n","/**\n * Travers class methods and props\n */\nimport { isPlainObject } from 'is-plain-object';\nimport { Dict } from '../scope';\n\n// helper methods to travers class instances prototype chains\n\nexport function traverse<T extends object>(\n  instance: T,\n  cb: (propName: string, descriptor: PropertyDescriptor) => unknown,\n) {\n  let entity = instance;\n  const prototypes = [];\n\n  if (isPlainObject(entity)) {\n    prototypes.push(entity);\n  } else {\n    while (entity.constructor.name !== 'Object') {\n      prototypes.push(entity);\n      entity = Object.getPrototypeOf(entity);\n    }\n  }\n\n  const alreadyTraversed: Record<string, boolean> = {};\n\n  for (const proto of prototypes) {\n    const propNames = Object.getOwnPropertyNames(proto);\n    for (const propName of propNames) {\n      if (propName in alreadyTraversed) continue;\n      alreadyTraversed[propName] = true;\n      const descriptor = Object.getOwnPropertyDescriptor(proto, propName);\n      if (!descriptor) return;\n      const shouldStop = cb(propName, descriptor);\n      if (shouldStop) return;\n    }\n  }\n}\n\nexport function getDescriptors<T>(instance: T): Dict<PropertyDescriptor>{\n  const descriptors: Dict<PropertyDescriptor> = {}\n  traverse(instance as any, (propName, descriptor) => {\n    descriptors[propName] = descriptor;\n  });\n  return descriptors;\n}\n\nexport function getKeys<T>(instance: T): (keyof T)[]{\n  const keys: any[] = [];\n  traverse(instance as any, propName => {\n    keys.push(propName);\n  });\n  return keys;\n}\n\nexport function filterKeys(obj: object, filterFn: (key: string) => unknown) {\n  return Object.fromEntries(Object.entries(obj).filter(([key]) => filterFn(key)));\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__156__;","module.exports = __WEBPACK_EXTERNAL_MODULE__386__;","export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    ;(this.events[event] || []).forEach(i => i(...args))\n  },\n  on(event, cb) {\n    ;(this.events[event] = this.events[event] || []).push(cb)\n    return () =>\n      (this.events[event] = (this.events[event] || []).filter(i => i !== cb))\n  }\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(18);\n",""],"names":[],"sourceRoot":""}