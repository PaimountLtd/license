{"version":3,"file":"index.js","mappings":"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","sources":["webpack://slap/webpack/universalModuleDefinition","webpack://slap/./node_modules/immer/dist/immer.cjs.production.min.js","webpack://slap/./node_modules/immer/dist/index.js","webpack://slap/./node_modules/is-plain-object/dist/is-plain-object.js","webpack://slap/./node_modules/object-assign/index.js","webpack://slap/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://slap/./node_modules/react/jsx-runtime.js","webpack://slap/./lib/index.ts","webpack://slap/./lib/react-bindings/ReactModules.tsx","webpack://slap/./lib/react-bindings/hooks.ts","webpack://slap/./lib/react-bindings/index.ts","webpack://slap/./lib/react-bindings/react-store-adapter.ts","webpack://slap/./lib/react-bindings/useComponentView.ts","webpack://slap/./lib/react-bindings/useModule.ts","webpack://slap/./lib/react-bindings/useModuleInstance.ts","webpack://slap/./lib/scope/flatten.ts","webpack://slap/./lib/scope/index.ts","webpack://slap/./lib/scope/injector.ts","webpack://slap/./lib/scope/interfaces.ts","webpack://slap/./lib/scope/provider.ts","webpack://slap/./lib/scope/scope.ts","webpack://slap/./lib/scope/utils.ts","webpack://slap/./lib/store/StateView.ts","webpack://slap/./lib/store/Store.ts","webpack://slap/./lib/store/index.ts","webpack://slap/./lib/store/parse-config.ts","webpack://slap/./lib/store/plugins/createModuleView.ts","webpack://slap/./lib/store/plugins/createStateView.ts","webpack://slap/./lib/store/plugins/index.ts","webpack://slap/./lib/store/plugins/inject-child.ts","webpack://slap/./lib/store/plugins/inject-form.ts","webpack://slap/./lib/store/plugins/inject-query.ts","webpack://slap/./lib/store/plugins/inject-state.ts","webpack://slap/./lib/store/plugins/inject-watch.ts","webpack://slap/./lib/utils/array-helpers.ts","webpack://slap/./lib/utils/index.ts","webpack://slap/./lib/utils/isDeepEqual.ts","webpack://slap/./lib/utils/merge.ts","webpack://slap/./lib/utils/traverse.ts","webpack://slap/external umd \"react\"","webpack://slap/external umd \"react-dom\"","webpack://slap/./node_modules/nanoevents/index.js","webpack://slap/webpack/bootstrap","webpack://slap/webpack/runtime/define property getters","webpack://slap/webpack/runtime/hasOwnProperty shorthand","webpack://slap/webpack/runtime/make namespace object","webpack://slap/webpack/before-startup","webpack://slap/webpack/startup","webpack://slap/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"slap\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"slap\"] = factory(root[\"react\"], root[\"react-dom\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__156__, __WEBPACK_EXTERNAL_MODULE__386__) {\nreturn ","function n(n){for(var t=arguments.length,r=Array(t>1?t-1:0),e=1;e<t;e++)r[e-1]=arguments[e];throw Error(\"[Immer] minified error nr: \"+n+(r.length?\" \"+r.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function t(n){return!!n&&!!n[H]}function r(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var t=Object.getPrototypeOf(n);if(null===t)return!0;var r=Object.hasOwnProperty.call(t,\"constructor\")&&t.constructor;return r===Object||\"function\"==typeof r&&Function.toString.call(r)===Q}(n)||Array.isArray(n)||!!n[G]||!!n.constructor[G]||c(n)||v(n))}function e(n,t,r){void 0===r&&(r=!1),0===i(n)?(r?Object.keys:T)(n).forEach((function(e){r&&\"symbol\"==typeof e||t(e,n[e],n)})):n.forEach((function(r,e){return t(e,r,n)}))}function i(n){var t=n[H];return t?t.t>3?t.t-4:t.t:Array.isArray(n)?1:c(n)?2:v(n)?3:0}function u(n,t){return 2===i(n)?n.has(t):Object.prototype.hasOwnProperty.call(n,t)}function o(n,t){return 2===i(n)?n.get(t):n[t]}function f(n,t,r){var e=i(n);2===e?n.set(t,r):3===e?(n.delete(t),n.add(r)):n[t]=r}function a(n,t){return n===t?0!==n||1/n==1/t:n!=n&&t!=t}function c(n){return W&&n instanceof Map}function v(n){return X&&n instanceof Set}function s(n){return n.i||n.u}function p(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var t=U(n);delete t[H];for(var r=T(t),e=0;e<r.length;e++){var i=r[e],u=t[i];!1===u.writable&&(u.writable=!0,u.configurable=!0),(u.get||u.set)&&(t[i]={configurable:!0,writable:!0,enumerable:u.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),t)}function l(n,u){return void 0===u&&(u=!1),h(n)||t(n)||!r(n)?n:(i(n)>1&&(n.set=n.add=n.clear=n.delete=d),Object.freeze(n),u&&e(n,(function(n,t){return l(t,!0)}),!0),n)}function d(){n(2)}function h(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function y(t){var r=V[t];return r||n(18,t),r}function _(n,t){V[n]||(V[n]=t)}function b(){return J}function m(n,t){t&&(y(\"Patches\"),n.o=[],n.v=[],n.s=t)}function j(n){O(n),n.p.forEach(w),n.p=null}function O(n){n===J&&(J=n.l)}function x(n){return J={p:[],l:J,h:n,_:!0,m:0}}function w(n){var t=n[H];0===t.t||1===t.t?t.j():t.O=!0}function S(t,e){e.m=e.p.length;var i=e.p[0],u=void 0!==t&&t!==i;return e.h.S||y(\"ES5\").P(e,t,u),u?(i[H].M&&(j(e),n(4)),r(t)&&(t=P(e,t),e.l||g(e,t)),e.o&&y(\"Patches\").g(i[H].u,t,e.o,e.v)):t=P(e,i,[]),j(e),e.o&&e.s(e.o,e.v),t!==B?t:void 0}function P(n,t,r){if(h(t))return t;var i=t[H];if(!i)return e(t,(function(e,u){return M(n,i,t,e,u,r)}),!0),t;if(i.A!==n)return t;if(!i.M)return g(n,i.u,!0),i.u;if(!i.R){i.R=!0,i.A.m--;var u=4===i.t||5===i.t?i.i=p(i.k):i.i;e(3===i.t?new Set(u):u,(function(t,e){return M(n,i,u,t,e,r)})),g(n,u,!1),r&&n.o&&y(\"Patches\").F(i,r,n.o,n.v)}return i.i}function M(n,e,i,o,a,c){if(t(a)){var v=P(n,a,c&&e&&3!==e.t&&!u(e.D,o)?c.concat(o):void 0);if(f(i,o,v),!t(v))return;n._=!1}if(r(a)&&!h(a)){if(!n.h.K&&n.m<1)return;P(n,a),e&&e.A.l||g(n,a)}}function g(n,t,r){void 0===r&&(r=!1),n.h.K&&n._&&l(t,r)}function A(n,t){var r=n[H];return(r?s(r):n)[t]}function z(n,t){if(t in n)for(var r=Object.getPrototypeOf(n);r;){var e=Object.getOwnPropertyDescriptor(r,t);if(e)return e;r=Object.getPrototypeOf(r)}}function E(n){n.M||(n.M=!0,n.l&&E(n.l))}function R(n){n.i||(n.i=p(n.u))}function k(n,t,r){var e=c(t)?y(\"MapSet\").$(t,r):v(t)?y(\"MapSet\").C(t,r):n.S?function(n,t){var r=Array.isArray(n),e={t:r?1:0,A:t?t.A:b(),M:!1,R:!1,D:{},l:t,u:n,k:null,i:null,j:null,I:!1},i=e,u=Y;r&&(i=[e],u=Z);var o=Proxy.revocable(i,u),f=o.revoke,a=o.proxy;return e.k=a,e.j=f,a}(t,r):y(\"ES5\").J(t,r);return(r?r.A:b()).p.push(e),e}function F(u){return t(u)||n(22,u),function n(t){if(!r(t))return t;var u,a=t[H],c=i(t);if(a){if(!a.M&&(a.t<4||!y(\"ES5\").N(a)))return a.u;a.R=!0,u=D(t,c),a.R=!1}else u=D(t,c);return e(u,(function(t,r){a&&o(a.u,t)===r||f(u,t,n(r))})),3===c?new Set(u):u}(u)}function D(n,t){switch(t){case 2:return new Map(n);case 3:return Array.from(n)}return p(n)}function K(){function n(n,t){var r=f[n];return r?r.enumerable=t:f[n]=r={configurable:!0,enumerable:t,get:function(){return Y.get(this[H],n)},set:function(t){Y.set(this[H],n,t)}},r}function r(n){for(var t=n.length-1;t>=0;t--){var r=n[t][H];if(!r.M)switch(r.t){case 5:o(r)&&E(r);break;case 4:i(r)&&E(r)}}}function i(n){for(var t=n.u,r=n.k,e=T(r),i=e.length-1;i>=0;i--){var o=e[i];if(o!==H){var f=t[o];if(void 0===f&&!u(t,o))return!0;var c=r[o],v=c&&c[H];if(v?v.u!==f:!a(c,f))return!0}}var s=!!t[H];return e.length!==T(t).length+(s?0:1)}function o(n){var t=n.k;if(t.length!==n.u.length)return!0;var r=Object.getOwnPropertyDescriptor(t,t.length-1);if(r&&!r.get)return!0;for(var e=0;e<t.length;e++)if(!t.hasOwnProperty(e))return!0;return!1}var f={};_(\"ES5\",{J:function(t,r){var e=Array.isArray(t),i=function(t,r){if(t){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,n(i,!0));return e}var u=U(r);delete u[H];for(var o=T(u),f=0;f<o.length;f++){var a=o[f];u[a]=n(a,t||!!u[a].enumerable)}return Object.create(Object.getPrototypeOf(r),u)}(e,t),u={t:e?5:4,A:r?r.A:b(),M:!1,R:!1,D:{},l:r,u:t,k:i,i:null,O:!1,I:!1};return Object.defineProperty(i,H,{value:u,writable:!0}),i},P:function(n,i,f){f?t(i)&&i[H].A===n&&r(n.p):(n.o&&function n(t){if(t&&\"object\"==typeof t){var r=t[H];if(r){var i=r.u,f=r.k,a=r.D,c=r.t;if(4===c)e(f,(function(t){t!==H&&(void 0!==i[t]||u(i,t)?a[t]||n(f[t]):(a[t]=!0,E(r)))})),e(i,(function(n){void 0!==f[n]||u(f,n)||(a[n]=!1,E(r))}));else if(5===c){if(o(r)&&(E(r),a.length=!0),f.length<i.length)for(var v=f.length;v<i.length;v++)a[v]=!1;else for(var s=i.length;s<f.length;s++)a[s]=!0;for(var p=Math.min(f.length,i.length),l=0;l<p;l++)f.hasOwnProperty(l)||(a[l]=!0),void 0===a[l]&&n(f[l])}}}}(n.p[0]),r(n.p))},N:function(n){return 4===n.t?i(n):o(n)}})}function $(){function f(n){if(!r(n))return n;if(Array.isArray(n))return n.map(f);if(c(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],f(n[1])]})));if(v(n))return new Set(Array.from(n).map(f));var t=Object.create(Object.getPrototypeOf(n));for(var e in n)t[e]=f(n[e]);return u(n,G)&&(t[G]=n[G]),t}function a(n){return t(n)?f(n):n}var s=\"add\";_(\"Patches\",{W:function(t,r){return r.forEach((function(r){for(var e=r.path,u=r.op,a=t,c=0;c<e.length-1;c++){var v=i(a),p=\"\"+e[c];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof a&&\"prototype\"===p&&n(24),\"object\"!=typeof(a=o(a,p))&&n(15,e.join(\"/\"))}var l=i(a),d=f(r.value),h=e[e.length-1];switch(u){case\"replace\":switch(l){case 2:return a.set(h,d);case 3:n(16);default:return a[h]=d}case s:switch(l){case 1:return\"-\"===h?a.push(d):a.splice(h,0,d);case 2:return a.set(h,d);case 3:return a.add(d);default:return a[h]=d}case\"remove\":switch(l){case 1:return a.splice(h,1);case 2:return a.delete(h);case 3:return a.delete(r.value);default:return delete a[h]}default:n(17,u)}})),t},F:function(n,t,r,i){switch(n.t){case 0:case 4:case 2:return function(n,t,r,i){var f=n.u,c=n.i;e(n.D,(function(n,e){var v=o(f,n),p=o(c,n),l=e?u(f,n)?\"replace\":s:\"remove\";if(v!==p||\"replace\"!==l){var d=t.concat(n);r.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),i.push(l===s?{op:\"remove\",path:d}:\"remove\"===l?{op:s,path:d,value:a(v)}:{op:\"replace\",path:d,value:a(v)})}}))}(n,t,r,i);case 5:case 1:return function(n,t,r,e){var i=n.u,u=n.D,o=n.i;if(o.length<i.length){var f=[o,i];i=f[0],o=f[1];var c=[e,r];r=c[0],e=c[1]}for(var v=0;v<i.length;v++)if(u[v]&&o[v]!==i[v]){var p=t.concat([v]);r.push({op:\"replace\",path:p,value:a(o[v])}),e.push({op:\"replace\",path:p,value:a(i[v])})}for(var l=i.length;l<o.length;l++){var d=t.concat([l]);r.push({op:s,path:d,value:a(o[l])})}i.length<o.length&&e.push({op:\"replace\",path:t.concat([\"length\"]),value:i.length})}(n,t,r,i);case 3:return function(n,t,r,e){var i=n.u,u=n.i,o=0;i.forEach((function(n){if(!u.has(n)){var i=t.concat([o]);r.push({op:\"remove\",path:i,value:n}),e.unshift({op:s,path:i,value:n})}o++})),o=0,u.forEach((function(n){if(!i.has(n)){var u=t.concat([o]);r.push({op:s,path:u,value:n}),e.unshift({op:\"remove\",path:u,value:n})}o++}))}(n,t,r,i)}},g:function(n,t,r,e){r.push({op:\"replace\",path:[],value:t===B?void 0:t}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function t(n,t){function r(){this.constructor=n}f(n,t),n.prototype=(r.prototype=t.prototype,new r)}function i(n){n.i||(n.D=new Map,n.i=new Map(n.u))}function u(n){n.i||(n.i=new Set,n.u.forEach((function(t){if(r(t)){var e=k(n.A.h,t,n);n.p.set(t,e),n.i.add(e)}else n.i.add(t)})))}function o(t){t.O&&n(3,JSON.stringify(s(t)))}var f=function(n,t){return(f=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r])})(n,t)},a=function(){function n(n,t){return this[H]={t:2,l:t,A:t?t.A:b(),M:!1,R:!1,i:void 0,D:void 0,u:n,k:this,I:!1,O:!1},this}t(n,Map);var u=n.prototype;return Object.defineProperty(u,\"size\",{get:function(){return s(this[H]).size}}),u.has=function(n){return s(this[H]).has(n)},u.set=function(n,t){var r=this[H];return o(r),s(r).has(n)&&s(r).get(n)===t||(i(r),E(r),r.D.set(n,!0),r.i.set(n,t),r.D.set(n,!0)),this},u.delete=function(n){if(!this.has(n))return!1;var t=this[H];return o(t),i(t),E(t),t.u.has(n)?t.D.set(n,!1):t.D.delete(n),t.i.delete(n),!0},u.clear=function(){var n=this[H];o(n),s(n).size&&(i(n),E(n),n.D=new Map,e(n.u,(function(t){n.D.set(t,!1)})),n.i.clear())},u.forEach=function(n,t){var r=this;s(this[H]).forEach((function(e,i){n.call(t,r.get(i),i,r)}))},u.get=function(n){var t=this[H];o(t);var e=s(t).get(n);if(t.R||!r(e))return e;if(e!==t.u.get(n))return e;var u=k(t.A.h,e,t);return i(t),t.i.set(n,u),u},u.keys=function(){return s(this[H]).keys()},u.values=function(){var n,t=this,r=this.keys();return(n={})[L]=function(){return t.values()},n.next=function(){var n=r.next();return n.done?n:{done:!1,value:t.get(n.value)}},n},u.entries=function(){var n,t=this,r=this.keys();return(n={})[L]=function(){return t.entries()},n.next=function(){var n=r.next();if(n.done)return n;var e=t.get(n.value);return{done:!1,value:[n.value,e]}},n},u[L]=function(){return this.entries()},n}(),c=function(){function n(n,t){return this[H]={t:3,l:t,A:t?t.A:b(),M:!1,R:!1,i:void 0,u:n,k:this,p:new Map,O:!1,I:!1},this}t(n,Set);var r=n.prototype;return Object.defineProperty(r,\"size\",{get:function(){return s(this[H]).size}}),r.has=function(n){var t=this[H];return o(t),t.i?!!t.i.has(n)||!(!t.p.has(n)||!t.i.has(t.p.get(n))):t.u.has(n)},r.add=function(n){var t=this[H];return o(t),this.has(n)||(u(t),E(t),t.i.add(n)),this},r.delete=function(n){if(!this.has(n))return!1;var t=this[H];return o(t),u(t),E(t),t.i.delete(n)||!!t.p.has(n)&&t.i.delete(t.p.get(n))},r.clear=function(){var n=this[H];o(n),s(n).size&&(u(n),E(n),n.i.clear())},r.values=function(){var n=this[H];return o(n),u(n),n.i.values()},r.entries=function(){var n=this[H];return o(n),u(n),n.i.entries()},r.keys=function(){return this.values()},r[L]=function(){return this.values()},r.forEach=function(n,t){for(var r=this.values(),e=r.next();!e.done;)n.call(t,e.value,e.value,this),e=r.next()},n}();_(\"MapSet\",{$:function(n,t){return new a(n,t)},C:function(n,t){return new c(n,t)}})}var I;Object.defineProperty(exports,\"__esModule\",{value:!0});var J,N=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),W=\"undefined\"!=typeof Map,X=\"undefined\"!=typeof Set,q=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,B=N?Symbol.for(\"immer-nothing\"):((I={})[\"immer-nothing\"]=!0,I),G=N?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",H=N?Symbol.for(\"immer-state\"):\"__$immer_state\",L=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Q=\"\"+Object.prototype.constructor,T=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,U=Object.getOwnPropertyDescriptors||function(n){var t={};return T(n).forEach((function(r){t[r]=Object.getOwnPropertyDescriptor(n,r)})),t},V={},Y={get:function(n,t){if(t===H)return n;var e=s(n);if(!u(e,t))return function(n,t,r){var e,i=z(t,r);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,t);var i=e[t];return n.R||!r(i)?i:i===A(n.u,t)?(R(n),n.i[t]=k(n.A.h,i,n)):i},has:function(n,t){return t in s(n)},ownKeys:function(n){return Reflect.ownKeys(s(n))},set:function(n,t,r){var e=z(s(n),t);if(null==e?void 0:e.set)return e.set.call(n.k,r),!0;if(!n.M){var i=A(s(n),t),o=null==i?void 0:i[H];if(o&&o.u===r)return n.i[t]=r,n.D[t]=!1,!0;if(a(r,i)&&(void 0!==r||u(n.u,t)))return!0;R(n),E(n)}return n.i[t]===r&&\"number\"!=typeof r&&(void 0!==r||t in n.i)||(n.i[t]=r,n.D[t]=!0,!0)},deleteProperty:function(n,t){return void 0!==A(n.u,t)||t in n.u?(n.D[t]=!1,R(n),E(n)):delete n.D[t],n.i&&delete n.i[t],!0},getOwnPropertyDescriptor:function(n,t){var r=s(n),e=Reflect.getOwnPropertyDescriptor(r,t);return e?{writable:!0,configurable:1!==n.t||\"length\"!==t,enumerable:e.enumerable,value:r[t]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.u)},setPrototypeOf:function(){n(12)}},Z={};e(Y,(function(n,t){Z[n]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),Z.deleteProperty=function(n,t){return Z.set.call(this,n,t,void 0)},Z.set=function(n,t,r){return Y.set.call(this,n[0],t,r,n[0])};var nn=function(){function e(t){var e=this;this.S=q,this.K=!0,this.produce=function(t,i,u){if(\"function\"==typeof t&&\"function\"!=typeof i){var o=i;i=t;var f=e;return function(n){var t=this;void 0===n&&(n=o);for(var r=arguments.length,e=Array(r>1?r-1:0),u=1;u<r;u++)e[u-1]=arguments[u];return f.produce(n,(function(n){var r;return(r=i).call.apply(r,[t,n].concat(e))}))}}var a;if(\"function\"!=typeof i&&n(6),void 0!==u&&\"function\"!=typeof u&&n(7),r(t)){var c=x(e),v=k(e,t,void 0),s=!0;try{a=i(v),s=!1}finally{s?j(c):O(c)}return\"undefined\"!=typeof Promise&&a instanceof Promise?a.then((function(n){return m(c,u),S(n,c)}),(function(n){throw j(c),n})):(m(c,u),S(a,c))}if(!t||\"object\"!=typeof t){if(void 0===(a=i(t))&&(a=t),a===B&&(a=void 0),e.K&&l(a,!0),u){var p=[],d=[];y(\"Patches\").g(t,a,p,d),u(p,d)}return a}n(21,t)},this.produceWithPatches=function(n,t){if(\"function\"==typeof n)return function(t){for(var r=arguments.length,i=Array(r>1?r-1:0),u=1;u<r;u++)i[u-1]=arguments[u];return e.produceWithPatches(t,(function(t){return n.apply(void 0,[t].concat(i))}))};var r,i,u=e.produce(n,t,(function(n,t){r=n,i=t}));return\"undefined\"!=typeof Promise&&u instanceof Promise?u.then((function(n){return[n,r,i]})):[u,r,i]},\"boolean\"==typeof(null==t?void 0:t.useProxies)&&this.setUseProxies(t.useProxies),\"boolean\"==typeof(null==t?void 0:t.autoFreeze)&&this.setAutoFreeze(t.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){r(e)||n(8),t(e)&&(e=F(e));var i=x(this),u=k(this,e,void 0);return u[H].I=!0,O(i),u},i.finishDraft=function(n,t){var r=(n&&n[H]).A;return m(r,t),S(void 0,r)},i.setAutoFreeze=function(n){this.K=n},i.setUseProxies=function(t){t&&!q&&n(20),this.S=t},i.applyPatches=function(n,r){var e;for(e=r.length-1;e>=0;e--){var i=r[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(r=r.slice(e+1));var u=y(\"Patches\").W;return t(n)?u(n,r):this.produce(n,(function(n){return u(n,r)}))},e}(),tn=new nn,rn=tn.produce,en=tn.produceWithPatches.bind(tn),un=tn.setAutoFreeze.bind(tn),on=tn.setUseProxies.bind(tn),fn=tn.applyPatches.bind(tn),an=tn.createDraft.bind(tn),cn=tn.finishDraft.bind(tn);exports.Immer=nn,exports.applyPatches=fn,exports.castDraft=function(n){return n},exports.castImmutable=function(n){return n},exports.createDraft=an,exports.current=F,exports.default=rn,exports.enableAllPlugins=function(){K(),C(),$()},exports.enableES5=K,exports.enableMapSet=C,exports.enablePatches=$,exports.finishDraft=cn,exports.freeze=l,exports.immerable=G,exports.isDraft=t,exports.isDraftable=r,exports.nothing=B,exports.original=function(r){return t(r)||n(23,r),r[H].u},exports.produce=rn,exports.produceWithPatches=en,exports.setAutoFreeze=un,exports.setUseProxies=on;\n//# sourceMappingURL=immer.cjs.production.min.js.map\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./immer.cjs.production.min.js')\n} else {\n  module.exports = require('./immer.cjs.development.js')\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export * from './scope';\r\nexport * from './store';\r\nexport * from './react-bindings';\r\nexport * from './utils';\r\n","import React, {\n  ReactNode, useContext,\n} from 'react';\nimport { useOnCreate } from './hooks';\nimport { Scope, TModuleConstructorMap } from '../scope';\nimport { ReactStoreAdapter } from './react-store-adapter';\nimport { Store } from '../store';\n\nexport type TAppContext = {\n  servicesScope: Scope; // keeps singleton services in the root scope\n  modulesScope: Scope; // keeps non-singleton modules\n}\n\nexport const SlapContext = React.createContext<TAppContext|null>(null);\n\nexport function useAppContext() {\n  return useContext(SlapContext)!;\n}\n\nexport function createApp(Services: TModuleConstructorMap = {}): TAppContext {\n  const rootScope = new Scope({ ...Services, Store, ReactStoreAdapter });\n  const modulesScope = rootScope.registerScope({}, { autoregister: true });\n\n  rootScope.init(ReactStoreAdapter);\n\n  return { servicesScope: rootScope, modulesScope };\n}\n\nexport function ReactModules(p: {children: ReactNode | ReactNode[], app?: TAppContext}) {\n  const appScope = useOnCreate(() => p.app || createApp());\n\n  return (\n    <SlapContext.Provider value={appScope}>\n      {p.children}\n    </SlapContext.Provider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\r\n\r\n/**\r\n * onCreate shortcut\r\n * Helpful if you need to calculate an immutable initial state for a component\r\n */\r\nexport function useOnCreate<TReturnValue>(cb: () => TReturnValue) {\r\n  return useState(cb)[0];\r\n}\r\n\r\n/**\r\n * onDestroy shortcut\r\n */\r\nexport function useOnDestroy(cb: () => void) {\r\n  useEffect(() => cb, []);\r\n}\r\n\r\n/**\r\n * Get component name from the callstack\r\n */\r\nexport function getComponentName(): string {\r\n  const stack = new Error().stack;\r\n  const regex = / at ([A-Z]\\w+) /;\r\n  try {\r\n    const componentName = stack!.split('\\n').find(message => message.match(regex))!.match(regex)![1];\r\n    return componentName;\r\n  } catch (e) {\r\n    return 'unknown_component';\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a function for force updating of the component\r\n */\r\nexport function useForceUpdate() {\r\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n  return forceUpdate;\r\n}\r\n","export * from './hooks';\r\nexport * from './react-store-adapter';\r\nexport * from './ReactModules';\r\nexport * from './hooks';\r\nexport * from './useComponentView';\r\nexport * from './useModule';\r\nexport * from './useModuleInstance';\r\n","import { unstable_batchedUpdates } from 'react-dom';\nimport { Dict, Provider } from '../scope';\nimport { Store } from '../store/Store';\nimport { inject } from '../scope/injector';\nimport { StateView } from '../store';\nimport { isSimilar } from '../utils';\n\nexport class ReactStoreAdapter {\n\n  store = inject(Store);\n  components = {} as Dict<ComponentView>;\n\n  registerComponent(moduleView: StateView, componentId: string, forceUpdate: Function, provider: Provider<any>, storeAdapter: ReactStoreAdapter): ComponentView {\n    const componentView = new ComponentView(this.store, moduleView, componentId, forceUpdate, provider, storeAdapter);\n    this.components[componentId] = componentView;\n    return componentView;\n  }\n\n  destroyComponent(componentId: string) {\n    const componentView = this.components[componentId];\n    if (!componentView) return;\n    componentView.setDestroyed();\n    delete this.components[componentId];\n  }\n\n  init() {\n    this.store.events.on('onReadyToRender', () => this.updateUI());\n  }\n\n  watchers = {} as Record<string, Function>;\n\n  watchersOrder = [] as string[];\n\n  createWatcher(watcherId: string, cb: Function) {\n    this.watchersOrder.push(watcherId);\n    this.watchers[watcherId] = cb;\n    return watcherId;\n  }\n\n  removeWatcher(watcherId: string) {\n    const ind = this.watchersOrder.findIndex(id => watcherId === id);\n    this.watchersOrder.splice(ind, 1);\n    delete this.watchers[watcherId];\n  }\n\n  updateIsInProgress = false;\n\n  updateUI() {\n    if (this.updateIsInProgress) {\n      console.error('Tried to update component state before component has been mounted.');\n    }\n    const watchersIds = [...this.watchersOrder];\n\n    this.updateIsInProgress = true;\n    try {\n      // force update components\n      unstable_batchedUpdates(() => {\n        watchersIds.forEach(id => {\n          this.watchers[id] && this.watchers[id]();\n          const component = this.components[id];\n          if (component.needUpdate()) {\n            component.forceUpdate();\n            component.setInvalidated(false);\n          }\n        });\n      });\n    } finally {\n      this.updateIsInProgress = false;\n    }\n\n  }\n}\n\nexport type ComponentSnapshot = {\n  affectedModules: Dict<number>;\n  props: Dict<any>;\n}\n\nexport class ComponentView {\n  public isDestroyed = false;\n  public isMounted = false;\n  public isInvalidated = false;\n\n  lastSnapshot: ComponentSnapshot = {\n    affectedModules: {} as Dict<number>,\n    props: null as any,\n  };\n\n  constructor(public store: Store, public stateView: StateView, public id: string, public forceUpdate: Function, public provider: Provider<any>, public storeAdapter: ReactStoreAdapter) {\n  }\n\n  makeSnapshot(): ComponentSnapshot {\n    const snapshot = {\n      affectedModules: {},\n      props: {},\n    };\n\n    snapshot.affectedModules = this.store.listenAffectedModules(() => {\n      snapshot.props = this.stateView.getSnapshot();\n    });\n\n    this.lastSnapshot = snapshot;\n    return snapshot;\n  }\n\n  // startListeningStoreChanges(provider: Provider<any>, component: ComponentView, reactStore: ReactStoreAdapter) {\n  //   const stateView = component.stateView;\n  //   if (!stateView.hasSelectedProps) return;\n  //\n  //   component.makeSnapshot();\n  //\n  //   const watcherId = reactStore.createWatcher(component.id, () => {\n  //\n  //     if (provider.isDestroyed) return;\n  //\n  //     const shouldUpdate = component.shouldComponentUpdate();\n  //     if (shouldUpdate) {\n  //       component.setInvalidated(true);\n  //     }\n  //   });\n  // }\n\n  needUpdate() {\n    return this.isInvalidated && this.isMounted && !this.isDestroyed;\n  }\n\n  setMounted() {\n    this.isMounted = true;\n  }\n\n  setInvalidated(invalidated: boolean) {\n    this.isInvalidated = invalidated;\n  }\n\n  setDestroyed() {\n    this.isDestroyed = true;\n    this.isMounted = false;\n  }\n\n  private defaultShouldComponentUpdate(): boolean {\n    const prevSnapshot = this.lastSnapshot;\n    const prevAffectedModules = Object.keys(prevSnapshot.affectedModules);\n    let modulesChanged = false;\n    for (const moduleName of prevAffectedModules) {\n      if (prevSnapshot.affectedModules[moduleName] !== this.store.modulesMetadata[moduleName]?.rev) {\n        modulesChanged = true;\n        break;\n      }\n    }\n    if (!modulesChanged) return false;\n\n    const newSnapshot = this.makeSnapshot();\n\n    if (isSimilar(prevSnapshot.affectedModules, newSnapshot.affectedModules)) {\n      // no modules changed, do not call compare props\n      return false;\n    }\n\n    if (!isSimilar(prevSnapshot.props, newSnapshot.props)) {\n\n      return true;\n    }\n    return false;\n  }\n\n  defaultShouldComponentUpdateCached = () => this.defaultShouldComponentUpdate();\n\n  shouldComponentUpdate(): boolean {\n    if (this.customShouldComponentUpdate) {\n      return this.customShouldComponentUpdate(this.defaultShouldComponentUpdateCached);\n    }\n    return this.defaultShouldComponentUpdate();\n  }\n\n  private customShouldComponentUpdate: ShouldComponentUpdateFN | null = null;\n\n  setShouldComponentUpdate(shouldUpdateCb: ShouldComponentUpdateFN) {\n    this.customShouldComponentUpdate = shouldUpdateCb;\n  }\n}\n\nexport type ShouldComponentUpdateFN = (defaultShouldComponentUpdate: () => boolean) => boolean;\n","import { useEffect, useLayoutEffect } from 'react';\nimport {\n  getComponentName, useForceUpdate, useOnCreate, useOnDestroy,\n} from './hooks';\nimport {\n  generateId,\n  getInstanceMetadata, Provider,\n} from '../scope';\nimport { ExtendView } from '../store/StateView';\nimport { createModuleView, GetModuleStateView, Store } from '../store';\nimport { ComponentView, ReactStoreAdapter } from './react-store-adapter';\nimport { useModule } from './useModule';\n\nexport function useComponentView<TModule, TResult = GetUseComponentViewResult<TModule>>\n(module: TModule): TResult {\n  const forceUpdate = useForceUpdate();\n\n  const {\n    componentId, reactStore, component, provider,\n  } = useOnCreate(() => {\n\n    const provider = getInstanceMetadata(module).provider;\n    const reactStore = provider.scope.resolve(ReactStoreAdapter);\n    const store = provider.scope.resolve(Store);\n    const componentName = getComponentName();\n    const componentId = `${componentName}__${generateId()}`;\n    let moduleView = createModuleView(module);\n    const parentModuleView = provider.getMetadata('parentModuleView');\n    if (parentModuleView) {\n      moduleView = moduleView.mergeView(parentModuleView);\n    }\n    const component = reactStore.registerComponent(moduleView, componentId, forceUpdate, provider, reactStore);\n\n    function extend<TNewProps>(\n      newPropsFactory: (props: GetModuleStateView<TModule>['props']) => TNewProps,\n    ): (ExtendView<GetModuleStateView<TModule>['props'], TNewProps>)['props'] {\n      const newId = componentId + '_extended';\n      const newProvider = provider.resolveChildProvider(() => newPropsFactory(moduleView.props as any), newId);\n      newProvider.setMetadata('parentModuleView', moduleView);// TODO remove metadata\n      store.setModuleContext(newId, provider.childScope!);\n      const result = useModule(newId) as any;\n      store.resetModuleContext(newId);\n      return result;\n    }\n\n    moduleView.defineProp({\n      name: 'extend',\n      getValue: () => extend,\n    });\n\n    moduleView.defineProp({\n      name: 'componentView',\n      getValue: () => component,\n    });\n\n    return {\n      componentId, component, moduleView, reactStore, provider,\n    };\n  });\n\n  useOnDestroy(() => {\n    reactStore.destroyComponent(componentId);\n  });\n\n  useLayoutEffect(() => {\n    // startListeningStoreChanges(provider, component, reactStore);\n    // component.startListeningStoreChanges(provider, component, reactStore);\n\n    const stateView = component.stateView;\n    if (!stateView.hasSelectedProps) return;\n\n    component.makeSnapshot();\n\n    const watcherId = reactStore.createWatcher(component.id, () => {\n\n      if (provider.isDestroyed) return;\n\n      const shouldUpdate = component.shouldComponentUpdate();\n      if (shouldUpdate) {\n        component.setInvalidated(true);\n      }\n    });\n    return () => {\n      reactStore.removeWatcher(component.id);\n    };\n  }, []);\n\n  useEffect(() => {\n    component.setMounted();\n  });\n\n  return component.stateView.proxy as TResult;\n}\n\nexport type GetUseComponentViewResult<TModuleInstance> =\n  GetModuleStateView<TModuleInstance>['props'] &\n  {\n    componentView: ComponentView,\n    extend: <TNewProps>(newPropsFactory: (props: GetModuleStateView<TModuleInstance>['props']) => TNewProps) => ExtendView<GetModuleStateView<TModuleInstance>['props'], TNewProps>['props'] & {componentView: ComponentView }\n  }\n\nfunction startListeningStoreChanges(provider: Provider<any>, component: ComponentView, reactStore: ReactStoreAdapter) {\n  const stateView = component.stateView;\n  if (!stateView.hasSelectedProps) return;\n\n  component.makeSnapshot();\n\n  const watcherId = reactStore.createWatcher(component.id, () => {\n\n    if (provider.isDestroyed) return;\n\n    const shouldUpdate = component.shouldComponentUpdate();\n    if (shouldUpdate) {\n      component.setInvalidated(true);\n    }\n  });\n}\n","import { GetModuleConstructorArgs, GetModuleInstanceFor, TModuleLocatorType } from '../scope';\nimport { useModuleInstance } from './useModuleInstance';\nimport { GetUseComponentViewResult, useComponentView } from './useComponentView';\n\nexport function useModule<\n  T extends TModuleLocatorType,\n  TInitState extends boolean | GetModuleConstructorArgs<T>\n>(locator: T, initProps: TInitState|null = null, moduleName = ''): GetUseComponentViewResult<GetModuleInstanceFor<T>> {\n  const module = useModuleInstance(locator, initProps, moduleName);\n  return useComponentView(module);\n}\n\n\n\nexport type GetUseModuleResult<T> = GetUseComponentViewResult<GetModuleInstanceFor<T>>;\n","import { useEffect } from 'react';\r\nimport { useOnCreate, useOnDestroy } from './hooks';\r\nimport { useAppContext } from './ReactModules';\r\nimport { Store } from '../store/Store';\r\nimport {\r\n  Scope,\r\n  GetModuleInstanceFor,\r\n  TModuleLocatorType,\r\n  GetModuleConstructorArgs,\r\n} from '../scope';\r\n\r\n/**\r\n * Resolve module instance for a component\r\n */\r\nexport function useModuleInstance<T extends TModuleLocatorType, TInitProps extends boolean | GetModuleConstructorArgs<T>>(locator: T, initProps: TInitProps|null = null, name = ''): GetModuleInstanceFor<T> {\r\n  const { modulesScope, servicesScope } = useAppContext();\r\n\r\n  const {\r\n    instance,\r\n    moduleName,\r\n    scope,\r\n    isRoot,\r\n    shouldInitInNewScope,\r\n    isService,\r\n    store,\r\n  } = useOnCreate(() => {\r\n\r\n    let moduleName = name || (typeof locator === 'string' ? locator : (locator as any).name);\r\n    const store = modulesScope.resolve(Store);\r\n    const shouldInitInNewScope = !!initProps;\r\n    let scope: Scope;\r\n    let isRoot = false;\r\n    let isService = false;\r\n\r\n    if (shouldInitInNewScope) {\r\n      scope = modulesScope.registerScope();\r\n      isRoot = true;\r\n      const provider = scope.register(locator as any, moduleName);\r\n      moduleName = provider.name;\r\n      const constructorArgs = Array.isArray(initProps) ? initProps as unknown[] : [];\r\n      const instance = scope.init(moduleName, ...constructorArgs);\r\n    } else {\r\n      scope = store.currentContext[moduleName] ?? modulesScope;\r\n      const provider = scope.isRegistered(moduleName) ? scope.resolveProvider(moduleName) : scope.register(locator as any, moduleName);\r\n      isService = servicesScope.id === provider.scope.id;\r\n      moduleName = name || provider.name;\r\n      if (!isService && !provider.instance) isRoot = true;\r\n    }\r\n\r\n    const provider = scope.resolveProvider(moduleName);\r\n    const instance = scope.resolve(moduleName);\r\n\r\n    return {\r\n      instance,\r\n      store,\r\n      isRoot,\r\n      scope,\r\n      moduleName,\r\n      provider,\r\n      shouldInitInNewScope,\r\n      isService,\r\n    };\r\n  });\r\n\r\n  store.setModuleContext(moduleName, scope);\r\n  useEffect(() => {\r\n    isRoot && store.resetModuleContext(moduleName);\r\n  });\r\n\r\n  // unregister the component from the module onDestroy\r\n  useOnDestroy(() => {\r\n    if (isService || !isRoot) return;\r\n\r\n    if (shouldInitInNewScope) {\r\n      scope.dispose();\r\n    } else {\r\n      scope.unregister(moduleName);\r\n    }\r\n\r\n  });\r\n\r\n  return instance;\r\n}\r\n","// implements a `Flatten` type helper\r\n// https://flut1.medium.com/deep-flatten-typescript-types-with-finite-recursion-cb79233d93ca\r\n\r\nexport type NonObjectKeysOf<T> = {\r\n  [K in keyof T]: T[K] extends Array<any> ? K : T[K] extends object ? never : K\r\n}[keyof T];\r\n\r\nexport type ValuesOf<T> = T[keyof T];\r\nexport type ObjectValuesOf<T extends Object> = Exclude<\r\n  Exclude<Extract<ValuesOf<T>, object>, never>,\r\n  Array<any>\r\n  >;\r\n\r\nexport type UnionToIntersection<U> = (U extends any\r\n  ? (k: U) => void\r\n  : never) extends ((k: infer I) => void)\r\n  ? I\r\n  : never;\r\n\r\n\r\nexport type Flatten<T> = Pick<T, NonObjectKeysOf<T>> &\r\n  UnionToIntersection<ObjectValuesOf<T>>;\r\n\r\n\r\n","export * from './interfaces';\r\nexport * from './scope';\r\nexport * from './provider';\r\nexport * from './injector';\r\nexport * from './utils';\r\nexport * from './flatten';\r\n","import { InjectableModuleTyped, TModuleClass } from './interfaces';\nimport { getCurrentProvider, getCurrentScope } from './scope';\nimport { InjectedPropOptions, Provider } from './provider';\nimport {\n  GetModuleExtraValue,\n  GetModuleInjectorValue,\n  GetModuleStateView,\n} from '../store';\n\nexport function inject<TModule extends TModuleClass>(ModuleClass: TModule, options?: InjectedPropOptions): InjectedProp<GetModuleInjectorValue<TModule>, GetModuleStateView<TModule>, GetModuleExtraValue<TModule>> {\n  const provider = injectProvider();\n  const module = provider.injectModule(ModuleClass, options);\n  return module;\n}\n\n/**\n * Inject module and expose its props to a component's selector\n */\nexport function injectExposed<TModule extends TModuleClass>(ModuleClass: TModule) {\n  return inject(ModuleClass, { isExposed: true }) as InjectedProp<GetModuleInjectorValue<TModule>, GetModuleStateView<TModule>, GetModuleStateView<TModule>>;\n}\n\nexport function injectScope() {\n  return getCurrentScope()!;\n}\n\nexport function injectProvider(): Provider<any> {\n  return getCurrentProvider()!;\n}\n\nexport type InjectedProp<TValue, TSelectorValue, TSelectorExtraValues> =\n  TValue & { __injector: InjectableModuleTyped<TValue, TSelectorValue, TSelectorExtraValues> };\n","import { Dict } from './utils';\nimport { Provider } from './provider';\n\nexport type PickFunctionPropertyNames<T> = {\n  [K in keyof T]: T[K] extends (...args: any) => any ? K : never;\n}[keyof T];\nexport type PickFunctionProperties<T> = Pick<T, PickFunctionPropertyNames<T>>;\n\nexport type TModuleConstructor = new (...args: any[]) => any;\nexport type TModuleConstructorMap = { [key: string]: TModuleConstructor }\n\nexport type TModuleClass = new (...args: any) => any;\n\nexport type TModuleCreator = TModuleClass | Dict<any> | ((...args: any) => any)\nexport type TModuleLocatorType = TModuleCreator | string;\n\nexport type GetModuleInstanceFor<TModuleLocator> =\n  TModuleLocator extends new (...args: any[]) => infer TInstanceFromConstructor ?\n    TInstanceFromConstructor :\n      TModuleLocator extends (...args: any[]) => infer TInstanceFromFunction ?\n        TInstanceFromFunction:\n          TModuleLocator extends string ?\n            unknown:\n              TModuleLocator\n\nexport type GetModuleConstructorArgs<TModuleLocator> =\n  TModuleLocator extends new (...args: infer ConstructorArgs) => any ?\n    ConstructorArgs :\n    TModuleLocator extends (...args: infer ConstructorArgs) => any ?\n      ConstructorArgs:\n        unknown[]\n\nexport type TProviderFor<TModuleLocator extends TModuleLocatorType> = Provider<GetModuleInstanceFor<TModuleLocator>>\n\nexport interface InjectableModule {\n  init?(): unknown;\n  destroy?(): unknown;\n  exportInjectorValue?(): any;\n  exportSelectorValue?(): any;\n  exportSelectorExtraValues?(): any;\n}\n\nexport interface InjectableModuleTyped\n  <TInjectedValue, TSelectorValue, TSelectorExtraValues> extends InjectableModule\n{\n  exportInjectorValue?(): TInjectedValue; // export this value as an injector value\n  exportSelectorValue?(): TSelectorValue;// export this value into useModule selector under the module's name\n  exportSelectorExtraValues?(): TSelectorExtraValues; // export this values as additional data available for selection\n}\n","import { createNanoEvents } from 'nanoevents';\nimport { isPlainObject } from 'is-plain-object';\nimport { Scope } from './scope';\nimport {\n  defineGetter, Dict, generateId, isClass,\n} from './utils';\nimport {\n  GetModuleInstanceFor,\n  InjectableModuleTyped,\n  TModuleCreator, TProviderFor,\n} from './interfaces';\n\n/**\n * Providers initialize modules and keeps their metadata\n */\nexport class Provider<TInstance, TInitParams extends [] = []> {\n\n  /**\n   * Uniq id for the provider\n   */\n  id: string;\n\n  /**\n   * Keeps module's instance\n   */\n  instance: TInstance | null = null;\n\n  /**\n   * keeps user's metadata\n   */\n  metadata: Dict<any> = {};\n\n  /**\n   * function that constructs a new module\n   */\n  factory: (args: TInitParams) => TInstance;\n\n  /**\n   * true if instance is initialized and added to the Scope\n   */\n  isInited = false;\n\n  /**\n   * true if instance is initialized and added to the Scope\n   */\n  isDestroyed = false;\n\n  /**\n   * Keeps information about all injected modules\n   */\n  injectedModules: Dict<{ instance: InjectableModuleTyped<any, any, any>, options: InjectedPropOptions }> = {};\n\n  /**\n   * Keeps information about all child modules.\n   * Child modules are kind of injected modules with the same lifecycle of the parent module\n   */\n  childModules: Dict<InjectableModuleTyped<any, any, any>> = {};\n\n  /**\n   * Keeps a child scope if the provider has created one\n   */\n  childScope: Scope | null = null;\n\n  constructor(\n    public scope: Scope,\n    public creator: (new (...args: TInitParams) => TInstance) | ((...args: TInitParams) => TInstance) | TInstance,\n    public name = '',\n    public options: Partial<ProviderOptions> = {},\n  ) {\n    if (!this.name) this.name = `AnonymousProvider__${generateId()}`;\n    this.id = `${this.name}__${this.scope.id}__${generateId()}`;\n\n    // setup default provider options\n    this.options = { shouldCallHooks: true, ...this.options };\n\n    if (typeof creator === 'function') {\n\n      if (isClass(creator)) {\n        this.factory = (args: TInitParams) => new (creator as any)(...args);\n        return;\n      }\n\n      // creator is a function\n      this.factory = args => (creator as (...args: TInitParams) => TInstance)(...args);\n      return;\n    }\n\n    // creator is an object\n    if (isPlainObject(creator)) {\n      this.factory = () => creator;\n      return;\n    }\n\n    throw new Error(`Can not construct the object ${creator}`);\n  }\n\n  /**\n   * Creates a module instance\n   * @param args\n   */\n  createInstance(args: TInitParams): TInstance {\n    const instance = this.factory(args) as any;\n    this.instance = instance;\n    createInstanceMetadata(instance, this);\n    return instance;\n  }\n\n  /**\n   * Init all injected modules\n   */\n  mountModule() {\n    Object.keys(this.injectedModules).forEach(injectedName => {\n      const childModuleProvider = getInstanceMetadata(this.injectedModules[injectedName].instance).provider;\n      if (!childModuleProvider.isInited) childModuleProvider.mountModule();\n    });\n    if (this.options.shouldCallHooks) {\n      const instance = this.instance as any as InjectableModuleTyped<any, any, any>;\n      const provider = this as Provider<any, any>;\n      this.events.emit('onBeforeInit', provider);\n      instance.init && instance.init();\n      this.events.emit('onAfterInit', provider);\n    }\n    this.isInited = true;\n  }\n\n  getMetadata(pluginName: string) {\n    return this.metadata[pluginName];\n  }\n\n  setMetadata(pluginName: string, data: any) {\n    this.metadata[pluginName] = data;\n    return data;\n  }\n\n  // destroy provider\n  destroy() {\n    this.destroyInstance();\n    // unsubscribe events\n    this.events.events = {};\n  }\n\n  destroyInstance() {\n    const instance = this.instance as any;\n    if (!instance) return;\n\n    // destroy instance\n    instance.destroy && instance.destroy();\n\n    // destroy child modules\n    this.childScope?.dispose();\n    this.childModules = {};\n    this.isDestroyed = true;\n\n    this.instance = null;\n    this.isInited = false;\n  }\n\n  get instanceId() {\n    return getInstanceMetadata(this.instance).id;\n  }\n\n  /**\n   * Returns a child scope. Creates a new one if not exist\n   */\n  resolveChildScope() {\n    if (!this.childScope) this.childScope = this.scope.createChildScope();\n    return this.childScope;\n  }\n\n  /**\n   * Resolves a provider for the module in the child scope\n   */\n  resolveChildProvider<T extends TModuleCreator>(ModuleCreator: T, name: string): TProviderFor<T> {\n    const childScope = this.resolveChildScope();\n    if (!childScope.isRegistered(name)) {\n      childScope.register(ModuleCreator, name);\n    }\n    return childScope.resolveProvider(name) as TProviderFor<T>;\n  }\n\n  /**\n   * Inject a module into the current module\n   */\n  injectModule<T extends TModuleCreator>(ModuleLocator: T, options: InjectedPropOptions = {}) {\n    const module = this.scope.resolve(ModuleLocator);\n    const moduleProvider = getInstanceMetadata(module).provider;\n    this.injectedModules[moduleProvider.name] = { instance: module, options };\n    const returnValue = module.exportInjectorValue ? module.exportInjectorValue() : module;\n    return returnValue as GetModuleInstanceFor<T>; // TODO: resolve injected value\n  }\n  /**\n   * Inject a child module into the current module\n   */\n  injectChildModule<T extends TModuleCreator>(ModuleCreator: T, ...args: any) {\n    const childScope = this.resolveChildScope();\n    const name = `${this.id}__child__${ModuleCreator.name || ''}_${generateId()}`;\n    childScope.register(ModuleCreator, name, { parentProvider: this as Provider<any, any> });\n    const childModule = childScope.init(name, ...args) as InjectableModuleTyped<any, any, any>;\n    this.childModules[name] = childModule;\n    this.injectedModules[name] = { instance: childModule, options: {} };\n    const returnValue = childModule.exportInjectorValue ? childModule.exportInjectorValue() : childModule;\n    return returnValue;\n  }\n\n  events = createNanoEvents<ProviderEvents>();\n}\n\n/**\n * Attaches a metadata for the module instance\n */\nexport function createInstanceMetadata(instance: any, provider: Provider<any, any>) {\n  const id = `${provider.id}__${generateId()}`;\n  const descriptor = { enumerable: false, configurable: false };\n\n  defineGetter(instance, '__instanceId', () => id, descriptor);\n  defineGetter(instance, '__provider', () => provider, descriptor);\n}\n\nexport function getInstanceMetadata(instance: any) {\n  const provider: Provider<any> = instance.__provider;\n\n  if (!provider) {\n    throw new Error(`Provider non found for a given instance ${instance}`);\n  }\n\n  return {\n    provider,\n    id: instance.__instanceId as string,\n  };\n}\n\nexport const moduleSystemProps: Dict<boolean> = {\n  __provider: true,\n  __instanceId: true,\n};\n\nexport interface ProviderEvents {\n  onBeforeInit: (provider: Provider<any>) => unknown,\n  onAfterInit: (provider: Provider<any>) => unknown,\n}\n\nexport type ProviderOptions = {\n\n  /**\n   * Should call lifecycle hooks: init, load, onLoad\n   */\n  shouldCallHooks: boolean;\n\n  /**\n   * Keeps parentProvider if the module has been injected as a child module\n   */\n  parentProvider: Provider<any>;\n}\n\nexport type InjectedPropOptions = {\n\n  /**\n   * true if should expose props in the component selector when injected as a property\n   */\n  isExposed?: boolean;\n}\n","import { createNanoEvents } from 'nanoevents';\nimport {\n  TModuleClass,\n  TModuleConstructorMap, TModuleCreator, GetModuleInstanceFor,\n  TModuleLocatorType,\n  TProviderFor,\n} from './interfaces';\nimport { generateId } from './utils';\nimport { Provider, ProviderOptions } from './provider';\n\nlet currentScope: Scope | null = null;\nlet currentProvider: Provider<any> | null = null;\nlet unmountedModulesCount = 0;\n\ninterface ScopeSettings {\n  parentScope: Scope | null,\n  autoregister: boolean,\n  providerOptions?: Partial<ProviderOptions>\n}\n\nconst defaultScopeSettings = {\n  parentScope: null,\n  autoregister: false,\n};\n\n/**\n * A Dependency injection container\n */\nexport class Scope {\n  id!: string;\n\n  /**\n   * Keeps all registered providers\n   */\n  providers: Record<string, Provider<any>> = {};\n\n  /**\n   * Keeps all registered child scopes\n   */\n  childScopes: Record<string, Scope> = {};\n\n  settings: ScopeSettings;\n\n  constructor(\n    dependencies: TModuleConstructorMap = {},\n    settings: Partial<ScopeSettings> = {},\n  ) {\n    const uid = generateId();\n    const parentScope = settings?.parentScope;\n\n    this.id = parentScope ? `${parentScope.id}__${uid}` : `root_${uid}`;\n\n    this.settings = parentScope\n      ? { ...parentScope.settings, ...settings }\n      : { ...defaultScopeSettings, ...settings };\n\n    dependencies && this.registerMany(dependencies);\n  }\n\n  registerMany(dependencies: TModuleConstructorMap) {\n    Object.keys(dependencies).forEach(depName => this.register(dependencies[depName], depName));\n  }\n\n  register<T extends TModuleCreator>(ModuleCreator: T, name?: string, options?: Partial<ProviderOptions>): TProviderFor<T> {\n    const moduleName = name || ModuleCreator.name || `AnonymousModule_${generateId()}`;\n    if (this.providers[moduleName]) {\n      throw new Error(`${moduleName} already registered in the given Scope`);\n    }\n\n    const provider = new Provider(this, ModuleCreator, moduleName, options);\n    this.providers[moduleName] = provider;\n\n    this.events.emit('onModuleRegister', provider);\n    return provider;\n  }\n\n  getProvider<T extends TModuleLocatorType>(moduleLocator: T): TProviderFor<T> | null {\n    const moduleName = typeof moduleLocator === 'string' ? moduleLocator : moduleLocator.name;\n    if (!moduleName) return null;\n\n    const provider = this.providers[moduleName];\n    if (provider) return provider;\n    if (!this.parent) return null;\n\n    return this.parent.getProvider(moduleName);\n  }\n\n  resolveProvider<T extends TModuleLocatorType>(moduleLocator: T): TProviderFor<T> {\n    const provider = this.getProvider(moduleLocator);\n    if (provider) return provider;\n\n    const shouldRegister = this.settings.autoregister && typeof moduleLocator !== 'string';\n    if (shouldRegister) return this.register(moduleLocator);\n\n    throw new Error(`Provider not found ${moduleLocator}`);\n  }\n\n  getInstance<T extends TModuleLocatorType>(locator: T) {\n    const provider = this.getProvider(locator);\n    return provider ? provider.instance : null;\n  }\n\n  resolve<T extends TModuleLocatorType>(locator: T): GetModuleInstanceFor<T> {\n    const provider = this.resolveProvider(locator);\n    if (provider.instance) return provider.instance;\n    return this.init(locator, ...[] as any);\n  }\n\n  unregister<T extends TModuleLocatorType>(locator: T) {\n    const provider = this.getProvider(locator);\n    if (!provider) return;\n    provider.destroy();\n    delete this.providers[provider.name];\n    this.events.emit('onModuleUnregister', provider.id);\n  }\n\n  // helper methods\n\n  isRegistered(moduleLocator: TModuleLocatorType): boolean {\n    return !!this.getProvider(moduleLocator);\n  }\n\n  hasInstance(moduleLocator: TModuleLocatorType): boolean {\n    const provider = this.resolveProvider(moduleLocator);\n    return !!provider?.instance;\n  }\n\n  /**\n   * Instantiate a registered module\n   * TODO type for args\n   */\n  init<T extends TModuleLocatorType>(locator: T, ...args: any[]): GetModuleInstanceFor<T> {\n    const provider = this.resolveProvider(locator);\n\n    if (provider.instance) {\n      throw new Error(`The module ${provider.name} is already inited in the given scope`);\n    }\n    let instance: GetModuleInstanceFor<T>;\n\n    unmountedModulesCount++;\n    try {\n      instance = this.create(locator, ...args);\n    } finally {\n      unmountedModulesCount--;\n    }\n    if (!unmountedModulesCount) provider.mountModule();\n\n    return instance;\n  }\n\n  /**\n   * create the instance and resolve injections\n   * every time returns a new instance\n   */\n  // TODO add type for args\n  create<TLocator extends TModuleLocatorType>(locator: TLocator, ...args: any): GetModuleInstanceFor<TLocator> {\n    const prevScope = currentScope;\n    currentScope = this;\n\n    let provider: TProviderFor<TLocator>;\n\n    const isRegistered = this.isRegistered(locator);\n    if (isRegistered) {\n      provider = this.resolveProvider(locator);\n    } else {\n      provider = new Provider(this, locator);\n    }\n\n    const prevProvider = currentProvider;\n    currentProvider = provider;\n\n    const instance = provider.createInstance(args);\n    currentScope = prevScope;\n    currentProvider = prevProvider;\n\n    return instance;\n  }\n\n  createChildScope(\n    dependencies?: TModuleConstructorMap,\n    settings?: Omit<Partial<ScopeSettings>, 'parentScope'>,\n  ) {\n    return new Scope(dependencies, { ...settings, parentScope: this });\n  }\n\n  /**\n   * Register a child scope\n   */\n  registerScope(dependencies?: TModuleConstructorMap, settings?: Partial<Scope['settings']>) {\n    const scope = this.createChildScope({}, settings);\n    this.childScopes[scope.id] = scope;\n    scope.events = this.events;\n    dependencies && scope.registerMany(dependencies);\n    return scope;\n  }\n  /**\n   * Unregister a child scope\n   */\n  unregisterScope(scopeId: string) {\n    const scope = this.childScopes[scopeId];\n    if (!scope) throw new Error(`Can not unregister Scope ${scopeId} - Scope not found`);\n    scope.dispose();\n    delete this.childScopes[scopeId];\n  }\n\n  getRootScope(): Scope {\n    if (!this.parent) return this;\n    return this.parent.getRootScope();\n  }\n\n  /**\n   * Destroy current scope and all providers\n   */\n  dispose() {\n    // destroy child scopes\n    Object.keys(this.childScopes).forEach(scopeId => {\n      this.unregisterScope(scopeId);\n    });\n\n    // destroy providers\n    Object.keys(this.providers).forEach(providerName => {\n      this.providers[providerName].destroy();\n      delete this.providers[providerName];\n    });\n\n    // unsubscribe events\n    if (!this.parent) this.events.events = {};\n  }\n\n  /**\n   * Could be usefull for debugging\n   */\n  getScheme(): any {\n    return {\n      id: this.id,\n      registry: this.providers,\n      parentScope: this.parent ? this.parent.getScheme() : null,\n    };\n  }\n\n  /**\n   * Returns true if it doesn't have parent scopes\n   */\n  get isRoot() {\n    return !this.parent;\n  }\n\n  get parent() {\n    return this.settings.parentScope;\n  }\n\n  events = createNanoEvents<ScopeEvents>();\n}\n\nexport interface ScopeEvents {\n  onModuleRegister: (provider: Provider<any>) => void\n  onModuleInit: (provider: Provider<any>) => void,\n  onModuleUnregister: (providerId: string) => void,\n}\n\nexport function getCurrentScope() {\n  return currentScope;\n}\n\nexport function getCurrentProvider() {\n  return currentProvider;\n}\n","let idCounter = 1;\n\nexport function generateId() {\n  return (idCounter++).toString();\n}\n\nexport type Dict<T> = Record<string, T>;\n\n/**\n * Loop though an object\n */\nexport function forEach<TDict, TKey extends keyof TDict>(dict: TDict, cb: (val: TDict[TKey], key: TKey) => unknown) {\n  Object.keys(dict).forEach(propName => {\n    (cb as any)((dict as any)[propName], propName);\n  });\n}\n\n/**\n * Register a getter on object\n */\nexport function defineGetter(target: object, methodName: string, getter: () => any, descriptor?: Partial<PropertyDescriptor>) {\n  Object.defineProperty(target, methodName, {\n    configurable: descriptor?.configurable ?? true,\n    enumerable: descriptor?.enumerable ?? true,\n    get: getter,\n  });\n}\n\n/**\n * Register a setter on object\n */\nexport function defineSetter(target: object, methodName: string, setter: (val: any) => boolean, descriptor?: Partial<PropertyDescriptor>) {\n  Object.defineProperty(target, methodName, {\n    configurable: descriptor?.configurable ?? true,\n    enumerable: descriptor?.enumerable ?? true,\n    set: setter,\n  });\n}\n\n/**\n * Capitalize the first letter\n */\nexport function capitalize(srt: string): string {\n  return srt.charAt(0).toUpperCase() + srt.slice(1);\n}\n\nexport function isClass(object: any) {\n  // TODO find a better way to distinguish Class and Function\n  return typeof object === 'function' && object.name && object.name.charAt(0) === object.name.charAt(0).toUpperCase();\n}\n","import {\n  defineGetter, Dict, forEach,\n} from '../scope';\nimport { GetComponentDataForModule } from './plugins/createModuleView';\n\n/**\n * Components use StateView to select reactive state and methods from modules\n * StateView keeps information for components about reactive and non-reactive data\n * It saves data snapshots for components and allow to compare them to detect changes\n */\nexport class StateView<TProps = {}> {\n\n  props: TProps = {} as TProps;\n  proxy: TProps;\n  descriptors = {} as TGetDescriptorsForProps<TProps>;\n  selectedDescriptors = {} as TGetDescriptorsForProps<TProps>;\n  hasReactiveProps = false;\n  hasSelectedProps = false;\n  hasWildcardProps = false;\n  wildcardPropCreator = null as null | ((propName: string) => unknown);\n\n  constructor() {\n    // create Proxy that should listen all reactive props that component requested during rendering\n    this.proxy = new Proxy(\n      {\n        __proxyName: 'StateViewProxy', // set proxy name for debugging\n        __target: this,\n      },\n      {\n        get: (target: any, propName: string) => {\n          if (propName === 'hasOwnProperty') return target.hasOwnProperty;\n          if (propName in target) return (target as any)[propName];\n          const value = this.selectValue(propName as keyof TProps);\n          return value;\n        },\n      },\n    ) as any;\n  }\n\n  /**\n   * Register a new property in the StateView instance\n   */\n  defineProp<TValue>(descriptorParams: TConstructDescriptorProps<TValue>) {\n    const descriptor: TModulePropDescriptor<TValue> = {\n      configurable: true,\n      enumerable: true,\n      reactive: false,\n      getRev: descriptorParams.getValue,\n      stateView: null,\n      dynamic: false,\n      description: '',\n      ...descriptorParams,\n    };\n    (this.descriptors as any)[descriptor.name] = descriptor;\n    if (descriptor.reactive) this.hasReactiveProps = true;\n    defineGetter(this.props as any, descriptor.name, () => descriptor.getValue());\n  }\n\n  /**\n   * Defile a wildcard property\n   * The wildcard property could be accessible without registration with `defineProp` method\n   */\n  defineWildcardProp(cb: StateView['wildcardPropCreator']) {\n    this.hasWildcardProps = true;\n    this.wildcardPropCreator = cb;\n  }\n\n  private selectValue(propName: keyof TProps) {\n    let descriptor = this.descriptors[propName];\n\n    if (!descriptor) {\n      if (!this.wildcardPropCreator) {\n        throw new Error(`Property ${propName} is not defined`);\n      }\n      this.wildcardPropCreator(propName as string);\n      descriptor = this.descriptors[propName];\n    }\n\n    if (descriptor.reactive) {\n      this.selectedDescriptors[propName] = descriptor;\n      if (!this.hasSelectedProps) this.hasSelectedProps = true;\n      if (descriptor.stateView) return descriptor.stateView.proxy;\n    }\n    return descriptor.getValue();\n  }\n\n  /**\n   * Create a snapshot with reactive data based on reactive props selected in a component\n   */\n  getSnapshot() {\n    const selectedDescriptors = this.selectedDescriptors;\n    const props = {} as TProps;\n\n    forEach(selectedDescriptors, (descr, propName) => {\n      let value: unknown;\n      if (descr.stateView) {\n        const getRev = (descr.stateView.descriptors as any).getRev;\n        if (getRev) {\n          value = getRev.getValue();\n        } else {\n          value = descr.stateView.getSnapshot();\n        }\n      } else {\n        value = descr.getRev();\n      }\n\n      (props as any)[propName] = value;\n    });\n    return props;\n  }\n\n  // select<TNewView extends StateView<any>>(newViewFactory: (props: TProps, view: StateView<TProps>) => TNewView): TNewView {\n  //   return newViewFactory(this.props, this);\n  // }\n\n  clone() {\n    const clone = new StateView<TProps>();\n    forEach(this.descriptors, descriptor => clone.defineProp(descriptor));\n    return clone;\n  }\n\n  mergeView<\n    TExtension extends StateView<any>,\n    TResult = ExtendView<TProps, TExtension>\n    >(extension: TExtension): TResult {\n    // merge one view into another\n    const mergeResult = this.clone();\n    forEach(extension.descriptors, descriptor => mergeResult.defineProp(descriptor as any));\n    return mergeResult as any as TResult;\n  }\n\n}\n\nexport type ExtendView<TBaseProps, TExtendedModule> = StateView<TBaseProps & GetComponentDataForModule<TExtendedModule>>;\n\nexport type TModulePropDescriptor<TValue> = {\n  name: string,\n  reactive: boolean,\n  description: string,\n  stateView: StateView | null,\n  getValue(): TValue,\n  getRev(): unknown, // used for fast comparison of complex object, use getValue() as default value\n  enumerable: boolean,\n  configurable: boolean,\n  dynamic: boolean,\n}\n\nexport type TConstructDescriptorProps<TValue, TDescriptor = TModulePropDescriptor<TValue>> = Partial<TDescriptor> & Required<Pick<TModulePropDescriptor<TValue>, 'name' | 'getValue'>>\nexport type TGetDescriptorsForProps<TProps extends Dict<any>> = {[P in keyof TProps]: TModulePropDescriptor<TProps[P]>}\nexport type GetProps<TModuleView> = TModuleView extends StateView<infer TProps> ? TProps : never;\n","import produce from 'immer';\nimport { createNanoEvents } from 'nanoevents';\nimport {\n  Scope,\n  generateId,\n  Dict,\n  defineGetter,\n  capitalize,\n  defineSetter,\n  PickFunctionProperties,\n} from '../scope';\nimport { parseStateConfig } from './parse-config';\nimport {\n  ArraySearchQuery, ArrayUpdateQuery, find, isSimilar, removeItems, updateItems,\n} from '../utils';\n\n/**\n * A centralised framework-agnostic store.\n * Data in this store is split by named states\n * Each module could inject multiple named states.\n * For better performance keep only reactive data in the store.\n *\n * All React related code should be handled in ReactAdapter\n */\nexport class Store {\n\n  // keeps the state for all modules here as a map of immutable objects\n  rootState = { } as Dict<any>;\n\n  // keeps additional metadata\n  modulesMetadata = { } as Dict<StatefulModuleMetadata>;\n\n  pendingMutations = 0;\n  moduleRevisions: Dict<number> = {};\n\n  createState<TConfigCreator>(moduleName: string, configCreator: TConfigCreator): GetStateControllerFor<TConfigCreator> {\n\n    if (this.modulesMetadata[moduleName] && this.modulesMetadata[moduleName]) {\n      throw new Error(`State with a name \"${moduleName}\" is already created`);\n    }\n\n    const config = parseStateConfig(configCreator);\n    const controller = new StateController(this, moduleName, config);\n    this.events.emit('onModuleCreated', controller);\n    return controller as GetStateControllerFor<TConfigCreator>;\n  }\n\n  dispatchMutation(mutation: Mutation) {\n    const moduleName = mutation.moduleName;\n    const metadata = this.modulesMetadata[moduleName];\n    if (!metadata) return; // state is destroyed\n\n    const stateController = this.modulesMetadata[moduleName].controller;\n\n    if (this.pendingMutations) {\n      throw new Error('Can not run mutation while previous mutation is not completed');\n    }\n\n    stateController.mutate(mutation);\n  }\n\n  destroyModule(moduleName: string) {\n    const metadata = this.modulesMetadata[moduleName];\n    metadata.subscriptions.forEach(unsub => unsub());\n    delete this.rootState[moduleName];\n    delete this.modulesMetadata[moduleName];\n    this.events.emit('onModuleDestroyed', moduleName);\n  }\n\n  recordingAccessors = 0;\n\n  affectedModules: Record<string, number> = {};\n\n  listenAffectedModules(cb: Function) {\n    this.recordingAccessors++;\n    cb();\n    const result = this.affectedModules;\n    this.recordingAccessors--;\n    if (!this.recordingAccessors) {\n      this.affectedModules = {};\n    }\n    return result;\n  }\n\n  currentContext: Record<string, Scope> = {};\n\n  setModuleContext(moduleName: string, scope: Scope) {\n    this.currentContext[moduleName] = scope;\n  }\n\n  resetModuleContext(moduleName: string) {\n    delete this.currentContext[moduleName];\n  }\n\n  getMetadata(moduleName: string) {\n    return this.modulesMetadata[moduleName];\n  }\n\n  getController(moduleName: string) {\n    return this.getMetadata(moduleName)?.controller;\n  }\n\n  events = createNanoEvents<StoreEvents>();\n}\n\nexport interface StoreEvents {\n  onModuleCreated: (controller: StateController<unknown>) => void;\n  onModuleDestroyed: (moduleName: string) => void;\n  onMutation: (mutation: Mutation | Function, moduleName: string) => void\n  onReadyToRender: () => void\n}\n\n/**\n * Controls a single named state\n */\nexport class StateController<TConfig = any> {\n\n  draftState: any = null;\n\n  constructor(\n    public store: Store,\n    public __moduleName: string,\n    config: TStateConfig,\n  ) {\n    const defaultState = config.state;\n\n    store.rootState[__moduleName] = { ...defaultState };\n\n    // create metadata\n    const controller = this;\n    const getters = {};\n    const metadata: StatefulModuleMetadata = {\n      moduleName: __moduleName,\n      config,\n      controller,\n      getters,\n      subscriptions: [],\n      isInitialized: false,\n      rev: 0,\n    };\n    store.modulesMetadata[__moduleName] = metadata;\n\n    // generate getters\n    Object.keys(defaultState).forEach(propName => {\n      const getter = () => (controller.state as any)[propName];\n      defineGetter(controller, propName, getter);\n      defineGetter(getters, propName, getter);\n      defineSetter(controller, propName, val => {\n        const changeIsAllowed = !metadata.isInitialized || controller.draftState;\n        if (!changeIsAllowed) {\n          console.error(`Failed to set \"${propName}\" with value`, val);\n          throw new Error('Changing state outside of mutation');\n        }\n        (controller.state as any)[propName] = val;\n        return true;\n      });\n    });\n\n    // create simple getters and setters from the state config\n    Object.keys(config.getters).forEach(propName => {\n      const getter = () => config.getters[propName].get.apply(controller);\n      defineGetter(controller, propName, getter);\n      defineGetter(getters, propName, getter);\n    });\n\n    // create getter methods\n    Object.keys(config.getterMethods).forEach(propName => {\n      defineGetter(controller, propName, () => (...args: any) => config.getterMethods[propName].apply(controller, args));\n    });\n\n    // create auto-generated mutations\n    Object.keys(defaultState).forEach(propertyName => {\n      const mutationName = `set${capitalize(propertyName)}`;\n      if (config.mutations[mutationName]) return;\n      const mutationMethod = (propVal: unknown) => (controller as any)[propertyName] = propVal;\n      controller.registerMutation(mutationName, mutationMethod);\n\n      // generate array helpers\n      if (!Array.isArray(defaultState[propertyName])) return;\n\n      // generate a \"push\" mutation\n      const pushMutationName = `push${capitalize(propertyName)}`;\n      if (!config.mutations[pushMutationName]) {\n        controller.registerMutation(pushMutationName, (newItem: unknown) => (controller as any)[propertyName].push(newItem));\n      }\n      // generate a \"remove\" mutation\n      const removeMutation = `remove${capitalize(propertyName)}`;\n      if (!config.mutations[removeMutation]) {\n        controller.registerMutation(removeMutation, (searchQuery: ArraySearchQuery<unknown>) => {\n          removeItems((controller as any)[propertyName], searchQuery);\n        });\n      }\n\n      // generate an \"update\" mutation\n      const updateMutation = `update${capitalize(propertyName)}`;\n      if (!config.mutations[updateMutation]) {\n        controller.registerMutation(\n          updateMutation,\n          (searchQuery: ArraySearchQuery<unknown>, updateFn: (item: unknown) => unknown) => {\n            updateItems((controller as any)[propertyName], searchQuery, updateFn);\n          },\n        );\n      }\n\n      // create a find getter\n      const findGetterName = `find${capitalize(propertyName)}`;\n      if (!config.getterMethods[findGetterName]) {\n        defineGetter(controller, findGetterName, () => (searchQuery: ArraySearchQuery<unknown>) => {\n          return find((controller as any)[propertyName], searchQuery);\n        });\n      }\n    });\n\n    // create default mutations\n    this.registerDefaultMutations();\n\n    // create other mutations\n    Object.keys(config.mutations).forEach(propName => {\n      this.registerMutation(propName, config.mutations[propName]);\n    });\n\n    // create change events for each getter\n    Object.keys(this.getters).forEach(getterName => {\n      const eventName = `on${capitalize(getterName)}Change`;\n      (this as any)[eventName] = (cb: (newVal: any, prevVal: any) => unknown, isEqual = isSimilar) => {\n        let prevVal = (this.getters as any)[getterName];\n        const unsubscribe = this.store.events.on('onMutation', () => {\n          const newVal = (this.getters as any)[getterName];\n          if (isEqual(newVal, prevVal)) return;\n          cb(newVal, prevVal);\n          prevVal = newVal;\n        });\n        this.getMetadata().subscriptions.push(unsubscribe);\n        return unsubscribe;\n      };\n    });\n\n  }\n\n  finishInitialization() {\n    // use immer to lock an immutable state\n    this.getMetadata().isInitialized = true;\n    this.store.rootState[this.__moduleName] = produce(this.store.rootState[this.__moduleName], () => {});\n  }\n\n  /**\n   * Register a named mutation in the store.\n   */\n  registerMutation(mutationName: string, mutationMethod: Function, mutationThisContext?: any) {\n    const controller = this;\n    const { store, __moduleName } = controller;\n    const moduleName = __moduleName;\n    const mutationContext = mutationThisContext || controller;\n\n    controller.getMetadata().config.mutations[mutationName] = mutationMethod;\n\n    // override the original Module method to dispatch mutations\n    (controller as any)[mutationName] = function (...args: any[]) {\n      // if this method was called from another mutation\n      // we don't need to dispatch a new mutation again\n      // just call the original method\n      if (controller.draftState) {\n        return mutationMethod.apply(mutationContext, args);\n      }\n\n      const mutation = {\n        id: Number(generateId()),\n        payload: args,\n        moduleName,\n        mutationName,\n        mutationContext,\n      };\n      store.dispatchMutation(mutation);\n    };\n  }\n\n  /**\n   * Execute mutation\n   * @param mutation a mutation function or Mutation object for a pre-registered named mutation\n   */\n  mutate(mutation: ((draft: this) => unknown) | Mutation) {\n    const moduleName = this.__moduleName;\n    const state = this.store.rootState[moduleName];\n    const mutationIsFunction = typeof mutation === 'function';\n    const metadata = this.getMetadata();\n    if (!metadata) return; // state is destroyed\n\n    if (!metadata.isInitialized) {\n      if (mutationIsFunction) {\n        mutation(this);\n      } else {\n        const mutationObj = mutation as Mutation;\n        const thisContext = mutationObj.mutationContext || this;\n        metadata.config.mutations[mutationObj.mutationName].apply(thisContext, mutationObj.payload);\n      }\n      return;\n    }\n\n    this.store.pendingMutations++;\n\n    try {\n      this.store.rootState[moduleName] = produce(state, (draft: unknown) => {\n        this.draftState = draft;\n        if (mutationIsFunction) {\n          mutation(this);\n          return;\n        }\n        const mutationObj = mutation as Mutation;\n        const thisContext = mutationObj.mutationContext || this;\n        metadata.config.mutations[mutationObj.mutationName].apply(thisContext, mutationObj.payload);\n      });\n    } catch (e) {\n      console.error('mutation failed', e);\n    } finally {\n      this.store.pendingMutations--;\n      this.getMetadata().rev++;\n      this.draftState = null;\n    }\n\n    this.store.events.emit('onMutation', mutation, moduleName);\n\n    if (!this.store.pendingMutations) {\n      this.store.events.emit('onReadyToRender');\n    }\n  }\n\n  private registerDefaultMutations() {\n    const controller = this;\n    const updateStateMutation = (statePatch: object) => Object.assign(controller, statePatch);\n    controller.registerMutation('update', updateStateMutation);\n  }\n\n  get state(): TStateFor<TConfig> {\n    if (this.draftState) return this.draftState;\n\n    const store = this.store;\n    const moduleName = this.__moduleName;\n\n    if (store.recordingAccessors) {\n      store.affectedModules[moduleName] = this.getMetadata().rev;\n    }\n\n    return store.rootState[moduleName];\n  }\n\n  getMetadata() {\n    return this.store.modulesMetadata[this.__moduleName];\n  }\n\n  // getSnapshot() {\n  //   const keys = Object.keys(this.store.rootState[this.__moduleName]);\n  //   const snapshot = {};\n  //   const state = this.state;\n  //   keys.forEach(key => snapshot[key] = )\n  //   return this.getMetadata().config.\n  // }\n\n  get getters(): TStateFor<TConfig> {\n    return this.getMetadata().getters as TStateFor<TConfig>;\n  }\n\n  waitFor(cb: () => boolean | any, waitOptions?: { timeout: number }) {\n    let isFound = cb();\n    if (isFound) return;\n\n    return new Promise<void>((resolve, reject) => {\n\n      const unsubscribe = this.store.events.on('onMutation', () => {\n        isFound = cb();\n        if (!isFound) return;\n        unsubscribe();\n        resolve();\n      });\n      this.getMetadata().subscriptions.push(unsubscribe);\n\n      if (waitOptions?.timeout) {\n        setTimeout(() => {\n          if (isFound) return;\n          unsubscribe();\n          reject(new Error('Store waiting timeout'));\n        }, waitOptions.timeout);\n      }\n    });\n\n  }\n\n}\n\nexport interface Mutation {\n  id: number;\n  moduleName: string;\n  mutationName: string;\n  mutationContext?: any;\n  payload: any;\n}\n\nexport type TStateConfigCreator = (new (...args: any) => TStateConfigDraft) | TStateConfigDraft\n\nexport type TStateConfig = {\n  state: any;\n  mutations: any;\n  getters: any;\n  getterMethods: any;\n  [key: string]: any;\n}\n\nexport type TStateConfigDraft = Partial<TStateConfig>\n\nexport interface StatefulModuleMetadata {\n  moduleName: string;\n  rev: number;\n  config: TStateConfig;\n  controller: StateController;\n  isInitialized: boolean;\n  getters: Dict<() => any>;\n  subscriptions: (() => unknown)[];\n}\n\nexport type TDraftConfigFor<TConfigCreator> =\n  TConfigCreator extends new (...args: any) => infer TDraftConfigFromConstructor ?\n    TDraftConfigFromConstructor :\n      TConfigCreator extends (...args: any) => infer TDraftConfigFromFunction ?\n        TDraftConfigFromFunction :\n          TConfigCreator;\n\nexport type TStateFor<TConfigCreator, TDraftConfig = TDraftConfigFor<TConfigCreator>> = TDraftConfig extends { state: infer TState } ? TState : WritablePart<TDraftConfig>;\n\nexport type PickMethods<\n  TDraftConfig,\n  TRootMethods = PickFunctionProperties<TDraftConfig>,\n  TExplicitGetters = TDraftConfig extends { getters: infer TGetters } ? TGetters : {},\n  TExplicitGetterMethods = TDraftConfig extends { getterMethods: infer TGetterMethods } ? TGetterMethods : {},\n  TExplicitMutations = TDraftConfig extends { mutations: infer TMutations } ? TMutations : {}\n  > = TRootMethods & TExplicitGetters & TExplicitGetterMethods & TExplicitMutations;\n\nexport type GetHeuristicGetterName<TPropName> = TPropName extends string ? `${'get'|'is'|'should'|'will'}${Capitalize<TPropName>}` : never;\n\nexport type PickHeuristicGetters<TDraftConfig> = {\n  [K in keyof TDraftConfig as GetHeuristicGetterName<K>]: (value: TDraftConfig[K]) => unknown\n}\n\nexport type GetStateControllerFor<\n  TConfigCreator,\n  TDraftConfig = TDraftConfigFor<TConfigCreator>,\n  TState = PickDefaultState<TDraftConfig>,\n> =\n  StateController<TConfigCreator> &\n  TState &\n  Omit<PickAutogeneratedMutations<TState>, keyof PickMethods<TDraftConfig>> &\n  PickAutogeneratedPushMutations<TConfigCreator> &\n  PickAutogeneratedUpdateMutations<TConfigCreator> &\n  PickAutogeneratedRemoveMutations<TConfigCreator> &\n  PickAutogeneratedFindGetters<TConfigCreator> &\n  PickDefaultMutations<TState> &\n  PickAutogeneratedEvents<TConfigCreator> &\n  PickMethods<TDraftConfig> &\n  Exclude<TDraftConfig, keyof TStateConfig>\n\nexport type TStateViewForStateConfig<TConfigCreator> = Omit<GetStateControllerFor<TConfigCreator>, 'state'>;\n\nexport type GetSetterName<TPropName> = TPropName extends string ? `set${Capitalize<TPropName>}` : never;\n\nexport type PickDefaultState<TDraftConfig> = TDraftConfig extends { state: infer TState } ? TState : WritablePart<TDraftConfig>;\n\nexport type PickAutogeneratedMutations<TState> = {\n  [K in keyof TState as GetSetterName<K>]: (value: TState[K]) => unknown\n}\n\nexport type GetChangeEventName<TPropName> = TPropName extends string ? `on${Capitalize<TPropName>}Change` : never;\nexport type PickAutogeneratedEvents<TConfigCreator, TState = TStateFor<TConfigCreator>> = {\n  [K in keyof TState as GetChangeEventName<K>]: (cb: (newValue: TState[K], prevValue: TState[K]) => unknown) => () => unknown;\n}\n\nexport type GetPushMutationName<TPropName> = TPropName extends string ? `push${Capitalize<TPropName>}` : never;\nexport type PickAutogeneratedPushMutations<TConfigCreator, TState = TStateFor<TConfigCreator>> = {\n  [K in keyof TState as GetPushMutationName<K>]: TState[K] extends Array<infer TItem> ? (newItem: TItem) => void : never;\n}\n\nexport type GetRemoveMutationName<TPropName> = TPropName extends string ? `remove${Capitalize<TPropName>}` : never;\nexport type PickAutogeneratedRemoveMutations<TConfigCreator, TState = TStateFor<TConfigCreator>> = {\n  [K in keyof TState as GetRemoveMutationName<K>]: TState[K] extends Array<infer TItem> ? (searchQuery: ArraySearchQuery<TItem>) => void : never;\n}\n\nexport type GetUpdateMutationName<TPropName> = TPropName extends string ? `update${Capitalize<TPropName>}` : never;\nexport type PickAutogeneratedUpdateMutations<TConfigCreator, TState = TStateFor<TConfigCreator>> = {\n  [K in keyof TState as GetUpdateMutationName<K>]: TState[K] extends Array<infer TItem> ? (searchQuery: ArraySearchQuery<TItem>, updateQuery: ArrayUpdateQuery<TItem>) => void : never;\n}\n\nexport type GetFindGetterName<TPropName> = TPropName extends string ? `find${Capitalize<TPropName>}` : never;\nexport type PickAutogeneratedFindGetters<TConfigCreator, TState = TStateFor<TConfigCreator>> = {\n  [K in keyof TState as GetFindGetterName<K>]: TState[K] extends Array<infer TItem> ? (searchQuery: ArraySearchQuery<TItem>) => TItem | undefined : never;\n}\n\n\nexport type PickDefaultMutations<TState> = {\n  update(patch: Partial<TState>): unknown;\n}\n\n// Create a WritablePart helper\n// https://github.com/Microsoft/TypeScript/issues/27024#issuecomment-421529650\nexport type IfEquals<X, Y, A, B> =\n  (<T>() => T extends X ? 1 : 2) extends\n    (<T>() => T extends Y ? 1 : 2) ? A : B;\n\ntype WritableKeysOf<T> = {\n  [P in keyof T]: IfEquals<{ [Q in P]: T[P] }, { -readonly [Q in P]: T[P] }, P, never>\n}[keyof T];\n\nexport type WritablePart<T> = Pick<T, WritableKeysOf<T>>;\n","export * from './Store';\r\nexport * from './StateView';\r\nexport * from './plugins';\r\nexport * from './parse-config';\r\n","import { Dict, isClass } from '../scope';\nimport { traverse } from '../utils';\nimport { TStateConfig } from './Store';\n\n/**\n * Generate a unified state config from a configCreator object\n */\nexport function parseStateConfig<TConfigDraft>(configCreator: TConfigDraft | (new (...args: any) => TConfigDraft) | ((...args: any) => TConfigDraft)): TStateConfig {\n  let configDraft: any;\n\n  if (isClass(configCreator)) {\n    configDraft = new (configCreator as any)();\n  } else if (typeof configCreator === 'function') {\n    configDraft = (configCreator as Function)();\n  } else {\n    configDraft = configCreator;\n  }\n\n  const config: TStateConfig = {\n    state: {},\n    getters: {},\n    getterMethods: {},\n    mutations: {},\n  };\n\n  config.state = parseDefaultState(configDraft);\n\n  // parse explicit getters\n  const explicitGetters = configDraft.getters;\n  if (explicitGetters) {\n    traverse(explicitGetters, (propName, descriptor) => {\n      if (descriptor.get) {\n        config.getters[propName] = descriptor;\n        return;\n      }\n\n      const getterMethod = explicitGetters[propName];\n      if (typeof getterMethod !== 'function') return;\n\n      config.getterMethods[propName] = explicitGetters[propName];\n    });\n  }\n\n  // parse heuristic getters\n  if (configDraft) {\n    traverse(configDraft, (propName, descriptor) => {\n\n      if (descriptor.get) {\n        config.getters[propName] = descriptor;\n        return;\n      }\n\n      const getterMethod = configDraft[propName];\n      if (typeof getterMethod !== 'function') return;\n\n      const isValidGetterName = (\n        propName.startsWith('get')\n        || propName.startsWith('is')\n        || propName.startsWith('should')\n      );\n\n      if (!isValidGetterName) return;\n\n      config.getterMethods[propName] = configDraft[propName];\n    });\n  }\n\n  // parse mutations\n  traverse(configDraft, (propName, descriptor) => {\n    if (descriptor.get) return;\n    if (propName in config.getterMethods) return;\n    const method = configDraft[propName];\n\n    if (typeof method !== 'function') return;\n\n    config.mutations[propName] = configDraft[propName];\n  });\n\n  return config;\n}\n\nfunction parseDefaultState(target: any) {\n  const defaultState: Dict<string> = {};\n  // if the `state` variable is set in the config, then pick the default state from it\n  if (target.state) {\n    traverse(target.state, (propName, descr) => {\n      defaultState[propName] = target.state[propName];\n    });\n  } else {\n    traverse(target, (propName, descr) => {\n      if (descr.get) return;\n      const propVal = descr.value;\n      if (typeof propVal === 'function') return;\n      defaultState[propName] = propVal;\n    });\n  }\n  return defaultState;\n}\n","import { StateView } from '../StateView';\nimport { GetMerge, traverse } from '../../utils';\nimport {\n  Dict,\n  Flatten,\n  forEach, getInstanceMetadata,\n  GetModuleInstanceFor,\n  InjectableModuleTyped,\n  moduleSystemProps,\n  Provider,\n} from '../../scope';\n\n/**\n * Create a StateView instance and register props from the given module in that StateView\n * @param module\n */\nexport function createModuleView<TModule>(module: TModule): GetModuleStateView<TModule> {\n\n  let view = new StateView();\n\n  const injectedProps: Dict<boolean> = {};\n  const moduleProvider = getInstanceMetadata(module).provider;\n\n  // find and register props for injected modules\n  traverse(module as any as object, (propName, descr) => {\n    if (moduleSystemProps[propName]) return;\n    if (descr.get) return;\n\n    // consider that the property contains an injectable module if it has a \"__provider\" value\n    const provider = descr.value?.__provider as Provider<any>;\n    if (!(provider instanceof Provider)) return;\n\n    if (provider) {\n\n      // mark the prop as injectable\n      injectedProps[propName] = true;\n\n      // take the module instance\n      const injectedModule = provider.instance as InjectableModuleTyped<any, any, any>;\n\n      // take the value that should be injected as property for the parent module\n      const injectedValue = injectedModule.exportInjectorValue ? injectedModule.exportInjectorValue() : injectedModule;\n\n      // take the value that should be injected as property for the component's selector\n      const selectorValue = injectedModule.exportSelectorValue && injectedModule.exportSelectorValue();\n\n      // take other(extra) props we should export to the component's selector\n      const selectorExtraValues = injectedModule.exportSelectorExtraValues && injectedModule.exportSelectorExtraValues();\n\n      const selfProps = selectorValue || injectedValue;\n\n      // register extra props in the StateView\n      const extraProps = selectorExtraValues;\n      if (extraProps) {\n        const extraPropsView = extraProps as StateView<any>;\n        forEach(extraPropsView.descriptors, (descriptor, p) => {\n          if (!(descriptor.name in injectedModule)) view.defineProp(descriptor);\n        });\n        view = view.mergeView(extraProps as any);\n      }\n\n      // register exposed props\n      const injectorOptions = moduleProvider.injectedModules[provider.name].options;\n      if (injectorOptions?.isExposed && selfProps) {\n        const exposedProps = createModuleView(selfProps) as StateView<any>;\n        forEach(exposedProps.descriptors, (descriptor, p) => {\n          if (!(descriptor.name in injectedModule)) view.defineProp(descriptor);\n        });\n        view = view.mergeView(exposedProps as any);\n      }\n\n      // register extra injected value in the StateView\n      if (selfProps) {\n        view.defineProp({\n          description: 'InjectorView',\n          name: propName,\n          reactive: true,\n          stateView: selfProps instanceof StateView ? selfProps : null,\n          getValue() {\n            return injectedValue;\n          },\n        });\n      }\n    }\n  });\n\n  // register other module props\n  traverse(module as any as object, (propName, descr) => {\n    if (injectedProps[propName]) return;\n    if (moduleSystemProps[propName]) return;\n\n    // register getters/computed values\n    // getters are reactive and will be recalculated when sate changed\n    if (descr.get) {\n      view.defineProp({\n        description: 'ModuleGetter',\n        reactive: true,\n        name: propName,\n        getValue: () => (module as any)[propName],\n      });\n      return;\n\n    }\n\n    // register methods\n    if (typeof descr.value === 'function') {\n      view.defineProp({\n        description: 'ModuleMethod',\n        reactive: false,\n        name: propName,\n        getValue: () => descr.value.bind(module),\n      });\n      return;\n    }\n\n    // register simple module variables\n    // these variables are not reactive and changing them will not re-render components\n    // these variables could be used instead React 'refs'\n    view.defineProp({\n      description: 'ModuleVariable',\n      reactive: false,\n      name: propName,\n      getValue: () => (module as any)[propName],\n    });\n\n  });\n\n  return view as any;\n}\n\nexport type GetModuleSelectorValue<\n  TModuleConfig, TModule = GetModuleInstanceFor<TModuleConfig>\n  > = TModule extends { exportSelectorValue: () => StateView<infer TView> } ? TView : {}\n\nexport type GetModuleExtraValue<\n  TModuleConfig, TModule = GetModuleInstanceFor<TModuleConfig>\n  > = TModule extends { exportExtraSelectorValues: () => StateView<infer TView> } ? TView : {}\n\nexport type GetComponentDataForModule<\n  TModuleConfig,\n  TModule = GetModuleInstanceFor<TModuleConfig>,\n  TSelectorExport = GetModuleSelectorValue<TModuleConfig>,\n  TSelectorExtraExport = GetModuleExtraValue<TModuleConfig>,\n  TInjectedProps = TModule extends { exportSelectorValue: () => any } ? {} : GetAllInjectedProps<TModule> & Omit<TModule, keyof GetInjectedProps<TModule>>\n  > = GetMerge<TSelectorExtraExport, TSelectorExport & TInjectedProps>;\n\nexport type GetModuleStateView<TModuleConfig> = StateView<GetComponentDataForModule<TModuleConfig>>;\n\nexport type GetInjectedPropName<TModule, TProp extends keyof TModule> = TModule[TProp] extends { __injector: InjectableModuleTyped<any, any, any>} ? TProp : never;\nexport type GetInjectedExtraPropName<TModule, TProp extends keyof TModule> = TModule[TProp] extends { __injector: InjectableModuleTyped<any, any, infer TExtraProps>} ? TExtraProps extends StateView ? TProp : never : never;\n\nexport type GetInjectedProps<TModule> = {[K in keyof TModule as GetInjectedPropName<TModule, K>]: TModule[K] extends { __injector: InjectableModuleTyped<any, StateView<infer TInjectorView>, any>} ? TInjectorView: never }\nexport type GetExtraInjectedProps<TModule> = {[K in keyof TModule as GetInjectedExtraPropName<TModule, K>]: TModule[K] extends { __injector: InjectableModuleTyped<any, any, StateView<infer TExtraProps>>} ? TExtraProps: never }\nexport type GetFlattenExtraProps<TModule> = keyof GetExtraInjectedProps<TModule> extends never ? {} : Flatten<GetExtraInjectedProps<TModule>>\nexport type GetAllInjectedProps<TModule> = GetMerge<GetFlattenExtraProps<TModule>, GetInjectedProps<TModule>>;\n","import { StateView } from '../StateView';\nimport { traverse } from '../../utils';\nimport { StateController } from '../Store';\n\n/**\n * Create a StateView object for a StateController\n * The StateView object provides data that could be selected in components.\n * These data could be reactive, non-reactive and includes mutations and functions\n */\nexport function createStateView(controller: StateController) {\n  const config = controller.getMetadata().config;\n  const view = new StateView();\n\n  // define state revision getter\n  // state revisions helps to compare 2 snapshots from the same state source without expensive state traversing\n  view.defineProp({\n    description: 'StateRev',\n    name: 'getRev',\n    reactive: true,\n    getValue: () => {\n      // eslint-disable-next-line no-unused-expressions\n      controller.state; // read as reactive\n      return controller.getMetadata().rev;\n    },\n  });\n\n  // define a \"state\" getter that links state to itself\n  traverse(config.state, stateKey => {\n    view.defineProp({\n      description: 'StateProp',\n      name: stateKey,\n      reactive: true,\n      getValue: () => (controller as any)[stateKey],\n    });\n  });\n\n  // expose mutations for a component\n  traverse(config.mutations, stateKey => {\n    view.defineProp({\n      description: 'StateMutation',\n      name: stateKey,\n      reactive: false,\n      getValue: () => (controller as any)[stateKey],\n    });\n  });\n\n  // expose state getters(computed values) for a component\n  traverse(config.getters, (propName) => {\n    view.defineProp({\n      description: 'StateGetter',\n      name: propName,\n      reactive: true,\n      getValue: () => (controller as any)[propName],\n    });\n  });\n\n  // expose state getter methods\n  traverse(config.getterMethods, (propName) => {\n    view.defineProp({\n      description: 'StateGetterMethod',\n      name: propName,\n      reactive: false,\n      getValue: () => (controller as any)[propName],\n    });\n  });\n\n  return view;\n}\n","export * from './createModuleView';\r\nexport * from './createStateView';\r\nexport * from './inject-child';\r\nexport * from './inject-form';\r\nexport * from './inject-query';\r\nexport * from './inject-state';\r\nexport * from './inject-watch';\r\n","import {\n  InjectedProp, injectProvider,\n} from '../../scope/injector';\n\nimport { GetModuleInstanceFor } from '../../scope';\nimport { GetModuleExtraValue, GetModuleStateView } from './createModuleView';\n\nexport type GetModuleInjectorValue<TModuleConfig> = GetModuleInstanceFor<TModuleConfig> extends { exportInjectorValue: (...args: any) => infer TValue } ? TValue : GetModuleInstanceFor<TModuleConfig>;\n\n/**\n * Inject module as a child module\n * The child module will be initialized and destroyed with a parent module\n */\nexport function injectChild<TModule>(Module: TModule, ...args: any): InjectedProp<GetModuleInjectorValue<TModule>, GetModuleStateView<TModule>, GetModuleExtraValue<TModule>> {\n  const provider = injectProvider();\n  const injectedValue = provider.injectChildModule(Module, ...args);\n  return injectedValue;\n}\n","import { StateView } from '../StateView';\r\nimport { InjectableModule, InjectedProp } from '../../scope';\r\nimport { injectChild } from './inject-child';\r\n\r\n/**\r\n * Injects an stateful module that helps to link a reactive data with form input components\r\n */\r\nexport function injectFormBinding<TState, TExtraProps = {}>(\r\n  stateGetter: TState | (() => TState),\r\n  stateSetter: (statePatch: Partial<TState>) => unknown,\r\n  extraPropsGenerator?: (fieldName: keyof TState) => TExtraProps,\r\n): GetInjectedFormBinding<TState, TExtraProps> {\r\n  return injectChild(FormBindingModule, stateGetter, stateSetter, extraPropsGenerator) as any;\r\n}\r\n\r\n/**\r\n * Creates a StateView for a component that helps to link a reactive data with form input components\r\n */\r\nexport function createFormBinding<TState, TExtraProps = {}>(\r\n  stateGetter: TState | (() => TState),\r\n  stateSetter: (statePatch: Partial<TState>) => unknown,\r\n  extraPropsGenerator?: (fieldName: keyof TState) => TExtraProps,\r\n): StateView<TFormBindings<TState, TExtraProps>> {\r\n\r\n  function getState(): TState {\r\n    if (typeof stateGetter === 'function') return (stateGetter as Function)();\r\n    return stateGetter;\r\n  }\r\n\r\n  const stateView = new StateView<TFormBindings<TState, TExtraProps>>();\r\n\r\n  stateView.defineProp({\r\n    description: 'FormStateRev',\r\n    name: 'getRev',\r\n    getValue: () => ({ ...getState() }),\r\n  });\r\n\r\n  stateView.defineWildcardProp(propName => {\r\n    stateView.defineProp({\r\n      description: 'FormInputBinding',\r\n      name: propName,\r\n      reactive: true,\r\n      getValue: () => ({\r\n        name: propName,\r\n        value: (getState() as any)[propName],\r\n        onChange: (newVal: unknown) => {\r\n          (stateSetter as any)({ [propName]: newVal });\r\n        },\r\n        ...(extraPropsGenerator ? extraPropsGenerator(propName as keyof TState) : {}),\r\n      }),\r\n    });\r\n  });\r\n\r\n  return stateView;\r\n}\r\n\r\n// TODO fix types\r\nexport class FormBindingModule implements InjectableModule {\r\n\r\n  formBinding: any;\r\n\r\n  constructor(stateGetter: any, stateSetter: any, extraPropsGenerator: any) {\r\n    this.formBinding = createFormBinding(stateGetter, stateSetter, extraPropsGenerator);\r\n  }\r\n\r\n  exportSelectorValue() {\r\n    return this.formBinding;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport type TFormBindings<TState, TExtraProps = {}> = {\r\n  [K in keyof TState]: {\r\n    name: K;\r\n    value: TState[K];\r\n    onChange: (newVal: TState[K]) => unknown;\r\n  };\r\n} & TExtraProps\r\n\r\n\r\nexport type GetInjectedFormBinding<TState, TExtraProps = {}> = InjectedProp<FormBindingModule, StateView<TFormBindings<TState, TExtraProps>>, null>\r\n","import { generateId, InjectableModule, injectProvider } from '../../scope';\nimport { TStateViewForStateConfig } from '../Store';\nimport { StateView } from '../StateView';\nimport { injectState } from './inject-state';\nimport { injectWatch } from './inject-watch';\nimport { injectChild } from './inject-child';\nimport { createStateView } from './createStateView';\n\n/**\n * Injects DataQuery\n * Inspired by https://react-query.tanstack.com/reference/useQuery\n */\nexport function injectQuery<TQueryArgs extends QueryArgs>(...args: TQueryArgs) {\n  return injectChild(QueryModule as any as QueryModule<TQueryArgs>, ...args);\n}\n\n/**\n * Describes a reactive state for DataQuery\n */\nexport class QueryStateConfig<TData, TParams, TError> {\n\n  state: QueryState<TData, TParams, TError> = {\n    /**\n     * current status of the DataQuery\n     */\n    status: 'idle' as QueryStatus,\n    /**\n     * keeps fetched data on success\n     */\n    data: null as unknown as TData,\n    /**\n     * keeps error on fail\n     */\n    error: null as unknown as TError,\n\n    // TODO: remove from state\n    params: null as unknown as TParams,\n  };\n\n  // define state mutations\n\n  setData(data: TData) {\n    this.state.status = 'success';\n    this.state.data = data;\n  }\n\n  setError(error: TError) {\n    this.state.status = 'error';\n    this.state.error = error;\n  }\n\n  // define state getters\n\n  get isLoading() {\n    return this.state.status === 'loading';\n  }\n}\n\n/**\n * A stateful module for working with DataQueries\n * Inspired by https://react-query.tanstack.com/\n */\nexport class QueryModule<\n  TConstructorArgs extends Array<any>,\n  TData = GetQueryData<TConstructorArgs>,\n  TParams = GetQueryParams<TConstructorArgs>,\n  TError = unknown,\n  > implements InjectableModule {\n\n  // create a reactive state for this module\n  state = injectState(QueryStateConfig);\n  provider = injectProvider();\n\n  // re-fetch query if params changed\n  watcher = injectWatch(() => this.getParams(), this.refetch);\n\n  // keep current fetching promise to avoid redundant fetches\n  fetchingPromise: Promise<TData> | null = null;\n  promiseId = '';\n\n  // if enabled=false then no callbacks will be executed when fetching finished\n  enabled = true;\n\n  // keeps settings, such as \"onSuccess\" for the current query\n  options: QueryOptions;\n  isInitialFetch = true;\n\n  // provides reactive data for selecting in components\n  queryView!: StateView<TStateViewForStateConfig<QueryStateConfig<TData, TParams, TError>> & { refetch: () => Promise<TData>}>;\n\n  constructor(...args: TConstructorArgs) {\n    // create initial options based on passed args\n    const computedOptions = getQueryOptionsFromArgs(args);\n    const options = {\n      enabled: true,\n      params: null,\n      initialData: [],\n      getParams: null,\n      fetch: () => {},\n      onSuccess: () => {},\n      onError: () => {},\n      ...computedOptions,\n    };\n\n    this.options = options;\n    this.enabled = !!options.enabled;\n  }\n\n  init() {\n    // define methods available in components\n    const queryMethods = new StateView();\n    queryMethods.defineProp({\n      description: 'QueryMethod',\n      name: 'refetch',\n      reactive: false,\n      getValue: () => {\n        return () => this.refetch();\n      },\n    });\n    const stateView = createStateView(this.state) as any;\n    this.queryView = stateView.mergeView(queryMethods);\n    const data = this.options.initialData;\n    this.state.update({\n      params: this.getParams(),\n      data,\n    });\n    this.exec();\n  }\n\n  /**\n   * Start fetching if not started yet and return fetching promise\n   */\n  exec(): Promise<TData> {\n    if (this.fetchingPromise) return this.fetchingPromise;\n    return this.fetch();\n  }\n\n  /**\n   * Start fetching\n   * You most likely should call \".exec()\" instead this method to avoid redundant fetching\n   */\n  fetch(): Promise<TData> {\n    let fetchResult: any;\n\n    if (this.thisContext) {\n      fetchResult = this.options.fetch.call(this.thisContext, this.getParams());\n    } else {\n      fetchResult = this.options.fetch(this.getParams());\n    }\n\n    if (fetchResult?.then) {\n      if (this.isInitialFetch) {\n        this.state.setStatus('loading');\n        this.isInitialFetch = false;\n      } else {\n        this.state.setStatus('loading');\n      }\n      const promiseId = generateId();\n      this.promiseId = promiseId;\n      this.fetchingPromise = fetchResult;\n      return fetchResult.then((data: TData) => {\n        if (!this.enabled || this.promiseId !== promiseId) return;\n        this.fetchingPromise = null;\n        this.promiseId = '';\n        this.state.setData(data);\n      })\n        .catch((e: unknown) => {\n          if (!this.enabled || this.promiseId !== promiseId) return;\n          this.fetchingPromise = null;\n          this.promiseId = '';\n          this.state.setError(e as any);\n          this.options.onError && this.options.onError();\n        });\n    }\n    // result is not a promise, set the data\n    this.state.setData(fetchResult);\n    this.options.onSuccess && this.options.onSuccess();\n\n    return Promise.resolve(fetchResult);\n  }\n\n  /**\n   * Returns \"this\" context for the \"getParams()\" callback\n   * QueryModule usually injected as a child module via `injectQuery`\n   * So take \"this\" context of the parent module\n   */\n  get thisContext() {\n    const parentProvider = this.provider.options.parentProvider;\n    if (parentProvider) {\n      return parentProvider.instance;\n    }\n  }\n\n  /**\n   * Call the \"getParams\" callback\n   * Query will be re-fetched if params changed\n   */\n  getParams(): TParams {\n    if (!this.options.getParams) return null as any;\n    if (this.thisContext) {\n      return this.options.getParams.call(this.thisContext);\n    }\n\n    return this.options.getParams();\n  }\n\n  refetch() {\n    if (!this.enabled) return;\n    this.stopFetching();\n    return this.fetch();\n  }\n\n  stopFetching() {\n    this.fetchingPromise = null;\n    this.promiseId = '';\n  }\n\n  setEnabled(enabled: boolean) {\n    this.enabled = enabled;\n  }\n\n  destroy() {\n    // prevent unfinished fetching\n    this.setEnabled(false);\n  }\n\n  /**\n   * Export data and methods for a component selector\n   */\n  exportSelectorValue() {\n    return this.queryView;\n  }\n}\n\nexport type QueryRequiredOptions = {\n  fetch: (...args: any) => any,\n}\n\nexport type QueryOptionalOptions = {\n  enabled: boolean,\n  initialData: any,\n  getParams: (() => any) | null,\n  onSuccess: (() => any) | null,\n  onError: (() => any) | null,\n}\n\nexport type QueryOptions = QueryOptionalOptions & QueryRequiredOptions;\nexport type QueryConstructorOptions = QueryRequiredOptions & Partial<QueryOptionalOptions>\n\nexport type QueryState<TData, TParams, TError> = {\n  status: QueryStatus,\n  data: TData,\n  params: TParams,\n  error: TError,\n}\n\ntype QueryStatus = 'idle' | 'loading' | 'error' | 'success'\n\nexport type QueryArgs = [QueryConstructorOptions] | [(...any: any) => any] | [any, (...any: any) => any] | [any, (...any: any) => any, (...any: any) => any];\n\n/**\n * converts Query constructor agrs to QueryOptions\n * @param args\n */\nexport function getQueryOptionsFromArgs<TQueryArgs extends Array<any>, TResult = GetQueryOptions<TQueryArgs>>(args: TQueryArgs): TResult {\n  if (args.length === 1) {\n    const arg = args[0];\n    if (typeof arg === 'function') {\n      return {\n        fetch: arg,\n      } as any as TResult;\n    }\n    return arg;\n  }\n\n  if (args.length === 2) {\n\n    if (typeof args[0] === 'function') {\n      return {\n        fetch: args[0],\n        getParams: args[1],\n      } as any as TResult;\n    }\n\n    return {\n      initialData: args[0],\n      fetch: args[1],\n    } as any as TResult;\n\n  }\n\n  return {\n    initialData: args[0],\n    fetch: args[1],\n    getParams: args[2],\n  } as any as TResult;\n}\n\nexport type GetQueryData<TQueryArgs> = GetQueryDataTypeFromOptions<GetQueryOptions<TQueryArgs>>\nexport type GetQueryParams<TQueryArgs> = GetQueryParamsTypeFromOptions<GetQueryOptions<TQueryArgs>>\n\nexport type GetQueryDataTypeFromOptions<TQueryOptions> =\n  TQueryOptions extends { initialData: infer TInitialData } ?\n    TInitialData extends never[] ?\n      GetDataTypeFromFetchType<TQueryOptions> :\n        TInitialData:\n          GetDataTypeFromFetchType<TQueryOptions>\n\nexport type GetQueryParamsTypeFromOptions<TQueryOptions> = TQueryOptions extends { getParams: (...args: any) => infer TParams } ? TParams : never;\n\nexport type GetDataTypeFromFetchType<TQueryOptions> = TQueryOptions extends { fetch: (...args: any) => infer TFunctionResult } ?\n  TFunctionResult extends Promise<infer TPromiseData> ?\n    TPromiseData :\n      TFunctionResult:\n        never;\n\nexport type GetQueryOptions<TQueryArgs> =\n  TQueryArgs extends [infer arg1, infer arg2, infer arg3] ?\n    GetQueryOptionsFor3Args<arg1, arg2, arg3> :\n    TQueryArgs extends [infer arg1, infer arg2] ?\n      GetQueryOptionsFor2Args<arg1, arg2> :\n        TQueryArgs extends [infer arg1] ?\n          GetQueryOptionsFor1Arg<arg1> :\n           GetQueryOptionsFor1Arg<TQueryArgs>;\n\nexport type GetQueryOptionsFor3Args<TInitialData, TFetch, TGetProps> = {\n  fetch: TFetch,\n  initialData: TInitialData,\n  getProps: TGetProps\n}\n\nexport type GetQueryOptionsFor2Args<Arg1, Arg2> = Arg1 extends (...args: any) => any ? {\n  fetch: Arg1,\n  getParams: Arg2,\n} : {\n  initialData: Arg1,\n  fetch: Arg2\n}\n\nexport type GetQueryOptionsFor1Arg<Arg> = Arg extends (...args: any) => any ?\n  { fetch: Arg } :\n  Arg;\n","import {\n  defineGetter, inject, InjectableModule,\n  InjectedProp,\n  injectProvider,\n} from '../../scope';\n\nimport {\n  Store, TStateConfigCreator, GetStateControllerFor, TStateFor, TStateViewForStateConfig,\n} from '../Store';\nimport { StateView } from '../StateView';\nimport { injectChild } from './inject-child';\nimport { GetInjectedFormBinding, injectFormBinding, TFormBindings } from './inject-form';\nimport { createStateView } from './createStateView';\n\n/**\n * Injects a reactive stateful module\n * Stateful modules helps to keep UI updated with the state\n * @param configCreator state config. Can be Object or Class\n * @param allowMutationDecorators  methods marked with the @mutation() in the parent module will be registered as mutations\n * @param onCreate callback that should be called when state is registered in the state manager\n */\nexport function injectState<\n  TConfigCreator extends TStateConfigCreator,\n  TValue = GetStateControllerFor<TConfigCreator>,\n  TViewValue = GetStateViewFor<TConfigCreator>,\n>(\n  configCreator: TConfigCreator,\n  allowMutationDecorators = true,\n  onCreate?: (statefulModule: StatefulModule<TConfigCreator>) => unknown,\n): InjectedProp<TValue, TViewValue, TViewValue> {\n  return injectChild(StatefulModule, configCreator, allowMutationDecorators, onCreate) as any as InjectedProp<TValue, TViewValue, TViewValue>;\n}\n\nexport class StatefulModule<TStateConfig> implements InjectableModule {\n\n  store = inject(Store);\n  provider = injectProvider();\n  stateController!: GetStateControllerFor<TStateConfig>;\n  stateView!: GetStateViewFor<TStateConfig>;\n  formBinding: GetInjectedFormBinding<TStateFor<TStateConfig>>;\n\n  constructor(public stateConfig: TStateConfig, public allowMutationDecorators = true, public onCreate?: (module: StatefulModule<TStateConfig>) => unknown) {\n\n    const moduleName = this.moduleName;\n    this.stateController = this.store.createState(moduleName, this.stateConfig);\n    this.formBinding = injectFormBinding(() => this.stateController.getters, patch => this.stateController.update(patch));\n    // TODO find better solution for injecting the provider\n    defineGetter(this.stateController, '__provider', () => this.provider, { enumerable: false });\n\n  }\n\n  init() {\n    const parentProvider = this.provider.options.parentProvider;\n    if (!parentProvider) {\n      throw new Error('StatefulModule module should be injected');\n    }\n    // register methods marked with the @mutation() decorators\n    if (this.allowMutationDecorators && parentProvider) {\n      const parentModule = parentProvider.instance;\n      const mutations: string[] = parentProvider.creator?.prototype?.__mutations || [];\n      mutations.forEach(mutationName => {\n        const mutation = parentModule[mutationName];\n        this.stateController.registerMutation(mutationName, mutation, parentModule);\n        parentModule[mutationName] = (...args: any) => (this.stateController as any)[mutationName](...args);\n      });\n\n      parentProvider.events.on('onAfterInit', () => {\n        this.stateController.finishInitialization();\n      });\n    }\n\n    this.stateView = createStateView(this.stateController) as any;\n    this.stateView.defineProp({\n      description: 'StateFormBinding',\n      name: 'bind',\n      reactive: true,\n      stateView: this.formBinding.formBinding,\n      getValue: () => {\n        return this.formBinding.formBinding;\n      },\n    });\n    this.onCreate && this.onCreate(this);\n  }\n\n  get moduleName() {\n    return this.provider.id;\n  }\n\n  destroy() {\n    this.store.destroyModule(this.moduleName);\n  }\n\n  exportInjectorValue() {\n    return this.stateController;\n  }\n\n  exportSelectorValue() {\n    return this.stateView;\n  }\n\n  exportSelectorExtraValues() {\n    return this.stateView;\n  }\n}\n\n/**\n * A decorator that registers the object method as an mutation\n */\nexport function mutation() {\n  return function (target: any, methodName: string) {\n    target.__mutations = target.__mutations || [];\n    // mark the method as an mutation\n    target.__mutations.push(methodName);\n  };\n}\n\nexport type GetStateViewFor<TStateConfig> = StateView<TStateViewForStateConfig<TStateConfig> & { bind: TFormBindings<TStateFor<TStateConfig>>}>;\n","import { inject, getInstanceMetadata, InjectableModule } from '../../scope';\n\nimport {\n  Store,\n} from '../Store';\nimport { isSimilar } from '../../utils';\nimport { injectChild } from './inject-child';\n\n/**\n * Creates a watcher that call a callback on state change\n * @param expression a function that returns a piece of state to compare. The source of state should be reactive\n * @param onChange call this callback if expression result changed\n * @param isEqual a comparison function\n */\nexport function injectWatch<T>(\n  expression: () => T,\n  onChange: (newVal: T, prevVal: T) => unknown,\n  isEqual?: (newVal: T, prevVal: T) => boolean,\n) {\n  return injectChild(WatchModule, expression, onChange, isEqual);\n}\n\nexport class WatchModule<T> implements InjectableModule {\n\n  store = inject(Store);\n  unwatch: Function | null = null;\n  current: T | null = null;\n\n  constructor(\n    public watchExpr: () => T,\n    public onChange: (newVal: T, prevVal: T) => unknown,\n    public isEqual = isSimilar,\n  ) {}\n\n  init() {\n    const parentProvider = getInstanceMetadata(this).provider.options.parentProvider;\n    if (!parentProvider) {\n      throw new Error('This module should have a parent module');\n    }\n\n    const context = parentProvider.instance;\n    this.current = this.watchExpr.call(context);\n    this.unwatch = this.store.events.on('onMutation', () => {\n      const prev = this.current!;\n      this.current = this.watchExpr.call(context);\n      if (this.isEqual(this.current, prev)) return;\n      this.onChange.call(context, this.current, prev);\n    });\n  }\n\n  destroy() {\n    this.unwatch && this.unwatch();\n  }\n\n}\n","export function removeItems<TItem>(arr: TItem[], query: ArraySearchQuery<TItem>) {\n  const searchFn = getSearchFunction(arr, query);\n  let i = arr.length;\n  while (i--) {\n    if (searchFn(arr[i])) arr.splice(i, 1);\n  }\n}\n\nexport function updateItems<TItem>(arr: TItem[], query: ArraySearchQuery<TItem>, updateQuery: ArrayUpdateQuery<TItem>) {\n  const searchFn = getSearchFunction(arr, query);\n  const updateFn = getUpdateFunction(updateQuery);\n  for (const item of arr) {\n    if (searchFn(item)) updateFn(item);\n  }\n}\n\nexport function find<TItem>(arr: TItem[], query: ArraySearchQuery<TItem>): TItem | undefined {\n  const searchFn = getSearchFunction(arr, query);\n  return arr.find(searchFn);\n}\n\nexport function getSearchFunction<TItem>(arr: TItem[], query: ArraySearchQuery<TItem>): (item: TItem) => boolean {\n  if (typeof query === 'function') return query as (item: TItem) => boolean;\n  if (typeof query === 'object') {\n    const objQuery = query as any;\n    const keys = Object.keys(objQuery);\n    return (item: TItem) => {\n      for (const key of keys) {\n        if (objQuery[key] !== (item as any)[key]) return false;\n      }\n      return true;\n    };\n  }\n  return (item: TItem) => (item as any)?.id === query;\n}\n\nexport function getUpdateFunction<TItem>(query: ArrayUpdateQuery<TItem>): (item: TItem) => unknown {\n  if (typeof query === 'function') return query as (item: TItem) => boolean;\n  const patch = query as object;\n  return (item: TItem) => {\n    Object.assign(item, patch);\n  };\n}\n\nexport type ArraySearchQuery<TItem> = ((item: TItem) => boolean) | (Partial<TItem>) | (TItem extends {id: infer TId } ? TId : never);\nexport type ArrayUpdateQuery<TItem> = ((item: TItem) => unknown) | Partial<TItem>;\n","export * from './isDeepEqual';\r\nexport * from './merge';\r\nexport * from './traverse';\r\nexport * from './array-helpers';\r\n","import { isPlainObject } from 'is-plain-object';\r\n\r\n/**\r\n * Compare 2 object with limited depth\r\n */\r\nexport function isDeepEqual(obj1: any, obj2: any, currentDepth: number, maxDepth: number): boolean {\r\n  if (obj1 === obj2) return true;\r\n  if (currentDepth === maxDepth) return false;\r\n  if (Array.isArray(obj1) && Array.isArray(obj2)) return isArrayEqual(obj1, obj2);\r\n  if (isPlainObject(obj1) && isPlainObject(obj2)) {\r\n    const [keys1, keys2] = [Object.keys(obj1), Object.keys(obj2)];\r\n    if (keys1.length !== keys2.length) return false;\r\n    for (const key of keys1) {\r\n      if (!isDeepEqual(obj1[key], obj2[key], currentDepth + 1, maxDepth)) return false;\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * consider isSimilar as isDeepEqual with depth 2\r\n */\r\nexport function isSimilar(obj1: any, obj2: any) {\r\n  return isDeepEqual(obj1, obj2, 0, 2);\r\n}\r\n\r\n/**\r\n * Shallow comparison of 2 arrays\r\n */\r\nfunction isArrayEqual(a: any[], b: any[]) {\r\n  if (a === b) return true;\r\n  if (a.length !== b.length) return false;\r\n  for (let i = 0; i < a.length; i++) {\r\n    if (a[i] !== b[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * Shallow compare\r\n */\r\nexport function isEqual(obj1: any, obj2: any): boolean {\r\n  return isDeepEqual(obj1, obj2, 0, 1);\r\n}\r\n","import { traverse } from './traverse';\r\n\r\nexport type GetMerge<T1, T2> = T2 & Omit<T1, keyof T2>;\r\n\r\n/**\r\n * copy props from source to targets\r\n */\r\nexport function copyProps<TSource, TTarget = {}>(source: TSource, target?: TTarget): GetMerge<TSource, TTarget> {\r\n  if (!target) target = {} as TTarget;\r\n  traverse(source as any as object, (propName, descriptor) => {\r\n    Object.defineProperty(target, propName, descriptor);\r\n  });\r\n  return target as GetMerge<TSource, TTarget>;\r\n}\r\n\r\n/**\r\n * Create and merged object\r\n * Property descriptors will be preserved\r\n * Prototype properties will be included\r\n */\r\nexport function merge<T1, T2, TResult = GetMerge<T1, T2>>(obj1: T1, obj2: T2): TResult {\r\n  const result = {};\r\n\r\n  copyProps(obj1, result);\r\n  copyProps(obj2, result);\r\n\r\n  return result as TResult;\r\n}\r\n","/**\r\n * Travers class methods and props\r\n */\r\nimport { isPlainObject } from 'is-plain-object';\r\nimport { Dict } from '../scope';\r\n\r\n// helper methods to travers class instances prototype chains\r\n\r\nexport function traverse<T extends object>(\r\n  instance: T,\r\n  cb: (propName: string, descriptor: PropertyDescriptor) => unknown,\r\n) {\r\n  let entity = instance;\r\n  const prototypes = [];\r\n\r\n  if (isPlainObject(entity)) {\r\n    prototypes.push(entity);\r\n  } else {\r\n    while (entity.constructor.name !== 'Object') {\r\n      prototypes.push(entity);\r\n      entity = Object.getPrototypeOf(entity);\r\n    }\r\n  }\r\n\r\n  const alreadyTraversed: Record<string, boolean> = {};\r\n\r\n  for (const proto of prototypes) {\r\n    const propNames = Object.getOwnPropertyNames(proto);\r\n    for (const propName of propNames) {\r\n      if (propName in alreadyTraversed) continue;\r\n      alreadyTraversed[propName] = true;\r\n      const descriptor = Object.getOwnPropertyDescriptor(proto, propName);\r\n      if (!descriptor) return;\r\n      const shouldStop = cb(propName, descriptor);\r\n      if (shouldStop) return;\r\n    }\r\n  }\r\n}\r\n\r\nexport function getDescriptors<T>(instance: T): Dict<PropertyDescriptor>{\r\n  const descriptors: Dict<PropertyDescriptor> = {}\r\n  traverse(instance as any, (propName, descriptor) => {\r\n    descriptors[propName] = descriptor;\r\n  });\r\n  return descriptors;\r\n}\r\n\r\nexport function getKeys<T>(instance: T): (keyof T)[]{\r\n  const keys: any[] = [];\r\n  traverse(instance as any, propName => {\r\n    keys.push(propName);\r\n  });\r\n  return keys;\r\n}\r\n\r\nexport function filterKeys(obj: object, filterFn: (key: string) => unknown) {\r\n  return Object.fromEntries(Object.entries(obj).filter(([key]) => filterFn(key)));\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__156__;","module.exports = __WEBPACK_EXTERNAL_MODULE__386__;","export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    ;(this.events[event] || []).forEach(i => i(...args))\n  },\n  on(event, cb) {\n    ;(this.events[event] = this.events[event] || []).push(cb)\n    return () =>\n      (this.events[event] = (this.events[event] || []).filter(i => i !== cb))\n  }\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(18);\n",""],"names":[],"sourceRoot":""}